package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PlayerPetExample {

	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    protected String orderByClause;
	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    protected List oredCriteria;

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    public PlayerPetExample() {
	    oredCriteria = new ArrayList();
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    protected PlayerPetExample(PlayerPetExample example) {
	    this.orderByClause = example.orderByClause;
	    this.oredCriteria = example.oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
	    this.orderByClause = orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    public String getOrderByClause() {
	    return orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    public List getOredCriteria() {
	    return oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    public void or(Criteria criteria) {
	    oredCriteria.add(criteria);
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    public Criteria createCriteria() {
	    Criteria criteria = createCriteriaInternal();
	    if (oredCriteria.size() == 0) {
		    oredCriteria.add(criteria);
	    }
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    protected Criteria createCriteriaInternal() {
	    Criteria criteria = new Criteria();
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    public void clear() {
	    oredCriteria.clear();
    }

	/**
     * This class was generated by Apache iBATIS ibator. This class corresponds to the database table player_pet
     * @ibatorgenerated  Tue Dec 21 10:46:52 CST 2010
     */
    public static class Criteria {
	    protected List criteriaWithoutValue;
	    protected List criteriaWithSingleValue;
	    protected List criteriaWithListValue;
	    protected List criteriaWithBetweenValue;

	    protected Criteria() {
		    super();
		    criteriaWithoutValue = new ArrayList();
		    criteriaWithSingleValue = new ArrayList();
		    criteriaWithListValue = new ArrayList();
		    criteriaWithBetweenValue = new ArrayList();
	    }

	    public boolean isValid() {
		    return criteriaWithoutValue.size() > 0
		            || criteriaWithSingleValue.size() > 0
		            || criteriaWithListValue.size() > 0
		            || criteriaWithBetweenValue.size() > 0;
	    }

	    public List getCriteriaWithoutValue() {
		    return criteriaWithoutValue;
	    }

	    public List getCriteriaWithSingleValue() {
		    return criteriaWithSingleValue;
	    }

	    public List getCriteriaWithListValue() {
		    return criteriaWithListValue;
	    }

	    public List getCriteriaWithBetweenValue() {
		    return criteriaWithBetweenValue;
	    }

	    protected void addCriterion(String condition) {
		    if (condition == null) {
			    throw new RuntimeException("Value for condition cannot be null");
		    }
		    criteriaWithoutValue.add(condition);
	    }

	    protected void addCriterion(String condition, Object value,
	            String property) {
		    if (value == null) {
			    throw new RuntimeException("Value for " + property
			            + " cannot be null");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("value", value);
		    criteriaWithSingleValue.add(map);
	    }

	    protected void addCriterion(String condition, List values,
	            String property) {
		    if (values == null || values.size() == 0) {
			    throw new RuntimeException("Value list for " + property
			            + " cannot be null or empty");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", values);
		    criteriaWithListValue.add(map);
	    }

	    protected void addCriterion(String condition, Object value1,
	            Object value2, String property) {
		    if (value1 == null || value2 == null) {
			    throw new RuntimeException("Between values for " + property
			            + " cannot be null");
		    }
		    List list = new ArrayList();
		    list.add(value1);
		    list.add(value2);
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", list);
		    criteriaWithBetweenValue.add(map);
	    }

	    public Criteria andIdIsNull() {
		    addCriterion("id is null");
		    return this;
	    }

	    public Criteria andIdIsNotNull() {
		    addCriterion("id is not null");
		    return this;
	    }

	    public Criteria andIdEqualTo(Integer value) {
		    addCriterion("id =", value, "id");
		    return this;
	    }

	    public Criteria andIdNotEqualTo(Integer value) {
		    addCriterion("id <>", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThan(Integer value) {
		    addCriterion("id >", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThanOrEqualTo(Integer value) {
		    addCriterion("id >=", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThan(Integer value) {
		    addCriterion("id <", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThanOrEqualTo(Integer value) {
		    addCriterion("id <=", value, "id");
		    return this;
	    }

	    public Criteria andIdIn(List values) {
		    addCriterion("id in", values, "id");
		    return this;
	    }

	    public Criteria andIdNotIn(List values) {
		    addCriterion("id not in", values, "id");
		    return this;
	    }

	    public Criteria andIdBetween(Integer value1, Integer value2) {
		    addCriterion("id between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andIdNotBetween(Integer value1, Integer value2) {
		    addCriterion("id not between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andPlayerIdIsNull() {
		    addCriterion("player_id is null");
		    return this;
	    }

	    public Criteria andPlayerIdIsNotNull() {
		    addCriterion("player_id is not null");
		    return this;
	    }

	    public Criteria andPlayerIdEqualTo(Integer value) {
		    addCriterion("player_id =", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdNotEqualTo(Integer value) {
		    addCriterion("player_id <>", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdGreaterThan(Integer value) {
		    addCriterion("player_id >", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
		    addCriterion("player_id >=", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdLessThan(Integer value) {
		    addCriterion("player_id <", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
		    addCriterion("player_id <=", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdIn(List values) {
		    addCriterion("player_id in", values, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdNotIn(List values) {
		    addCriterion("player_id not in", values, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
		    addCriterion("player_id between", value1, value2, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
		    addCriterion("player_id not between", value1, value2, "playerId");
		    return this;
	    }

	    public Criteria andPetIdIsNull() {
		    addCriterion("pet_id is null");
		    return this;
	    }

	    public Criteria andPetIdIsNotNull() {
		    addCriterion("pet_id is not null");
		    return this;
	    }

	    public Criteria andPetIdEqualTo(Integer value) {
		    addCriterion("pet_id =", value, "petId");
		    return this;
	    }

	    public Criteria andPetIdNotEqualTo(Integer value) {
		    addCriterion("pet_id <>", value, "petId");
		    return this;
	    }

	    public Criteria andPetIdGreaterThan(Integer value) {
		    addCriterion("pet_id >", value, "petId");
		    return this;
	    }

	    public Criteria andPetIdGreaterThanOrEqualTo(Integer value) {
		    addCriterion("pet_id >=", value, "petId");
		    return this;
	    }

	    public Criteria andPetIdLessThan(Integer value) {
		    addCriterion("pet_id <", value, "petId");
		    return this;
	    }

	    public Criteria andPetIdLessThanOrEqualTo(Integer value) {
		    addCriterion("pet_id <=", value, "petId");
		    return this;
	    }

	    public Criteria andPetIdIn(List values) {
		    addCriterion("pet_id in", values, "petId");
		    return this;
	    }

	    public Criteria andPetIdNotIn(List values) {
		    addCriterion("pet_id not in", values, "petId");
		    return this;
	    }

	    public Criteria andPetIdBetween(Integer value1, Integer value2) {
		    addCriterion("pet_id between", value1, value2, "petId");
		    return this;
	    }

	    public Criteria andPetIdNotBetween(Integer value1, Integer value2) {
		    addCriterion("pet_id not between", value1, value2, "petId");
		    return this;
	    }

	    public Criteria andCustomNameIsNull() {
		    addCriterion("custom_name is null");
		    return this;
	    }

	    public Criteria andCustomNameIsNotNull() {
		    addCriterion("custom_name is not null");
		    return this;
	    }

	    public Criteria andCustomNameEqualTo(String value) {
		    addCriterion("custom_name =", value, "customName");
		    return this;
	    }

	    public Criteria andCustomNameNotEqualTo(String value) {
		    addCriterion("custom_name <>", value, "customName");
		    return this;
	    }

	    public Criteria andCustomNameGreaterThan(String value) {
		    addCriterion("custom_name >", value, "customName");
		    return this;
	    }

	    public Criteria andCustomNameGreaterThanOrEqualTo(String value) {
		    addCriterion("custom_name >=", value, "customName");
		    return this;
	    }

	    public Criteria andCustomNameLessThan(String value) {
		    addCriterion("custom_name <", value, "customName");
		    return this;
	    }

	    public Criteria andCustomNameLessThanOrEqualTo(String value) {
		    addCriterion("custom_name <=", value, "customName");
		    return this;
	    }

	    public Criteria andCustomNameLike(String value) {
		    addCriterion("custom_name like", value, "customName");
		    return this;
	    }

	    public Criteria andCustomNameNotLike(String value) {
		    addCriterion("custom_name not like", value, "customName");
		    return this;
	    }

	    public Criteria andCustomNameIn(List values) {
		    addCriterion("custom_name in", values, "customName");
		    return this;
	    }

	    public Criteria andCustomNameNotIn(List values) {
		    addCriterion("custom_name not in", values, "customName");
		    return this;
	    }

	    public Criteria andCustomNameBetween(String value1, String value2) {
		    addCriterion("custom_name between", value1, value2, "customName");
		    return this;
	    }

	    public Criteria andCustomNameNotBetween(String value1, String value2) {
		    addCriterion("custom_name not between", value1, value2,
		            "customName");
		    return this;
	    }

	    public Criteria andIsUseIsNull() {
		    addCriterion("is_use is null");
		    return this;
	    }

	    public Criteria andIsUseIsNotNull() {
		    addCriterion("is_use is not null");
		    return this;
	    }

	    public Criteria andIsUseEqualTo(Boolean value) {
		    addCriterion("is_use =", value, "isUse");
		    return this;
	    }

	    public Criteria andIsUseNotEqualTo(Boolean value) {
		    addCriterion("is_use <>", value, "isUse");
		    return this;
	    }

	    public Criteria andIsUseGreaterThan(Boolean value) {
		    addCriterion("is_use >", value, "isUse");
		    return this;
	    }

	    public Criteria andIsUseGreaterThanOrEqualTo(Boolean value) {
		    addCriterion("is_use >=", value, "isUse");
		    return this;
	    }

	    public Criteria andIsUseLessThan(Boolean value) {
		    addCriterion("is_use <", value, "isUse");
		    return this;
	    }

	    public Criteria andIsUseLessThanOrEqualTo(Boolean value) {
		    addCriterion("is_use <=", value, "isUse");
		    return this;
	    }

	    public Criteria andIsUseIn(List values) {
		    addCriterion("is_use in", values, "isUse");
		    return this;
	    }

	    public Criteria andIsUseNotIn(List values) {
		    addCriterion("is_use not in", values, "isUse");
		    return this;
	    }

	    public Criteria andIsUseBetween(Boolean value1, Boolean value2) {
		    addCriterion("is_use between", value1, value2, "isUse");
		    return this;
	    }

	    public Criteria andIsUseNotBetween(Boolean value1, Boolean value2) {
		    addCriterion("is_use not between", value1, value2, "isUse");
		    return this;
	    }

	    public Criteria andLevelIsNull() {
		    addCriterion("level is null");
		    return this;
	    }

	    public Criteria andLevelIsNotNull() {
		    addCriterion("level is not null");
		    return this;
	    }

	    public Criteria andLevelEqualTo(Integer value) {
		    addCriterion("level =", value, "level");
		    return this;
	    }

	    public Criteria andLevelNotEqualTo(Integer value) {
		    addCriterion("level <>", value, "level");
		    return this;
	    }

	    public Criteria andLevelGreaterThan(Integer value) {
		    addCriterion("level >", value, "level");
		    return this;
	    }

	    public Criteria andLevelGreaterThanOrEqualTo(Integer value) {
		    addCriterion("level >=", value, "level");
		    return this;
	    }

	    public Criteria andLevelLessThan(Integer value) {
		    addCriterion("level <", value, "level");
		    return this;
	    }

	    public Criteria andLevelLessThanOrEqualTo(Integer value) {
		    addCriterion("level <=", value, "level");
		    return this;
	    }

	    public Criteria andLevelIn(List values) {
		    addCriterion("level in", values, "level");
		    return this;
	    }

	    public Criteria andLevelNotIn(List values) {
		    addCriterion("level not in", values, "level");
		    return this;
	    }

	    public Criteria andLevelBetween(Integer value1, Integer value2) {
		    addCriterion("level between", value1, value2, "level");
		    return this;
	    }

	    public Criteria andLevelNotBetween(Integer value1, Integer value2) {
		    addCriterion("level not between", value1, value2, "level");
		    return this;
	    }

	    public Criteria andExpIsNull() {
		    addCriterion("exp is null");
		    return this;
	    }

	    public Criteria andExpIsNotNull() {
		    addCriterion("exp is not null");
		    return this;
	    }

	    public Criteria andExpEqualTo(Integer value) {
		    addCriterion("exp =", value, "exp");
		    return this;
	    }

	    public Criteria andExpNotEqualTo(Integer value) {
		    addCriterion("exp <>", value, "exp");
		    return this;
	    }

	    public Criteria andExpGreaterThan(Integer value) {
		    addCriterion("exp >", value, "exp");
		    return this;
	    }

	    public Criteria andExpGreaterThanOrEqualTo(Integer value) {
		    addCriterion("exp >=", value, "exp");
		    return this;
	    }

	    public Criteria andExpLessThan(Integer value) {
		    addCriterion("exp <", value, "exp");
		    return this;
	    }

	    public Criteria andExpLessThanOrEqualTo(Integer value) {
		    addCriterion("exp <=", value, "exp");
		    return this;
	    }

	    public Criteria andExpIn(List values) {
		    addCriterion("exp in", values, "exp");
		    return this;
	    }

	    public Criteria andExpNotIn(List values) {
		    addCriterion("exp not in", values, "exp");
		    return this;
	    }

	    public Criteria andExpBetween(Integer value1, Integer value2) {
		    addCriterion("exp between", value1, value2, "exp");
		    return this;
	    }

	    public Criteria andExpNotBetween(Integer value1, Integer value2) {
		    addCriterion("exp not between", value1, value2, "exp");
		    return this;
	    }

	    public Criteria andHungryIsNull() {
		    addCriterion("hungry is null");
		    return this;
	    }

	    public Criteria andHungryIsNotNull() {
		    addCriterion("hungry is not null");
		    return this;
	    }

	    public Criteria andHungryEqualTo(Integer value) {
		    addCriterion("hungry =", value, "hungry");
		    return this;
	    }

	    public Criteria andHungryNotEqualTo(Integer value) {
		    addCriterion("hungry <>", value, "hungry");
		    return this;
	    }

	    public Criteria andHungryGreaterThan(Integer value) {
		    addCriterion("hungry >", value, "hungry");
		    return this;
	    }

	    public Criteria andHungryGreaterThanOrEqualTo(Integer value) {
		    addCriterion("hungry >=", value, "hungry");
		    return this;
	    }

	    public Criteria andHungryLessThan(Integer value) {
		    addCriterion("hungry <", value, "hungry");
		    return this;
	    }

	    public Criteria andHungryLessThanOrEqualTo(Integer value) {
		    addCriterion("hungry <=", value, "hungry");
		    return this;
	    }

	    public Criteria andHungryIn(List values) {
		    addCriterion("hungry in", values, "hungry");
		    return this;
	    }

	    public Criteria andHungryNotIn(List values) {
		    addCriterion("hungry not in", values, "hungry");
		    return this;
	    }

	    public Criteria andHungryBetween(Integer value1, Integer value2) {
		    addCriterion("hungry between", value1, value2, "hungry");
		    return this;
	    }

	    public Criteria andHungryNotBetween(Integer value1, Integer value2) {
		    addCriterion("hungry not between", value1, value2, "hungry");
		    return this;
	    }

	    public Criteria andAttackIsNull() {
		    addCriterion("attack is null");
		    return this;
	    }

	    public Criteria andAttackIsNotNull() {
		    addCriterion("attack is not null");
		    return this;
	    }

	    public Criteria andAttackEqualTo(Integer value) {
		    addCriterion("attack =", value, "attack");
		    return this;
	    }

	    public Criteria andAttackNotEqualTo(Integer value) {
		    addCriterion("attack <>", value, "attack");
		    return this;
	    }

	    public Criteria andAttackGreaterThan(Integer value) {
		    addCriterion("attack >", value, "attack");
		    return this;
	    }

	    public Criteria andAttackGreaterThanOrEqualTo(Integer value) {
		    addCriterion("attack >=", value, "attack");
		    return this;
	    }

	    public Criteria andAttackLessThan(Integer value) {
		    addCriterion("attack <", value, "attack");
		    return this;
	    }

	    public Criteria andAttackLessThanOrEqualTo(Integer value) {
		    addCriterion("attack <=", value, "attack");
		    return this;
	    }

	    public Criteria andAttackIn(List values) {
		    addCriterion("attack in", values, "attack");
		    return this;
	    }

	    public Criteria andAttackNotIn(List values) {
		    addCriterion("attack not in", values, "attack");
		    return this;
	    }

	    public Criteria andAttackBetween(Integer value1, Integer value2) {
		    addCriterion("attack between", value1, value2, "attack");
		    return this;
	    }

	    public Criteria andAttackNotBetween(Integer value1, Integer value2) {
		    addCriterion("attack not between", value1, value2, "attack");
		    return this;
	    }

	    public Criteria andDefenceIsNull() {
		    addCriterion("defence is null");
		    return this;
	    }

	    public Criteria andDefenceIsNotNull() {
		    addCriterion("defence is not null");
		    return this;
	    }

	    public Criteria andDefenceEqualTo(Integer value) {
		    addCriterion("defence =", value, "defence");
		    return this;
	    }

	    public Criteria andDefenceNotEqualTo(Integer value) {
		    addCriterion("defence <>", value, "defence");
		    return this;
	    }

	    public Criteria andDefenceGreaterThan(Integer value) {
		    addCriterion("defence >", value, "defence");
		    return this;
	    }

	    public Criteria andDefenceGreaterThanOrEqualTo(Integer value) {
		    addCriterion("defence >=", value, "defence");
		    return this;
	    }

	    public Criteria andDefenceLessThan(Integer value) {
		    addCriterion("defence <", value, "defence");
		    return this;
	    }

	    public Criteria andDefenceLessThanOrEqualTo(Integer value) {
		    addCriterion("defence <=", value, "defence");
		    return this;
	    }

	    public Criteria andDefenceIn(List values) {
		    addCriterion("defence in", values, "defence");
		    return this;
	    }

	    public Criteria andDefenceNotIn(List values) {
		    addCriterion("defence not in", values, "defence");
		    return this;
	    }

	    public Criteria andDefenceBetween(Integer value1, Integer value2) {
		    addCriterion("defence between", value1, value2, "defence");
		    return this;
	    }

	    public Criteria andDefenceNotBetween(Integer value1, Integer value2) {
		    addCriterion("defence not between", value1, value2, "defence");
		    return this;
	    }

	    public Criteria andAgilityIsNull() {
		    addCriterion("agility is null");
		    return this;
	    }

	    public Criteria andAgilityIsNotNull() {
		    addCriterion("agility is not null");
		    return this;
	    }

	    public Criteria andAgilityEqualTo(Integer value) {
		    addCriterion("agility =", value, "agility");
		    return this;
	    }

	    public Criteria andAgilityNotEqualTo(Integer value) {
		    addCriterion("agility <>", value, "agility");
		    return this;
	    }

	    public Criteria andAgilityGreaterThan(Integer value) {
		    addCriterion("agility >", value, "agility");
		    return this;
	    }

	    public Criteria andAgilityGreaterThanOrEqualTo(Integer value) {
		    addCriterion("agility >=", value, "agility");
		    return this;
	    }

	    public Criteria andAgilityLessThan(Integer value) {
		    addCriterion("agility <", value, "agility");
		    return this;
	    }

	    public Criteria andAgilityLessThanOrEqualTo(Integer value) {
		    addCriterion("agility <=", value, "agility");
		    return this;
	    }

	    public Criteria andAgilityIn(List values) {
		    addCriterion("agility in", values, "agility");
		    return this;
	    }

	    public Criteria andAgilityNotIn(List values) {
		    addCriterion("agility not in", values, "agility");
		    return this;
	    }

	    public Criteria andAgilityBetween(Integer value1, Integer value2) {
		    addCriterion("agility between", value1, value2, "agility");
		    return this;
	    }

	    public Criteria andAgilityNotBetween(Integer value1, Integer value2) {
		    addCriterion("agility not between", value1, value2, "agility");
		    return this;
	    }

	    public Criteria andTalentIsNull() {
		    addCriterion("talent is null");
		    return this;
	    }

	    public Criteria andTalentIsNotNull() {
		    addCriterion("talent is not null");
		    return this;
	    }

	    public Criteria andTalentEqualTo(String value) {
		    addCriterion("talent =", value, "talent");
		    return this;
	    }

	    public Criteria andTalentNotEqualTo(String value) {
		    addCriterion("talent <>", value, "talent");
		    return this;
	    }

	    public Criteria andTalentGreaterThan(String value) {
		    addCriterion("talent >", value, "talent");
		    return this;
	    }

	    public Criteria andTalentGreaterThanOrEqualTo(String value) {
		    addCriterion("talent >=", value, "talent");
		    return this;
	    }

	    public Criteria andTalentLessThan(String value) {
		    addCriterion("talent <", value, "talent");
		    return this;
	    }

	    public Criteria andTalentLessThanOrEqualTo(String value) {
		    addCriterion("talent <=", value, "talent");
		    return this;
	    }

	    public Criteria andTalentLike(String value) {
		    addCriterion("talent like", value, "talent");
		    return this;
	    }

	    public Criteria andTalentNotLike(String value) {
		    addCriterion("talent not like", value, "talent");
		    return this;
	    }

	    public Criteria andTalentIn(List values) {
		    addCriterion("talent in", values, "talent");
		    return this;
	    }

	    public Criteria andTalentNotIn(List values) {
		    addCriterion("talent not in", values, "talent");
		    return this;
	    }

	    public Criteria andTalentBetween(String value1, String value2) {
		    addCriterion("talent between", value1, value2, "talent");
		    return this;
	    }

	    public Criteria andTalentNotBetween(String value1, String value2) {
		    addCriterion("talent not between", value1, value2, "talent");
		    return this;
	    }

	    public Criteria andUpdatedTimeIsNull() {
		    addCriterion("updated_time is null");
		    return this;
	    }

	    public Criteria andUpdatedTimeIsNotNull() {
		    addCriterion("updated_time is not null");
		    return this;
	    }

	    public Criteria andUpdatedTimeEqualTo(Date value) {
		    addCriterion("updated_time =", value, "updatedTime");
		    return this;
	    }

	    public Criteria andUpdatedTimeNotEqualTo(Date value) {
		    addCriterion("updated_time <>", value, "updatedTime");
		    return this;
	    }

	    public Criteria andUpdatedTimeGreaterThan(Date value) {
		    addCriterion("updated_time >", value, "updatedTime");
		    return this;
	    }

	    public Criteria andUpdatedTimeGreaterThanOrEqualTo(Date value) {
		    addCriterion("updated_time >=", value, "updatedTime");
		    return this;
	    }

	    public Criteria andUpdatedTimeLessThan(Date value) {
		    addCriterion("updated_time <", value, "updatedTime");
		    return this;
	    }

	    public Criteria andUpdatedTimeLessThanOrEqualTo(Date value) {
		    addCriterion("updated_time <=", value, "updatedTime");
		    return this;
	    }

	    public Criteria andUpdatedTimeIn(List values) {
		    addCriterion("updated_time in", values, "updatedTime");
		    return this;
	    }

	    public Criteria andUpdatedTimeNotIn(List values) {
		    addCriterion("updated_time not in", values, "updatedTime");
		    return this;
	    }

	    public Criteria andUpdatedTimeBetween(Date value1, Date value2) {
		    addCriterion("updated_time between", value1, value2, "updatedTime");
		    return this;
	    }

	    public Criteria andUpdatedTimeNotBetween(Date value1, Date value2) {
		    addCriterion("updated_time not between", value1, value2,
		            "updatedTime");
		    return this;
	    }

	    public Criteria andCreatedTimeIsNull() {
		    addCriterion("created_time is null");
		    return this;
	    }

	    public Criteria andCreatedTimeIsNotNull() {
		    addCriterion("created_time is not null");
		    return this;
	    }

	    public Criteria andCreatedTimeEqualTo(Date value) {
		    addCriterion("created_time =", value, "createdTime");
		    return this;
	    }

	    public Criteria andCreatedTimeNotEqualTo(Date value) {
		    addCriterion("created_time <>", value, "createdTime");
		    return this;
	    }

	    public Criteria andCreatedTimeGreaterThan(Date value) {
		    addCriterion("created_time >", value, "createdTime");
		    return this;
	    }

	    public Criteria andCreatedTimeGreaterThanOrEqualTo(Date value) {
		    addCriterion("created_time >=", value, "createdTime");
		    return this;
	    }

	    public Criteria andCreatedTimeLessThan(Date value) {
		    addCriterion("created_time <", value, "createdTime");
		    return this;
	    }

	    public Criteria andCreatedTimeLessThanOrEqualTo(Date value) {
		    addCriterion("created_time <=", value, "createdTime");
		    return this;
	    }

	    public Criteria andCreatedTimeIn(List values) {
		    addCriterion("created_time in", values, "createdTime");
		    return this;
	    }

	    public Criteria andCreatedTimeNotIn(List values) {
		    addCriterion("created_time not in", values, "createdTime");
		    return this;
	    }

	    public Criteria andCreatedTimeBetween(Date value1, Date value2) {
		    addCriterion("created_time between", value1, value2, "createdTime");
		    return this;
	    }

	    public Criteria andCreatedTimeNotBetween(Date value1, Date value2) {
		    addCriterion("created_time not between", value1, value2,
		            "createdTime");
		    return this;
	    }

	    public Criteria andInExchangeIsNull() {
		    addCriterion("in_exchange is null");
		    return this;
	    }

	    public Criteria andInExchangeIsNotNull() {
		    addCriterion("in_exchange is not null");
		    return this;
	    }

	    public Criteria andInExchangeEqualTo(Boolean value) {
		    addCriterion("in_exchange =", value, "inExchange");
		    return this;
	    }

	    public Criteria andInExchangeNotEqualTo(Boolean value) {
		    addCriterion("in_exchange <>", value, "inExchange");
		    return this;
	    }

	    public Criteria andInExchangeGreaterThan(Boolean value) {
		    addCriterion("in_exchange >", value, "inExchange");
		    return this;
	    }

	    public Criteria andInExchangeGreaterThanOrEqualTo(Boolean value) {
		    addCriterion("in_exchange >=", value, "inExchange");
		    return this;
	    }

	    public Criteria andInExchangeLessThan(Boolean value) {
		    addCriterion("in_exchange <", value, "inExchange");
		    return this;
	    }

	    public Criteria andInExchangeLessThanOrEqualTo(Boolean value) {
		    addCriterion("in_exchange <=", value, "inExchange");
		    return this;
	    }

	    public Criteria andInExchangeIn(List values) {
		    addCriterion("in_exchange in", values, "inExchange");
		    return this;
	    }

	    public Criteria andInExchangeNotIn(List values) {
		    addCriterion("in_exchange not in", values, "inExchange");
		    return this;
	    }

	    public Criteria andInExchangeBetween(Boolean value1, Boolean value2) {
		    addCriterion("in_exchange between", value1, value2, "inExchange");
		    return this;
	    }

	    public Criteria andInExchangeNotBetween(Boolean value1, Boolean value2) {
		    addCriterion("in_exchange not between", value1, value2,
		            "inExchange");
		    return this;
	    }

	    public Criteria andExchangeDateIsNull() {
		    addCriterion("exchange_date is null");
		    return this;
	    }

	    public Criteria andExchangeDateIsNotNull() {
		    addCriterion("exchange_date is not null");
		    return this;
	    }

	    public Criteria andExchangeDateEqualTo(Date value) {
		    addCriterion("exchange_date =", value, "exchangeDate");
		    return this;
	    }

	    public Criteria andExchangeDateNotEqualTo(Date value) {
		    addCriterion("exchange_date <>", value, "exchangeDate");
		    return this;
	    }

	    public Criteria andExchangeDateGreaterThan(Date value) {
		    addCriterion("exchange_date >", value, "exchangeDate");
		    return this;
	    }

	    public Criteria andExchangeDateGreaterThanOrEqualTo(Date value) {
		    addCriterion("exchange_date >=", value, "exchangeDate");
		    return this;
	    }

	    public Criteria andExchangeDateLessThan(Date value) {
		    addCriterion("exchange_date <", value, "exchangeDate");
		    return this;
	    }

	    public Criteria andExchangeDateLessThanOrEqualTo(Date value) {
		    addCriterion("exchange_date <=", value, "exchangeDate");
		    return this;
	    }

	    public Criteria andExchangeDateIn(List values) {
		    addCriterion("exchange_date in", values, "exchangeDate");
		    return this;
	    }

	    public Criteria andExchangeDateNotIn(List values) {
		    addCriterion("exchange_date not in", values, "exchangeDate");
		    return this;
	    }

	    public Criteria andExchangeDateBetween(Date value1, Date value2) {
		    addCriterion("exchange_date between", value1, value2,
		            "exchangeDate");
		    return this;
	    }

	    public Criteria andExchangeDateNotBetween(Date value1, Date value2) {
		    addCriterion("exchange_date not between", value1, value2,
		            "exchangeDate");
		    return this;
	    }

	    public Criteria andMoneyTypeIsNull() {
		    addCriterion("money_type is null");
		    return this;
	    }

	    public Criteria andMoneyTypeIsNotNull() {
		    addCriterion("money_type is not null");
		    return this;
	    }

	    public Criteria andMoneyTypeEqualTo(Boolean value) {
		    addCriterion("money_type =", value, "moneyType");
		    return this;
	    }

	    public Criteria andMoneyTypeNotEqualTo(Boolean value) {
		    addCriterion("money_type <>", value, "moneyType");
		    return this;
	    }

	    public Criteria andMoneyTypeGreaterThan(Boolean value) {
		    addCriterion("money_type >", value, "moneyType");
		    return this;
	    }

	    public Criteria andMoneyTypeGreaterThanOrEqualTo(Boolean value) {
		    addCriterion("money_type >=", value, "moneyType");
		    return this;
	    }

	    public Criteria andMoneyTypeLessThan(Boolean value) {
		    addCriterion("money_type <", value, "moneyType");
		    return this;
	    }

	    public Criteria andMoneyTypeLessThanOrEqualTo(Boolean value) {
		    addCriterion("money_type <=", value, "moneyType");
		    return this;
	    }

	    public Criteria andMoneyTypeIn(List values) {
		    addCriterion("money_type in", values, "moneyType");
		    return this;
	    }

	    public Criteria andMoneyTypeNotIn(List values) {
		    addCriterion("money_type not in", values, "moneyType");
		    return this;
	    }

	    public Criteria andMoneyTypeBetween(Boolean value1, Boolean value2) {
		    addCriterion("money_type between", value1, value2, "moneyType");
		    return this;
	    }

	    public Criteria andMoneyTypeNotBetween(Boolean value1, Boolean value2) {
		    addCriterion("money_type not between", value1, value2, "moneyType");
		    return this;
	    }

	    public Criteria andMoneyIsNull() {
		    addCriterion("money is null");
		    return this;
	    }

	    public Criteria andMoneyIsNotNull() {
		    addCriterion("money is not null");
		    return this;
	    }

	    public Criteria andMoneyEqualTo(Integer value) {
		    addCriterion("money =", value, "money");
		    return this;
	    }

	    public Criteria andMoneyNotEqualTo(Integer value) {
		    addCriterion("money <>", value, "money");
		    return this;
	    }

	    public Criteria andMoneyGreaterThan(Integer value) {
		    addCriterion("money >", value, "money");
		    return this;
	    }

	    public Criteria andMoneyGreaterThanOrEqualTo(Integer value) {
		    addCriterion("money >=", value, "money");
		    return this;
	    }

	    public Criteria andMoneyLessThan(Integer value) {
		    addCriterion("money <", value, "money");
		    return this;
	    }

	    public Criteria andMoneyLessThanOrEqualTo(Integer value) {
		    addCriterion("money <=", value, "money");
		    return this;
	    }

	    public Criteria andMoneyIn(List values) {
		    addCriterion("money in", values, "money");
		    return this;
	    }

	    public Criteria andMoneyNotIn(List values) {
		    addCriterion("money not in", values, "money");
		    return this;
	    }

	    public Criteria andMoneyBetween(Integer value1, Integer value2) {
		    addCriterion("money between", value1, value2, "money");
		    return this;
	    }

	    public Criteria andMoneyNotBetween(Integer value1, Integer value2) {
		    addCriterion("money not between", value1, value2, "money");
		    return this;
	    }
    }
}