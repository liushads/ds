package com.ppsea.ds.data.dao;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.ppsea.ds.data.model.MissionPre;
import com.ppsea.ds.data.model.MissionPreExample;

public class MissionPreDAOImpl implements MissionPreDAO {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    public MissionPreDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    public Integer insert(MissionPre record) throws SQLException {
        Object newKey = sqlMapClient.insert("mission_pre.abatorgenerated_insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    public int updateByPrimaryKey(MissionPre record) throws SQLException {
        int rows = sqlMapClient.update("mission_pre.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    public int updateByPrimaryKeySelective(MissionPre record) throws SQLException {
        int rows = sqlMapClient.update("mission_pre.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    @SuppressWarnings("unchecked")
    public List<MissionPre> selectByExample(MissionPreExample example) throws SQLException {
        List<MissionPre> list = (List<MissionPre>) sqlMapClient.queryForList("mission_pre.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    public MissionPre selectByPrimaryKey(Integer id) throws SQLException {
        MissionPre key = new MissionPre();
        key.setId(id);
        MissionPre record = (MissionPre) sqlMapClient.queryForObject("mission_pre.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    public int deleteByExample(MissionPreExample example) throws SQLException {
        int rows = sqlMapClient.delete("mission_pre.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    public int deleteByPrimaryKey(Integer id) throws SQLException {
        MissionPre key = new MissionPre();
        key.setId(id);
        int rows = sqlMapClient.delete("mission_pre.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    public int countByExample(MissionPreExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("mission_pre.abatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    public int updateByExampleSelective(MissionPre record, MissionPreExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("mission_pre.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    public int updateByExample(MissionPre record, MissionPreExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("mission_pre.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table mission_pre
     *
     * @abatorgenerated Sun Dec 21 16:00:47 CST 2008
     */
    private static class UpdateByExampleParms extends MissionPreExample {
        private Object record;

        public UpdateByExampleParms(Object record, MissionPreExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}