package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ItemDecomposeExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	public ItemDecomposeExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	protected ItemDecomposeExample(ItemDecomposeExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table item_decompose
	 * @ibatorgenerated  Sun Jan 20 23:00:46 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andColorIsNull() {
			addCriterion("color is null");
			return this;
		}

		public Criteria andColorIsNotNull() {
			addCriterion("color is not null");
			return this;
		}

		public Criteria andColorEqualTo(Integer value) {
			addCriterion("color =", value, "color");
			return this;
		}

		public Criteria andColorNotEqualTo(Integer value) {
			addCriterion("color <>", value, "color");
			return this;
		}

		public Criteria andColorGreaterThan(Integer value) {
			addCriterion("color >", value, "color");
			return this;
		}

		public Criteria andColorGreaterThanOrEqualTo(Integer value) {
			addCriterion("color >=", value, "color");
			return this;
		}

		public Criteria andColorLessThan(Integer value) {
			addCriterion("color <", value, "color");
			return this;
		}

		public Criteria andColorLessThanOrEqualTo(Integer value) {
			addCriterion("color <=", value, "color");
			return this;
		}

		public Criteria andColorIn(List values) {
			addCriterion("color in", values, "color");
			return this;
		}

		public Criteria andColorNotIn(List values) {
			addCriterion("color not in", values, "color");
			return this;
		}

		public Criteria andColorBetween(Integer value1, Integer value2) {
			addCriterion("color between", value1, value2, "color");
			return this;
		}

		public Criteria andColorNotBetween(Integer value1, Integer value2) {
			addCriterion("color not between", value1, value2, "color");
			return this;
		}

		public Criteria andItemLevelMinIsNull() {
			addCriterion("item_level_min is null");
			return this;
		}

		public Criteria andItemLevelMinIsNotNull() {
			addCriterion("item_level_min is not null");
			return this;
		}

		public Criteria andItemLevelMinEqualTo(Integer value) {
			addCriterion("item_level_min =", value, "itemLevelMin");
			return this;
		}

		public Criteria andItemLevelMinNotEqualTo(Integer value) {
			addCriterion("item_level_min <>", value, "itemLevelMin");
			return this;
		}

		public Criteria andItemLevelMinGreaterThan(Integer value) {
			addCriterion("item_level_min >", value, "itemLevelMin");
			return this;
		}

		public Criteria andItemLevelMinGreaterThanOrEqualTo(Integer value) {
			addCriterion("item_level_min >=", value, "itemLevelMin");
			return this;
		}

		public Criteria andItemLevelMinLessThan(Integer value) {
			addCriterion("item_level_min <", value, "itemLevelMin");
			return this;
		}

		public Criteria andItemLevelMinLessThanOrEqualTo(Integer value) {
			addCriterion("item_level_min <=", value, "itemLevelMin");
			return this;
		}

		public Criteria andItemLevelMinIn(List values) {
			addCriterion("item_level_min in", values, "itemLevelMin");
			return this;
		}

		public Criteria andItemLevelMinNotIn(List values) {
			addCriterion("item_level_min not in", values, "itemLevelMin");
			return this;
		}

		public Criteria andItemLevelMinBetween(Integer value1, Integer value2) {
			addCriterion("item_level_min between", value1, value2,
					"itemLevelMin");
			return this;
		}

		public Criteria andItemLevelMinNotBetween(Integer value1, Integer value2) {
			addCriterion("item_level_min not between", value1, value2,
					"itemLevelMin");
			return this;
		}

		public Criteria andItemLevelMaxIsNull() {
			addCriterion("item_level_max is null");
			return this;
		}

		public Criteria andItemLevelMaxIsNotNull() {
			addCriterion("item_level_max is not null");
			return this;
		}

		public Criteria andItemLevelMaxEqualTo(Integer value) {
			addCriterion("item_level_max =", value, "itemLevelMax");
			return this;
		}

		public Criteria andItemLevelMaxNotEqualTo(Integer value) {
			addCriterion("item_level_max <>", value, "itemLevelMax");
			return this;
		}

		public Criteria andItemLevelMaxGreaterThan(Integer value) {
			addCriterion("item_level_max >", value, "itemLevelMax");
			return this;
		}

		public Criteria andItemLevelMaxGreaterThanOrEqualTo(Integer value) {
			addCriterion("item_level_max >=", value, "itemLevelMax");
			return this;
		}

		public Criteria andItemLevelMaxLessThan(Integer value) {
			addCriterion("item_level_max <", value, "itemLevelMax");
			return this;
		}

		public Criteria andItemLevelMaxLessThanOrEqualTo(Integer value) {
			addCriterion("item_level_max <=", value, "itemLevelMax");
			return this;
		}

		public Criteria andItemLevelMaxIn(List values) {
			addCriterion("item_level_max in", values, "itemLevelMax");
			return this;
		}

		public Criteria andItemLevelMaxNotIn(List values) {
			addCriterion("item_level_max not in", values, "itemLevelMax");
			return this;
		}

		public Criteria andItemLevelMaxBetween(Integer value1, Integer value2) {
			addCriterion("item_level_max between", value1, value2,
					"itemLevelMax");
			return this;
		}

		public Criteria andItemLevelMaxNotBetween(Integer value1, Integer value2) {
			addCriterion("item_level_max not between", value1, value2,
					"itemLevelMax");
			return this;
		}

		public Criteria andCopperIsNull() {
			addCriterion("copper is null");
			return this;
		}

		public Criteria andCopperIsNotNull() {
			addCriterion("copper is not null");
			return this;
		}

		public Criteria andCopperEqualTo(Integer value) {
			addCriterion("copper =", value, "copper");
			return this;
		}

		public Criteria andCopperNotEqualTo(Integer value) {
			addCriterion("copper <>", value, "copper");
			return this;
		}

		public Criteria andCopperGreaterThan(Integer value) {
			addCriterion("copper >", value, "copper");
			return this;
		}

		public Criteria andCopperGreaterThanOrEqualTo(Integer value) {
			addCriterion("copper >=", value, "copper");
			return this;
		}

		public Criteria andCopperLessThan(Integer value) {
			addCriterion("copper <", value, "copper");
			return this;
		}

		public Criteria andCopperLessThanOrEqualTo(Integer value) {
			addCriterion("copper <=", value, "copper");
			return this;
		}

		public Criteria andCopperIn(List values) {
			addCriterion("copper in", values, "copper");
			return this;
		}

		public Criteria andCopperNotIn(List values) {
			addCriterion("copper not in", values, "copper");
			return this;
		}

		public Criteria andCopperBetween(Integer value1, Integer value2) {
			addCriterion("copper between", value1, value2, "copper");
			return this;
		}

		public Criteria andCopperNotBetween(Integer value1, Integer value2) {
			addCriterion("copper not between", value1, value2, "copper");
			return this;
		}

		public Criteria andGoldIsNull() {
			addCriterion("gold is null");
			return this;
		}

		public Criteria andGoldIsNotNull() {
			addCriterion("gold is not null");
			return this;
		}

		public Criteria andGoldEqualTo(Integer value) {
			addCriterion("gold =", value, "gold");
			return this;
		}

		public Criteria andGoldNotEqualTo(Integer value) {
			addCriterion("gold <>", value, "gold");
			return this;
		}

		public Criteria andGoldGreaterThan(Integer value) {
			addCriterion("gold >", value, "gold");
			return this;
		}

		public Criteria andGoldGreaterThanOrEqualTo(Integer value) {
			addCriterion("gold >=", value, "gold");
			return this;
		}

		public Criteria andGoldLessThan(Integer value) {
			addCriterion("gold <", value, "gold");
			return this;
		}

		public Criteria andGoldLessThanOrEqualTo(Integer value) {
			addCriterion("gold <=", value, "gold");
			return this;
		}

		public Criteria andGoldIn(List values) {
			addCriterion("gold in", values, "gold");
			return this;
		}

		public Criteria andGoldNotIn(List values) {
			addCriterion("gold not in", values, "gold");
			return this;
		}

		public Criteria andGoldBetween(Integer value1, Integer value2) {
			addCriterion("gold between", value1, value2, "gold");
			return this;
		}

		public Criteria andGoldNotBetween(Integer value1, Integer value2) {
			addCriterion("gold not between", value1, value2, "gold");
			return this;
		}

		public Criteria andItemNumIsNull() {
			addCriterion("item_num is null");
			return this;
		}

		public Criteria andItemNumIsNotNull() {
			addCriterion("item_num is not null");
			return this;
		}

		public Criteria andItemNumEqualTo(String value) {
			addCriterion("item_num =", value, "itemNum");
			return this;
		}

		public Criteria andItemNumNotEqualTo(String value) {
			addCriterion("item_num <>", value, "itemNum");
			return this;
		}

		public Criteria andItemNumGreaterThan(String value) {
			addCriterion("item_num >", value, "itemNum");
			return this;
		}

		public Criteria andItemNumGreaterThanOrEqualTo(String value) {
			addCriterion("item_num >=", value, "itemNum");
			return this;
		}

		public Criteria andItemNumLessThan(String value) {
			addCriterion("item_num <", value, "itemNum");
			return this;
		}

		public Criteria andItemNumLessThanOrEqualTo(String value) {
			addCriterion("item_num <=", value, "itemNum");
			return this;
		}

		public Criteria andItemNumLike(String value) {
			addCriterion("item_num like", value, "itemNum");
			return this;
		}

		public Criteria andItemNumNotLike(String value) {
			addCriterion("item_num not like", value, "itemNum");
			return this;
		}

		public Criteria andItemNumIn(List values) {
			addCriterion("item_num in", values, "itemNum");
			return this;
		}

		public Criteria andItemNumNotIn(List values) {
			addCriterion("item_num not in", values, "itemNum");
			return this;
		}

		public Criteria andItemNumBetween(String value1, String value2) {
			addCriterion("item_num between", value1, value2, "itemNum");
			return this;
		}

		public Criteria andItemNumNotBetween(String value1, String value2) {
			addCriterion("item_num not between", value1, value2, "itemNum");
			return this;
		}

		public Criteria andStartLevelIsNull() {
			addCriterion("start_level is null");
			return this;
		}

		public Criteria andStartLevelIsNotNull() {
			addCriterion("start_level is not null");
			return this;
		}

		public Criteria andStartLevelEqualTo(Integer value) {
			addCriterion("start_level =", value, "startLevel");
			return this;
		}

		public Criteria andStartLevelNotEqualTo(Integer value) {
			addCriterion("start_level <>", value, "startLevel");
			return this;
		}

		public Criteria andStartLevelGreaterThan(Integer value) {
			addCriterion("start_level >", value, "startLevel");
			return this;
		}

		public Criteria andStartLevelGreaterThanOrEqualTo(Integer value) {
			addCriterion("start_level >=", value, "startLevel");
			return this;
		}

		public Criteria andStartLevelLessThan(Integer value) {
			addCriterion("start_level <", value, "startLevel");
			return this;
		}

		public Criteria andStartLevelLessThanOrEqualTo(Integer value) {
			addCriterion("start_level <=", value, "startLevel");
			return this;
		}

		public Criteria andStartLevelIn(List values) {
			addCriterion("start_level in", values, "startLevel");
			return this;
		}

		public Criteria andStartLevelNotIn(List values) {
			addCriterion("start_level not in", values, "startLevel");
			return this;
		}

		public Criteria andStartLevelBetween(Integer value1, Integer value2) {
			addCriterion("start_level between", value1, value2, "startLevel");
			return this;
		}

		public Criteria andStartLevelNotBetween(Integer value1, Integer value2) {
			addCriterion("start_level not between", value1, value2,
					"startLevel");
			return this;
		}
	}
}