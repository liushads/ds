package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PlayerDartExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	public PlayerDartExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	protected PlayerDartExample(PlayerDartExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table player_dart
	 * @ibatorgenerated  Wed Feb 06 00:06:01 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andPlayerIdIsNull() {
			addCriterion("player_id is null");
			return this;
		}

		public Criteria andPlayerIdIsNotNull() {
			addCriterion("player_id is not null");
			return this;
		}

		public Criteria andPlayerIdEqualTo(Integer value) {
			addCriterion("player_id =", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotEqualTo(Integer value) {
			addCriterion("player_id <>", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThan(Integer value) {
			addCriterion("player_id >", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("player_id >=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThan(Integer value) {
			addCriterion("player_id <", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
			addCriterion("player_id <=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdIn(List values) {
			addCriterion("player_id in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotIn(List values) {
			addCriterion("player_id not in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
			addCriterion("player_id between", value1, value2, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("player_id not between", value1, value2, "playerId");
			return this;
		}

		public Criteria andDartIdIsNull() {
			addCriterion("dart_id is null");
			return this;
		}

		public Criteria andDartIdIsNotNull() {
			addCriterion("dart_id is not null");
			return this;
		}

		public Criteria andDartIdEqualTo(Integer value) {
			addCriterion("dart_id =", value, "dartId");
			return this;
		}

		public Criteria andDartIdNotEqualTo(Integer value) {
			addCriterion("dart_id <>", value, "dartId");
			return this;
		}

		public Criteria andDartIdGreaterThan(Integer value) {
			addCriterion("dart_id >", value, "dartId");
			return this;
		}

		public Criteria andDartIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("dart_id >=", value, "dartId");
			return this;
		}

		public Criteria andDartIdLessThan(Integer value) {
			addCriterion("dart_id <", value, "dartId");
			return this;
		}

		public Criteria andDartIdLessThanOrEqualTo(Integer value) {
			addCriterion("dart_id <=", value, "dartId");
			return this;
		}

		public Criteria andDartIdIn(List values) {
			addCriterion("dart_id in", values, "dartId");
			return this;
		}

		public Criteria andDartIdNotIn(List values) {
			addCriterion("dart_id not in", values, "dartId");
			return this;
		}

		public Criteria andDartIdBetween(Integer value1, Integer value2) {
			addCriterion("dart_id between", value1, value2, "dartId");
			return this;
		}

		public Criteria andDartIdNotBetween(Integer value1, Integer value2) {
			addCriterion("dart_id not between", value1, value2, "dartId");
			return this;
		}

		public Criteria andStartTimeIsNull() {
			addCriterion("start_time is null");
			return this;
		}

		public Criteria andStartTimeIsNotNull() {
			addCriterion("start_time is not null");
			return this;
		}

		public Criteria andStartTimeEqualTo(Date value) {
			addCriterion("start_time =", value, "startTime");
			return this;
		}

		public Criteria andStartTimeNotEqualTo(Date value) {
			addCriterion("start_time <>", value, "startTime");
			return this;
		}

		public Criteria andStartTimeGreaterThan(Date value) {
			addCriterion("start_time >", value, "startTime");
			return this;
		}

		public Criteria andStartTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("start_time >=", value, "startTime");
			return this;
		}

		public Criteria andStartTimeLessThan(Date value) {
			addCriterion("start_time <", value, "startTime");
			return this;
		}

		public Criteria andStartTimeLessThanOrEqualTo(Date value) {
			addCriterion("start_time <=", value, "startTime");
			return this;
		}

		public Criteria andStartTimeIn(List values) {
			addCriterion("start_time in", values, "startTime");
			return this;
		}

		public Criteria andStartTimeNotIn(List values) {
			addCriterion("start_time not in", values, "startTime");
			return this;
		}

		public Criteria andStartTimeBetween(Date value1, Date value2) {
			addCriterion("start_time between", value1, value2, "startTime");
			return this;
		}

		public Criteria andStartTimeNotBetween(Date value1, Date value2) {
			addCriterion("start_time not between", value1, value2, "startTime");
			return this;
		}

		public Criteria andRobedIsNull() {
			addCriterion("robed is null");
			return this;
		}

		public Criteria andRobedIsNotNull() {
			addCriterion("robed is not null");
			return this;
		}

		public Criteria andRobedEqualTo(Integer value) {
			addCriterion("robed =", value, "robed");
			return this;
		}

		public Criteria andRobedNotEqualTo(Integer value) {
			addCriterion("robed <>", value, "robed");
			return this;
		}

		public Criteria andRobedGreaterThan(Integer value) {
			addCriterion("robed >", value, "robed");
			return this;
		}

		public Criteria andRobedGreaterThanOrEqualTo(Integer value) {
			addCriterion("robed >=", value, "robed");
			return this;
		}

		public Criteria andRobedLessThan(Integer value) {
			addCriterion("robed <", value, "robed");
			return this;
		}

		public Criteria andRobedLessThanOrEqualTo(Integer value) {
			addCriterion("robed <=", value, "robed");
			return this;
		}

		public Criteria andRobedIn(List values) {
			addCriterion("robed in", values, "robed");
			return this;
		}

		public Criteria andRobedNotIn(List values) {
			addCriterion("robed not in", values, "robed");
			return this;
		}

		public Criteria andRobedBetween(Integer value1, Integer value2) {
			addCriterion("robed between", value1, value2, "robed");
			return this;
		}

		public Criteria andRobedNotBetween(Integer value1, Integer value2) {
			addCriterion("robed not between", value1, value2, "robed");
			return this;
		}

		public Criteria andDartStatusIsNull() {
			addCriterion("dart_status is null");
			return this;
		}

		public Criteria andDartStatusIsNotNull() {
			addCriterion("dart_status is not null");
			return this;
		}

		public Criteria andDartStatusEqualTo(Integer value) {
			addCriterion("dart_status =", value, "dartStatus");
			return this;
		}

		public Criteria andDartStatusNotEqualTo(Integer value) {
			addCriterion("dart_status <>", value, "dartStatus");
			return this;
		}

		public Criteria andDartStatusGreaterThan(Integer value) {
			addCriterion("dart_status >", value, "dartStatus");
			return this;
		}

		public Criteria andDartStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("dart_status >=", value, "dartStatus");
			return this;
		}

		public Criteria andDartStatusLessThan(Integer value) {
			addCriterion("dart_status <", value, "dartStatus");
			return this;
		}

		public Criteria andDartStatusLessThanOrEqualTo(Integer value) {
			addCriterion("dart_status <=", value, "dartStatus");
			return this;
		}

		public Criteria andDartStatusIn(List values) {
			addCriterion("dart_status in", values, "dartStatus");
			return this;
		}

		public Criteria andDartStatusNotIn(List values) {
			addCriterion("dart_status not in", values, "dartStatus");
			return this;
		}

		public Criteria andDartStatusBetween(Integer value1, Integer value2) {
			addCriterion("dart_status between", value1, value2, "dartStatus");
			return this;
		}

		public Criteria andDartStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("dart_status not between", value1, value2,
					"dartStatus");
			return this;
		}

		public Criteria andDayTimesIsNull() {
			addCriterion("day_times is null");
			return this;
		}

		public Criteria andDayTimesIsNotNull() {
			addCriterion("day_times is not null");
			return this;
		}

		public Criteria andDayTimesEqualTo(Integer value) {
			addCriterion("day_times =", value, "dayTimes");
			return this;
		}

		public Criteria andDayTimesNotEqualTo(Integer value) {
			addCriterion("day_times <>", value, "dayTimes");
			return this;
		}

		public Criteria andDayTimesGreaterThan(Integer value) {
			addCriterion("day_times >", value, "dayTimes");
			return this;
		}

		public Criteria andDayTimesGreaterThanOrEqualTo(Integer value) {
			addCriterion("day_times >=", value, "dayTimes");
			return this;
		}

		public Criteria andDayTimesLessThan(Integer value) {
			addCriterion("day_times <", value, "dayTimes");
			return this;
		}

		public Criteria andDayTimesLessThanOrEqualTo(Integer value) {
			addCriterion("day_times <=", value, "dayTimes");
			return this;
		}

		public Criteria andDayTimesIn(List values) {
			addCriterion("day_times in", values, "dayTimes");
			return this;
		}

		public Criteria andDayTimesNotIn(List values) {
			addCriterion("day_times not in", values, "dayTimes");
			return this;
		}

		public Criteria andDayTimesBetween(Integer value1, Integer value2) {
			addCriterion("day_times between", value1, value2, "dayTimes");
			return this;
		}

		public Criteria andDayTimesNotBetween(Integer value1, Integer value2) {
			addCriterion("day_times not between", value1, value2, "dayTimes");
			return this;
		}

		public Criteria andGoTimeIsNull() {
			addCriterion("go_time is null");
			return this;
		}

		public Criteria andGoTimeIsNotNull() {
			addCriterion("go_time is not null");
			return this;
		}

		public Criteria andGoTimeEqualTo(Integer value) {
			addCriterion("go_time =", value, "goTime");
			return this;
		}

		public Criteria andGoTimeNotEqualTo(Integer value) {
			addCriterion("go_time <>", value, "goTime");
			return this;
		}

		public Criteria andGoTimeGreaterThan(Integer value) {
			addCriterion("go_time >", value, "goTime");
			return this;
		}

		public Criteria andGoTimeGreaterThanOrEqualTo(Integer value) {
			addCriterion("go_time >=", value, "goTime");
			return this;
		}

		public Criteria andGoTimeLessThan(Integer value) {
			addCriterion("go_time <", value, "goTime");
			return this;
		}

		public Criteria andGoTimeLessThanOrEqualTo(Integer value) {
			addCriterion("go_time <=", value, "goTime");
			return this;
		}

		public Criteria andGoTimeIn(List values) {
			addCriterion("go_time in", values, "goTime");
			return this;
		}

		public Criteria andGoTimeNotIn(List values) {
			addCriterion("go_time not in", values, "goTime");
			return this;
		}

		public Criteria andGoTimeBetween(Integer value1, Integer value2) {
			addCriterion("go_time between", value1, value2, "goTime");
			return this;
		}

		public Criteria andGoTimeNotBetween(Integer value1, Integer value2) {
			addCriterion("go_time not between", value1, value2, "goTime");
			return this;
		}
	}
}