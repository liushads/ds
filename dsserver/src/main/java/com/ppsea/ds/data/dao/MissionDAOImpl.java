package com.ppsea.ds.data.dao;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.ppsea.ds.data.model.Mission;
import com.ppsea.ds.data.model.MissionExample;
import com.ppsea.ds.data.model.MissionWithBLOBs;

public class MissionDAOImpl implements MissionDAO {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public MissionDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public Integer insert(MissionWithBLOBs record) throws SQLException {
		Object newKey = sqlMapClient.insert("mission.abatorgenerated_insert",
				record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public int updateByPrimaryKey(Mission record) throws SQLException {
		int rows = sqlMapClient.update(
				"mission.abatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public int updateByPrimaryKey(MissionWithBLOBs record) throws SQLException {
		int rows = sqlMapClient.update(
				"mission.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public int updateByPrimaryKeySelective(MissionWithBLOBs record)
			throws SQLException {
		int rows = sqlMapClient.update(
				"mission.abatorgenerated_updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	@SuppressWarnings("unchecked")
	public List<Mission> selectByExampleWithoutBLOBs(MissionExample example)
			throws SQLException {
		List<Mission> list = (List<Mission>) sqlMapClient.queryForList(
				"mission.abatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	@SuppressWarnings("unchecked")
	public List<MissionWithBLOBs> selectByExampleWithBLOBs(
			MissionExample example) throws SQLException {
		List<MissionWithBLOBs> list = (List<MissionWithBLOBs>) sqlMapClient
				.queryForList(
						"mission.abatorgenerated_selectByExampleWithBLOBs",
						example);
		return list;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public MissionWithBLOBs selectByPrimaryKey(Integer id) throws SQLException {
		Mission key = new Mission();
		key.setId(id);
		MissionWithBLOBs record = (MissionWithBLOBs) sqlMapClient
				.queryForObject("mission.abatorgenerated_selectByPrimaryKey",
						key);
		return record;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public int deleteByExample(MissionExample example) throws SQLException {
		int rows = sqlMapClient.delete(
				"mission.abatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public int deleteByPrimaryKey(Integer id) throws SQLException {
		Mission key = new Mission();
		key.setId(id);
		int rows = sqlMapClient.delete(
				"mission.abatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public int countByExample(MissionExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject(
				"mission.abatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public int updateByExampleSelective(MissionWithBLOBs record,
			MissionExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update(
				"mission.abatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public int updateByExample(MissionWithBLOBs record, MissionExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update(
				"mission.abatorgenerated_updateByExampleWithBLOBs", parms);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	public int updateByExample(Mission record, MissionExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update(
				"mission.abatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table mission
	 * @abatorgenerated  Sat Sep 19 15:32:15 CST 2009
	 */
	private static class UpdateByExampleParms extends MissionExample {
		private Object record;

		public UpdateByExampleParms(Object record, MissionExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}