package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class FacilityExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	public FacilityExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	protected FacilityExample(FacilityExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table facility
	 * @ibatorgenerated  Wed May 12 18:09:12 CST 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return this;
		}

		public Criteria andNameIn(List values) {
			addCriterion("name in", values, "name");
			return this;
		}

		public Criteria andNameNotIn(List values) {
			addCriterion("name not in", values, "name");
			return this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return this;
		}

		public Criteria andDescriptionIsNull() {
			addCriterion("description is null");
			return this;
		}

		public Criteria andDescriptionIsNotNull() {
			addCriterion("description is not null");
			return this;
		}

		public Criteria andDescriptionEqualTo(String value) {
			addCriterion("description =", value, "description");
			return this;
		}

		public Criteria andDescriptionNotEqualTo(String value) {
			addCriterion("description <>", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThan(String value) {
			addCriterion("description >", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("description >=", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThan(String value) {
			addCriterion("description <", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThanOrEqualTo(String value) {
			addCriterion("description <=", value, "description");
			return this;
		}

		public Criteria andDescriptionLike(String value) {
			addCriterion("description like", value, "description");
			return this;
		}

		public Criteria andDescriptionNotLike(String value) {
			addCriterion("description not like", value, "description");
			return this;
		}

		public Criteria andDescriptionIn(List values) {
			addCriterion("description in", values, "description");
			return this;
		}

		public Criteria andDescriptionNotIn(List values) {
			addCriterion("description not in", values, "description");
			return this;
		}

		public Criteria andDescriptionBetween(String value1, String value2) {
			addCriterion("description between", value1, value2, "description");
			return this;
		}

		public Criteria andDescriptionNotBetween(String value1, String value2) {
			addCriterion("description not between", value1, value2,
					"description");
			return this;
		}

		public Criteria andMaxPlayersIsNull() {
			addCriterion("max_players is null");
			return this;
		}

		public Criteria andMaxPlayersIsNotNull() {
			addCriterion("max_players is not null");
			return this;
		}

		public Criteria andMaxPlayersEqualTo(Integer value) {
			addCriterion("max_players =", value, "maxPlayers");
			return this;
		}

		public Criteria andMaxPlayersNotEqualTo(Integer value) {
			addCriterion("max_players <>", value, "maxPlayers");
			return this;
		}

		public Criteria andMaxPlayersGreaterThan(Integer value) {
			addCriterion("max_players >", value, "maxPlayers");
			return this;
		}

		public Criteria andMaxPlayersGreaterThanOrEqualTo(Integer value) {
			addCriterion("max_players >=", value, "maxPlayers");
			return this;
		}

		public Criteria andMaxPlayersLessThan(Integer value) {
			addCriterion("max_players <", value, "maxPlayers");
			return this;
		}

		public Criteria andMaxPlayersLessThanOrEqualTo(Integer value) {
			addCriterion("max_players <=", value, "maxPlayers");
			return this;
		}

		public Criteria andMaxPlayersIn(List values) {
			addCriterion("max_players in", values, "maxPlayers");
			return this;
		}

		public Criteria andMaxPlayersNotIn(List values) {
			addCriterion("max_players not in", values, "maxPlayers");
			return this;
		}

		public Criteria andMaxPlayersBetween(Integer value1, Integer value2) {
			addCriterion("max_players between", value1, value2, "maxPlayers");
			return this;
		}

		public Criteria andMaxPlayersNotBetween(Integer value1, Integer value2) {
			addCriterion("max_players not between", value1, value2,
					"maxPlayers");
			return this;
		}

		public Criteria andDirectIsNull() {
			addCriterion("direct is null");
			return this;
		}

		public Criteria andDirectIsNotNull() {
			addCriterion("direct is not null");
			return this;
		}

		public Criteria andDirectEqualTo(Boolean value) {
			addCriterion("direct =", value, "direct");
			return this;
		}

		public Criteria andDirectNotEqualTo(Boolean value) {
			addCriterion("direct <>", value, "direct");
			return this;
		}

		public Criteria andDirectGreaterThan(Boolean value) {
			addCriterion("direct >", value, "direct");
			return this;
		}

		public Criteria andDirectGreaterThanOrEqualTo(Boolean value) {
			addCriterion("direct >=", value, "direct");
			return this;
		}

		public Criteria andDirectLessThan(Boolean value) {
			addCriterion("direct <", value, "direct");
			return this;
		}

		public Criteria andDirectLessThanOrEqualTo(Boolean value) {
			addCriterion("direct <=", value, "direct");
			return this;
		}

		public Criteria andDirectIn(List values) {
			addCriterion("direct in", values, "direct");
			return this;
		}

		public Criteria andDirectNotIn(List values) {
			addCriterion("direct not in", values, "direct");
			return this;
		}

		public Criteria andDirectBetween(Boolean value1, Boolean value2) {
			addCriterion("direct between", value1, value2, "direct");
			return this;
		}

		public Criteria andDirectNotBetween(Boolean value1, Boolean value2) {
			addCriterion("direct not between", value1, value2, "direct");
			return this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("type is null");
			return this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("type is not null");
			return this;
		}

		public Criteria andTypeEqualTo(Boolean value) {
			addCriterion("type =", value, "type");
			return this;
		}

		public Criteria andTypeNotEqualTo(Boolean value) {
			addCriterion("type <>", value, "type");
			return this;
		}

		public Criteria andTypeGreaterThan(Boolean value) {
			addCriterion("type >", value, "type");
			return this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(Boolean value) {
			addCriterion("type >=", value, "type");
			return this;
		}

		public Criteria andTypeLessThan(Boolean value) {
			addCriterion("type <", value, "type");
			return this;
		}

		public Criteria andTypeLessThanOrEqualTo(Boolean value) {
			addCriterion("type <=", value, "type");
			return this;
		}

		public Criteria andTypeIn(List values) {
			addCriterion("type in", values, "type");
			return this;
		}

		public Criteria andTypeNotIn(List values) {
			addCriterion("type not in", values, "type");
			return this;
		}

		public Criteria andTypeBetween(Boolean value1, Boolean value2) {
			addCriterion("type between", value1, value2, "type");
			return this;
		}

		public Criteria andTypeNotBetween(Boolean value1, Boolean value2) {
			addCriterion("type not between", value1, value2, "type");
			return this;
		}

		public Criteria andSortIsNull() {
			addCriterion("sort is null");
			return this;
		}

		public Criteria andSortIsNotNull() {
			addCriterion("sort is not null");
			return this;
		}

		public Criteria andSortEqualTo(Integer value) {
			addCriterion("sort =", value, "sort");
			return this;
		}

		public Criteria andSortNotEqualTo(Integer value) {
			addCriterion("sort <>", value, "sort");
			return this;
		}

		public Criteria andSortGreaterThan(Integer value) {
			addCriterion("sort >", value, "sort");
			return this;
		}

		public Criteria andSortGreaterThanOrEqualTo(Integer value) {
			addCriterion("sort >=", value, "sort");
			return this;
		}

		public Criteria andSortLessThan(Integer value) {
			addCriterion("sort <", value, "sort");
			return this;
		}

		public Criteria andSortLessThanOrEqualTo(Integer value) {
			addCriterion("sort <=", value, "sort");
			return this;
		}

		public Criteria andSortIn(List values) {
			addCriterion("sort in", values, "sort");
			return this;
		}

		public Criteria andSortNotIn(List values) {
			addCriterion("sort not in", values, "sort");
			return this;
		}

		public Criteria andSortBetween(Integer value1, Integer value2) {
			addCriterion("sort between", value1, value2, "sort");
			return this;
		}

		public Criteria andSortNotBetween(Integer value1, Integer value2) {
			addCriterion("sort not between", value1, value2, "sort");
			return this;
		}

		public Criteria andNamePinyinIsNull() {
			addCriterion("name_pinyin is null");
			return this;
		}

		public Criteria andNamePinyinIsNotNull() {
			addCriterion("name_pinyin is not null");
			return this;
		}

		public Criteria andNamePinyinEqualTo(String value) {
			addCriterion("name_pinyin =", value, "namePinyin");
			return this;
		}

		public Criteria andNamePinyinNotEqualTo(String value) {
			addCriterion("name_pinyin <>", value, "namePinyin");
			return this;
		}

		public Criteria andNamePinyinGreaterThan(String value) {
			addCriterion("name_pinyin >", value, "namePinyin");
			return this;
		}

		public Criteria andNamePinyinGreaterThanOrEqualTo(String value) {
			addCriterion("name_pinyin >=", value, "namePinyin");
			return this;
		}

		public Criteria andNamePinyinLessThan(String value) {
			addCriterion("name_pinyin <", value, "namePinyin");
			return this;
		}

		public Criteria andNamePinyinLessThanOrEqualTo(String value) {
			addCriterion("name_pinyin <=", value, "namePinyin");
			return this;
		}

		public Criteria andNamePinyinLike(String value) {
			addCriterion("name_pinyin like", value, "namePinyin");
			return this;
		}

		public Criteria andNamePinyinNotLike(String value) {
			addCriterion("name_pinyin not like", value, "namePinyin");
			return this;
		}

		public Criteria andNamePinyinIn(List values) {
			addCriterion("name_pinyin in", values, "namePinyin");
			return this;
		}

		public Criteria andNamePinyinNotIn(List values) {
			addCriterion("name_pinyin not in", values, "namePinyin");
			return this;
		}

		public Criteria andNamePinyinBetween(String value1, String value2) {
			addCriterion("name_pinyin between", value1, value2, "namePinyin");
			return this;
		}

		public Criteria andNamePinyinNotBetween(String value1, String value2) {
			addCriterion("name_pinyin not between", value1, value2,
					"namePinyin");
			return this;
		}

		public Criteria andIsClickIsNull() {
			addCriterion("is_click is null");
			return this;
		}

		public Criteria andIsClickIsNotNull() {
			addCriterion("is_click is not null");
			return this;
		}

		public Criteria andIsClickEqualTo(Boolean value) {
			addCriterion("is_click =", value, "isClick");
			return this;
		}

		public Criteria andIsClickNotEqualTo(Boolean value) {
			addCriterion("is_click <>", value, "isClick");
			return this;
		}

		public Criteria andIsClickGreaterThan(Boolean value) {
			addCriterion("is_click >", value, "isClick");
			return this;
		}

		public Criteria andIsClickGreaterThanOrEqualTo(Boolean value) {
			addCriterion("is_click >=", value, "isClick");
			return this;
		}

		public Criteria andIsClickLessThan(Boolean value) {
			addCriterion("is_click <", value, "isClick");
			return this;
		}

		public Criteria andIsClickLessThanOrEqualTo(Boolean value) {
			addCriterion("is_click <=", value, "isClick");
			return this;
		}

		public Criteria andIsClickIn(List values) {
			addCriterion("is_click in", values, "isClick");
			return this;
		}

		public Criteria andIsClickNotIn(List values) {
			addCriterion("is_click not in", values, "isClick");
			return this;
		}

		public Criteria andIsClickBetween(Boolean value1, Boolean value2) {
			addCriterion("is_click between", value1, value2, "isClick");
			return this;
		}

		public Criteria andIsClickNotBetween(Boolean value1, Boolean value2) {
			addCriterion("is_click not between", value1, value2, "isClick");
			return this;
		}

		public Criteria andIsCityIsNull() {
			addCriterion("is_city is null");
			return this;
		}

		public Criteria andIsCityIsNotNull() {
			addCriterion("is_city is not null");
			return this;
		}

		public Criteria andIsCityEqualTo(Boolean value) {
			addCriterion("is_city =", value, "isCity");
			return this;
		}

		public Criteria andIsCityNotEqualTo(Boolean value) {
			addCriterion("is_city <>", value, "isCity");
			return this;
		}

		public Criteria andIsCityGreaterThan(Boolean value) {
			addCriterion("is_city >", value, "isCity");
			return this;
		}

		public Criteria andIsCityGreaterThanOrEqualTo(Boolean value) {
			addCriterion("is_city >=", value, "isCity");
			return this;
		}

		public Criteria andIsCityLessThan(Boolean value) {
			addCriterion("is_city <", value, "isCity");
			return this;
		}

		public Criteria andIsCityLessThanOrEqualTo(Boolean value) {
			addCriterion("is_city <=", value, "isCity");
			return this;
		}

		public Criteria andIsCityIn(List values) {
			addCriterion("is_city in", values, "isCity");
			return this;
		}

		public Criteria andIsCityNotIn(List values) {
			addCriterion("is_city not in", values, "isCity");
			return this;
		}

		public Criteria andIsCityBetween(Boolean value1, Boolean value2) {
			addCriterion("is_city between", value1, value2, "isCity");
			return this;
		}

		public Criteria andIsCityNotBetween(Boolean value1, Boolean value2) {
			addCriterion("is_city not between", value1, value2, "isCity");
			return this;
		}
	}
}