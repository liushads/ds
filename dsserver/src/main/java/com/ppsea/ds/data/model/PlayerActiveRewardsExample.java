package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class PlayerActiveRewardsExample {

	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    protected String orderByClause;
	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    protected List oredCriteria;

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    public PlayerActiveRewardsExample() {
	    oredCriteria = new ArrayList();
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    protected PlayerActiveRewardsExample(PlayerActiveRewardsExample example) {
	    this.orderByClause = example.orderByClause;
	    this.oredCriteria = example.oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    public void setOrderByClause(String orderByClause) {
	    this.orderByClause = orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    public String getOrderByClause() {
	    return orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    public List getOredCriteria() {
	    return oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    public void or(Criteria criteria) {
	    oredCriteria.add(criteria);
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    public Criteria createCriteria() {
	    Criteria criteria = createCriteriaInternal();
	    if (oredCriteria.size() == 0) {
		    oredCriteria.add(criteria);
	    }
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    protected Criteria createCriteriaInternal() {
	    Criteria criteria = new Criteria();
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    public void clear() {
	    oredCriteria.clear();
    }

	/**
     * This class was generated by Apache iBATIS ibator. This class corresponds to the database table player_active_rewards
     * @ibatorgenerated  Sat Apr 02 10:47:28 CST 2011
     */
    public static class Criteria {
	    protected List criteriaWithoutValue;
	    protected List criteriaWithSingleValue;
	    protected List criteriaWithListValue;
	    protected List criteriaWithBetweenValue;

	    protected Criteria() {
		    super();
		    criteriaWithoutValue = new ArrayList();
		    criteriaWithSingleValue = new ArrayList();
		    criteriaWithListValue = new ArrayList();
		    criteriaWithBetweenValue = new ArrayList();
	    }

	    public boolean isValid() {
		    return criteriaWithoutValue.size() > 0
		            || criteriaWithSingleValue.size() > 0
		            || criteriaWithListValue.size() > 0
		            || criteriaWithBetweenValue.size() > 0;
	    }

	    public List getCriteriaWithoutValue() {
		    return criteriaWithoutValue;
	    }

	    public List getCriteriaWithSingleValue() {
		    return criteriaWithSingleValue;
	    }

	    public List getCriteriaWithListValue() {
		    return criteriaWithListValue;
	    }

	    public List getCriteriaWithBetweenValue() {
		    return criteriaWithBetweenValue;
	    }

	    protected void addCriterion(String condition) {
		    if (condition == null) {
			    throw new RuntimeException("Value for condition cannot be null");
		    }
		    criteriaWithoutValue.add(condition);
	    }

	    protected void addCriterion(String condition, Object value,
	            String property) {
		    if (value == null) {
			    throw new RuntimeException("Value for " + property
			            + " cannot be null");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("value", value);
		    criteriaWithSingleValue.add(map);
	    }

	    protected void addCriterion(String condition, List values,
	            String property) {
		    if (values == null || values.size() == 0) {
			    throw new RuntimeException("Value list for " + property
			            + " cannot be null or empty");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", values);
		    criteriaWithListValue.add(map);
	    }

	    protected void addCriterion(String condition, Object value1,
	            Object value2, String property) {
		    if (value1 == null || value2 == null) {
			    throw new RuntimeException("Between values for " + property
			            + " cannot be null");
		    }
		    List list = new ArrayList();
		    list.add(value1);
		    list.add(value2);
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", list);
		    criteriaWithBetweenValue.add(map);
	    }

	    public Criteria andIdIsNull() {
		    addCriterion("id is null");
		    return this;
	    }

	    public Criteria andIdIsNotNull() {
		    addCriterion("id is not null");
		    return this;
	    }

	    public Criteria andIdEqualTo(Long value) {
		    addCriterion("id =", value, "id");
		    return this;
	    }

	    public Criteria andIdNotEqualTo(Long value) {
		    addCriterion("id <>", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThan(Long value) {
		    addCriterion("id >", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThanOrEqualTo(Long value) {
		    addCriterion("id >=", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThan(Long value) {
		    addCriterion("id <", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThanOrEqualTo(Long value) {
		    addCriterion("id <=", value, "id");
		    return this;
	    }

	    public Criteria andIdIn(List values) {
		    addCriterion("id in", values, "id");
		    return this;
	    }

	    public Criteria andIdNotIn(List values) {
		    addCriterion("id not in", values, "id");
		    return this;
	    }

	    public Criteria andIdBetween(Long value1, Long value2) {
		    addCriterion("id between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andIdNotBetween(Long value1, Long value2) {
		    addCriterion("id not between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andTypeIsNull() {
		    addCriterion("type is null");
		    return this;
	    }

	    public Criteria andTypeIsNotNull() {
		    addCriterion("type is not null");
		    return this;
	    }

	    public Criteria andTypeEqualTo(Integer value) {
		    addCriterion("type =", value, "type");
		    return this;
	    }

	    public Criteria andTypeNotEqualTo(Integer value) {
		    addCriterion("type <>", value, "type");
		    return this;
	    }

	    public Criteria andTypeGreaterThan(Integer value) {
		    addCriterion("type >", value, "type");
		    return this;
	    }

	    public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
		    addCriterion("type >=", value, "type");
		    return this;
	    }

	    public Criteria andTypeLessThan(Integer value) {
		    addCriterion("type <", value, "type");
		    return this;
	    }

	    public Criteria andTypeLessThanOrEqualTo(Integer value) {
		    addCriterion("type <=", value, "type");
		    return this;
	    }

	    public Criteria andTypeIn(List values) {
		    addCriterion("type in", values, "type");
		    return this;
	    }

	    public Criteria andTypeNotIn(List values) {
		    addCriterion("type not in", values, "type");
		    return this;
	    }

	    public Criteria andTypeBetween(Integer value1, Integer value2) {
		    addCriterion("type between", value1, value2, "type");
		    return this;
	    }

	    public Criteria andTypeNotBetween(Integer value1, Integer value2) {
		    addCriterion("type not between", value1, value2, "type");
		    return this;
	    }

	    public Criteria andRoleIdIsNull() {
		    addCriterion("role_id is null");
		    return this;
	    }

	    public Criteria andRoleIdIsNotNull() {
		    addCriterion("role_id is not null");
		    return this;
	    }

	    public Criteria andRoleIdEqualTo(Integer value) {
		    addCriterion("role_id =", value, "roleId");
		    return this;
	    }

	    public Criteria andRoleIdNotEqualTo(Integer value) {
		    addCriterion("role_id <>", value, "roleId");
		    return this;
	    }

	    public Criteria andRoleIdGreaterThan(Integer value) {
		    addCriterion("role_id >", value, "roleId");
		    return this;
	    }

	    public Criteria andRoleIdGreaterThanOrEqualTo(Integer value) {
		    addCriterion("role_id >=", value, "roleId");
		    return this;
	    }

	    public Criteria andRoleIdLessThan(Integer value) {
		    addCriterion("role_id <", value, "roleId");
		    return this;
	    }

	    public Criteria andRoleIdLessThanOrEqualTo(Integer value) {
		    addCriterion("role_id <=", value, "roleId");
		    return this;
	    }

	    public Criteria andRoleIdIn(List values) {
		    addCriterion("role_id in", values, "roleId");
		    return this;
	    }

	    public Criteria andRoleIdNotIn(List values) {
		    addCriterion("role_id not in", values, "roleId");
		    return this;
	    }

	    public Criteria andRoleIdBetween(Integer value1, Integer value2) {
		    addCriterion("role_id between", value1, value2, "roleId");
		    return this;
	    }

	    public Criteria andRoleIdNotBetween(Integer value1, Integer value2) {
		    addCriterion("role_id not between", value1, value2, "roleId");
		    return this;
	    }

	    public Criteria andItemsIsNull() {
		    addCriterion("items is null");
		    return this;
	    }

	    public Criteria andItemsIsNotNull() {
		    addCriterion("items is not null");
		    return this;
	    }

	    public Criteria andItemsEqualTo(String value) {
		    addCriterion("items =", value, "items");
		    return this;
	    }

	    public Criteria andItemsNotEqualTo(String value) {
		    addCriterion("items <>", value, "items");
		    return this;
	    }

	    public Criteria andItemsGreaterThan(String value) {
		    addCriterion("items >", value, "items");
		    return this;
	    }

	    public Criteria andItemsGreaterThanOrEqualTo(String value) {
		    addCriterion("items >=", value, "items");
		    return this;
	    }

	    public Criteria andItemsLessThan(String value) {
		    addCriterion("items <", value, "items");
		    return this;
	    }

	    public Criteria andItemsLessThanOrEqualTo(String value) {
		    addCriterion("items <=", value, "items");
		    return this;
	    }

	    public Criteria andItemsLike(String value) {
		    addCriterion("items like", value, "items");
		    return this;
	    }

	    public Criteria andItemsNotLike(String value) {
		    addCriterion("items not like", value, "items");
		    return this;
	    }

	    public Criteria andItemsIn(List values) {
		    addCriterion("items in", values, "items");
		    return this;
	    }

	    public Criteria andItemsNotIn(List values) {
		    addCriterion("items not in", values, "items");
		    return this;
	    }

	    public Criteria andItemsBetween(String value1, String value2) {
		    addCriterion("items between", value1, value2, "items");
		    return this;
	    }

	    public Criteria andItemsNotBetween(String value1, String value2) {
		    addCriterion("items not between", value1, value2, "items");
		    return this;
	    }

	    public Criteria andCopperIsNull() {
		    addCriterion("copper is null");
		    return this;
	    }

	    public Criteria andCopperIsNotNull() {
		    addCriterion("copper is not null");
		    return this;
	    }

	    public Criteria andCopperEqualTo(Long value) {
		    addCriterion("copper =", value, "copper");
		    return this;
	    }

	    public Criteria andCopperNotEqualTo(Long value) {
		    addCriterion("copper <>", value, "copper");
		    return this;
	    }

	    public Criteria andCopperGreaterThan(Long value) {
		    addCriterion("copper >", value, "copper");
		    return this;
	    }

	    public Criteria andCopperGreaterThanOrEqualTo(Long value) {
		    addCriterion("copper >=", value, "copper");
		    return this;
	    }

	    public Criteria andCopperLessThan(Long value) {
		    addCriterion("copper <", value, "copper");
		    return this;
	    }

	    public Criteria andCopperLessThanOrEqualTo(Long value) {
		    addCriterion("copper <=", value, "copper");
		    return this;
	    }

	    public Criteria andCopperIn(List values) {
		    addCriterion("copper in", values, "copper");
		    return this;
	    }

	    public Criteria andCopperNotIn(List values) {
		    addCriterion("copper not in", values, "copper");
		    return this;
	    }

	    public Criteria andCopperBetween(Long value1, Long value2) {
		    addCriterion("copper between", value1, value2, "copper");
		    return this;
	    }

	    public Criteria andCopperNotBetween(Long value1, Long value2) {
		    addCriterion("copper not between", value1, value2, "copper");
		    return this;
	    }

	    public Criteria andPointsIsNull() {
		    addCriterion("points is null");
		    return this;
	    }

	    public Criteria andPointsIsNotNull() {
		    addCriterion("points is not null");
		    return this;
	    }

	    public Criteria andPointsEqualTo(Integer value) {
		    addCriterion("points =", value, "points");
		    return this;
	    }

	    public Criteria andPointsNotEqualTo(Integer value) {
		    addCriterion("points <>", value, "points");
		    return this;
	    }

	    public Criteria andPointsGreaterThan(Integer value) {
		    addCriterion("points >", value, "points");
		    return this;
	    }

	    public Criteria andPointsGreaterThanOrEqualTo(Integer value) {
		    addCriterion("points >=", value, "points");
		    return this;
	    }

	    public Criteria andPointsLessThan(Integer value) {
		    addCriterion("points <", value, "points");
		    return this;
	    }

	    public Criteria andPointsLessThanOrEqualTo(Integer value) {
		    addCriterion("points <=", value, "points");
		    return this;
	    }

	    public Criteria andPointsIn(List values) {
		    addCriterion("points in", values, "points");
		    return this;
	    }

	    public Criteria andPointsNotIn(List values) {
		    addCriterion("points not in", values, "points");
		    return this;
	    }

	    public Criteria andPointsBetween(Integer value1, Integer value2) {
		    addCriterion("points between", value1, value2, "points");
		    return this;
	    }

	    public Criteria andPointsNotBetween(Integer value1, Integer value2) {
		    addCriterion("points not between", value1, value2, "points");
		    return this;
	    }

	    public Criteria andGoldIsNull() {
		    addCriterion("gold is null");
		    return this;
	    }

	    public Criteria andGoldIsNotNull() {
		    addCriterion("gold is not null");
		    return this;
	    }

	    public Criteria andGoldEqualTo(Integer value) {
		    addCriterion("gold =", value, "gold");
		    return this;
	    }

	    public Criteria andGoldNotEqualTo(Integer value) {
		    addCriterion("gold <>", value, "gold");
		    return this;
	    }

	    public Criteria andGoldGreaterThan(Integer value) {
		    addCriterion("gold >", value, "gold");
		    return this;
	    }

	    public Criteria andGoldGreaterThanOrEqualTo(Integer value) {
		    addCriterion("gold >=", value, "gold");
		    return this;
	    }

	    public Criteria andGoldLessThan(Integer value) {
		    addCriterion("gold <", value, "gold");
		    return this;
	    }

	    public Criteria andGoldLessThanOrEqualTo(Integer value) {
		    addCriterion("gold <=", value, "gold");
		    return this;
	    }

	    public Criteria andGoldIn(List values) {
		    addCriterion("gold in", values, "gold");
		    return this;
	    }

	    public Criteria andGoldNotIn(List values) {
		    addCriterion("gold not in", values, "gold");
		    return this;
	    }

	    public Criteria andGoldBetween(Integer value1, Integer value2) {
		    addCriterion("gold between", value1, value2, "gold");
		    return this;
	    }

	    public Criteria andGoldNotBetween(Integer value1, Integer value2) {
		    addCriterion("gold not between", value1, value2, "gold");
		    return this;
	    }

	    public Criteria andAdvGoldIsNull() {
		    addCriterion("adv_gold is null");
		    return this;
	    }

	    public Criteria andAdvGoldIsNotNull() {
		    addCriterion("adv_gold is not null");
		    return this;
	    }

	    public Criteria andAdvGoldEqualTo(Integer value) {
		    addCriterion("adv_gold =", value, "advGold");
		    return this;
	    }

	    public Criteria andAdvGoldNotEqualTo(Integer value) {
		    addCriterion("adv_gold <>", value, "advGold");
		    return this;
	    }

	    public Criteria andAdvGoldGreaterThan(Integer value) {
		    addCriterion("adv_gold >", value, "advGold");
		    return this;
	    }

	    public Criteria andAdvGoldGreaterThanOrEqualTo(Integer value) {
		    addCriterion("adv_gold >=", value, "advGold");
		    return this;
	    }

	    public Criteria andAdvGoldLessThan(Integer value) {
		    addCriterion("adv_gold <", value, "advGold");
		    return this;
	    }

	    public Criteria andAdvGoldLessThanOrEqualTo(Integer value) {
		    addCriterion("adv_gold <=", value, "advGold");
		    return this;
	    }

	    public Criteria andAdvGoldIn(List values) {
		    addCriterion("adv_gold in", values, "advGold");
		    return this;
	    }

	    public Criteria andAdvGoldNotIn(List values) {
		    addCriterion("adv_gold not in", values, "advGold");
		    return this;
	    }

	    public Criteria andAdvGoldBetween(Integer value1, Integer value2) {
		    addCriterion("adv_gold between", value1, value2, "advGold");
		    return this;
	    }

	    public Criteria andAdvGoldNotBetween(Integer value1, Integer value2) {
		    addCriterion("adv_gold not between", value1, value2, "advGold");
		    return this;
	    }

	    public Criteria andActiveDescIsNull() {
		    addCriterion("active_desc is null");
		    return this;
	    }

	    public Criteria andActiveDescIsNotNull() {
		    addCriterion("active_desc is not null");
		    return this;
	    }

	    public Criteria andActiveDescEqualTo(String value) {
		    addCriterion("active_desc =", value, "activeDesc");
		    return this;
	    }

	    public Criteria andActiveDescNotEqualTo(String value) {
		    addCriterion("active_desc <>", value, "activeDesc");
		    return this;
	    }

	    public Criteria andActiveDescGreaterThan(String value) {
		    addCriterion("active_desc >", value, "activeDesc");
		    return this;
	    }

	    public Criteria andActiveDescGreaterThanOrEqualTo(String value) {
		    addCriterion("active_desc >=", value, "activeDesc");
		    return this;
	    }

	    public Criteria andActiveDescLessThan(String value) {
		    addCriterion("active_desc <", value, "activeDesc");
		    return this;
	    }

	    public Criteria andActiveDescLessThanOrEqualTo(String value) {
		    addCriterion("active_desc <=", value, "activeDesc");
		    return this;
	    }

	    public Criteria andActiveDescLike(String value) {
		    addCriterion("active_desc like", value, "activeDesc");
		    return this;
	    }

	    public Criteria andActiveDescNotLike(String value) {
		    addCriterion("active_desc not like", value, "activeDesc");
		    return this;
	    }

	    public Criteria andActiveDescIn(List values) {
		    addCriterion("active_desc in", values, "activeDesc");
		    return this;
	    }

	    public Criteria andActiveDescNotIn(List values) {
		    addCriterion("active_desc not in", values, "activeDesc");
		    return this;
	    }

	    public Criteria andActiveDescBetween(String value1, String value2) {
		    addCriterion("active_desc between", value1, value2, "activeDesc");
		    return this;
	    }

	    public Criteria andActiveDescNotBetween(String value1, String value2) {
		    addCriterion("active_desc not between", value1, value2,
		            "activeDesc");
		    return this;
	    }

	    public Criteria andGetTimeIsNull() {
		    addCriterion("get_time is null");
		    return this;
	    }

	    public Criteria andGetTimeIsNotNull() {
		    addCriterion("get_time is not null");
		    return this;
	    }

	    public Criteria andGetTimeEqualTo(Date value) {
		    addCriterion("get_time =", value, "getTime");
		    return this;
	    }

	    public Criteria andGetTimeNotEqualTo(Date value) {
		    addCriterion("get_time <>", value, "getTime");
		    return this;
	    }

	    public Criteria andGetTimeGreaterThan(Date value) {
		    addCriterion("get_time >", value, "getTime");
		    return this;
	    }

	    public Criteria andGetTimeGreaterThanOrEqualTo(Date value) {
		    addCriterion("get_time >=", value, "getTime");
		    return this;
	    }

	    public Criteria andGetTimeLessThan(Date value) {
		    addCriterion("get_time <", value, "getTime");
		    return this;
	    }

	    public Criteria andGetTimeLessThanOrEqualTo(Date value) {
		    addCriterion("get_time <=", value, "getTime");
		    return this;
	    }

	    public Criteria andGetTimeIn(List values) {
		    addCriterion("get_time in", values, "getTime");
		    return this;
	    }

	    public Criteria andGetTimeNotIn(List values) {
		    addCriterion("get_time not in", values, "getTime");
		    return this;
	    }

	    public Criteria andGetTimeBetween(Date value1, Date value2) {
		    addCriterion("get_time between", value1, value2, "getTime");
		    return this;
	    }

	    public Criteria andGetTimeNotBetween(Date value1, Date value2) {
		    addCriterion("get_time not between", value1, value2, "getTime");
		    return this;
	    }

	    public Criteria andRewardDateIsNull() {
		    addCriterion("reward_date is null");
		    return this;
	    }

	    public Criteria andRewardDateIsNotNull() {
		    addCriterion("reward_date is not null");
		    return this;
	    }

	    public Criteria andRewardDateEqualTo(Date value) {
		    addCriterion("reward_date =", value, "rewardDate");
		    return this;
	    }

	    public Criteria andRewardDateNotEqualTo(Date value) {
		    addCriterion("reward_date <>", value, "rewardDate");
		    return this;
	    }

	    public Criteria andRewardDateGreaterThan(Date value) {
		    addCriterion("reward_date >", value, "rewardDate");
		    return this;
	    }

	    public Criteria andRewardDateGreaterThanOrEqualTo(Date value) {
		    addCriterion("reward_date >=", value, "rewardDate");
		    return this;
	    }

	    public Criteria andRewardDateLessThan(Date value) {
		    addCriterion("reward_date <", value, "rewardDate");
		    return this;
	    }

	    public Criteria andRewardDateLessThanOrEqualTo(Date value) {
		    addCriterion("reward_date <=", value, "rewardDate");
		    return this;
	    }

	    public Criteria andRewardDateIn(List values) {
		    addCriterion("reward_date in", values, "rewardDate");
		    return this;
	    }

	    public Criteria andRewardDateNotIn(List values) {
		    addCriterion("reward_date not in", values, "rewardDate");
		    return this;
	    }

	    public Criteria andRewardDateBetween(Date value1, Date value2) {
		    addCriterion("reward_date between", value1, value2, "rewardDate");
		    return this;
	    }

	    public Criteria andRewardDateNotBetween(Date value1, Date value2) {
		    addCriterion("reward_date not between", value1, value2,
		            "rewardDate");
		    return this;
	    }
    }
}