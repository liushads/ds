package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MemberPriviligesExample {

	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    protected String orderByClause;
	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    protected List oredCriteria;

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    public MemberPriviligesExample() {
	    oredCriteria = new ArrayList();
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    protected MemberPriviligesExample(MemberPriviligesExample example) {
	    this.orderByClause = example.orderByClause;
	    this.oredCriteria = example.oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
	    this.orderByClause = orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    public String getOrderByClause() {
	    return orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    public List getOredCriteria() {
	    return oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    public void or(Criteria criteria) {
	    oredCriteria.add(criteria);
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    public Criteria createCriteria() {
	    Criteria criteria = createCriteriaInternal();
	    if (oredCriteria.size() == 0) {
		    oredCriteria.add(criteria);
	    }
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    protected Criteria createCriteriaInternal() {
	    Criteria criteria = new Criteria();
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    public void clear() {
	    oredCriteria.clear();
    }

	/**
     * This class was generated by Apache iBATIS ibator. This class corresponds to the database table member_priviliges
     * @ibatorgenerated  Wed Dec 15 13:49:33 CST 2010
     */
    public static class Criteria {
	    protected List criteriaWithoutValue;
	    protected List criteriaWithSingleValue;
	    protected List criteriaWithListValue;
	    protected List criteriaWithBetweenValue;

	    protected Criteria() {
		    super();
		    criteriaWithoutValue = new ArrayList();
		    criteriaWithSingleValue = new ArrayList();
		    criteriaWithListValue = new ArrayList();
		    criteriaWithBetweenValue = new ArrayList();
	    }

	    public boolean isValid() {
		    return criteriaWithoutValue.size() > 0
		            || criteriaWithSingleValue.size() > 0
		            || criteriaWithListValue.size() > 0
		            || criteriaWithBetweenValue.size() > 0;
	    }

	    public List getCriteriaWithoutValue() {
		    return criteriaWithoutValue;
	    }

	    public List getCriteriaWithSingleValue() {
		    return criteriaWithSingleValue;
	    }

	    public List getCriteriaWithListValue() {
		    return criteriaWithListValue;
	    }

	    public List getCriteriaWithBetweenValue() {
		    return criteriaWithBetweenValue;
	    }

	    protected void addCriterion(String condition) {
		    if (condition == null) {
			    throw new RuntimeException("Value for condition cannot be null");
		    }
		    criteriaWithoutValue.add(condition);
	    }

	    protected void addCriterion(String condition, Object value,
	            String property) {
		    if (value == null) {
			    throw new RuntimeException("Value for " + property
			            + " cannot be null");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("value", value);
		    criteriaWithSingleValue.add(map);
	    }

	    protected void addCriterion(String condition, List values,
	            String property) {
		    if (values == null || values.size() == 0) {
			    throw new RuntimeException("Value list for " + property
			            + " cannot be null or empty");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", values);
		    criteriaWithListValue.add(map);
	    }

	    protected void addCriterion(String condition, Object value1,
	            Object value2, String property) {
		    if (value1 == null || value2 == null) {
			    throw new RuntimeException("Between values for " + property
			            + " cannot be null");
		    }
		    List list = new ArrayList();
		    list.add(value1);
		    list.add(value2);
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", list);
		    criteriaWithBetweenValue.add(map);
	    }

	    public Criteria andIdIsNull() {
		    addCriterion("id is null");
		    return this;
	    }

	    public Criteria andIdIsNotNull() {
		    addCriterion("id is not null");
		    return this;
	    }

	    public Criteria andIdEqualTo(Integer value) {
		    addCriterion("id =", value, "id");
		    return this;
	    }

	    public Criteria andIdNotEqualTo(Integer value) {
		    addCriterion("id <>", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThan(Integer value) {
		    addCriterion("id >", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThanOrEqualTo(Integer value) {
		    addCriterion("id >=", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThan(Integer value) {
		    addCriterion("id <", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThanOrEqualTo(Integer value) {
		    addCriterion("id <=", value, "id");
		    return this;
	    }

	    public Criteria andIdIn(List values) {
		    addCriterion("id in", values, "id");
		    return this;
	    }

	    public Criteria andIdNotIn(List values) {
		    addCriterion("id not in", values, "id");
		    return this;
	    }

	    public Criteria andIdBetween(Integer value1, Integer value2) {
		    addCriterion("id between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andIdNotBetween(Integer value1, Integer value2) {
		    addCriterion("id not between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andExppercentIsNull() {
		    addCriterion("expPercent is null");
		    return this;
	    }

	    public Criteria andExppercentIsNotNull() {
		    addCriterion("expPercent is not null");
		    return this;
	    }

	    public Criteria andExppercentEqualTo(Integer value) {
		    addCriterion("expPercent =", value, "exppercent");
		    return this;
	    }

	    public Criteria andExppercentNotEqualTo(Integer value) {
		    addCriterion("expPercent <>", value, "exppercent");
		    return this;
	    }

	    public Criteria andExppercentGreaterThan(Integer value) {
		    addCriterion("expPercent >", value, "exppercent");
		    return this;
	    }

	    public Criteria andExppercentGreaterThanOrEqualTo(Integer value) {
		    addCriterion("expPercent >=", value, "exppercent");
		    return this;
	    }

	    public Criteria andExppercentLessThan(Integer value) {
		    addCriterion("expPercent <", value, "exppercent");
		    return this;
	    }

	    public Criteria andExppercentLessThanOrEqualTo(Integer value) {
		    addCriterion("expPercent <=", value, "exppercent");
		    return this;
	    }

	    public Criteria andExppercentIn(List values) {
		    addCriterion("expPercent in", values, "exppercent");
		    return this;
	    }

	    public Criteria andExppercentNotIn(List values) {
		    addCriterion("expPercent not in", values, "exppercent");
		    return this;
	    }

	    public Criteria andExppercentBetween(Integer value1, Integer value2) {
		    addCriterion("expPercent between", value1, value2, "exppercent");
		    return this;
	    }

	    public Criteria andExppercentNotBetween(Integer value1, Integer value2) {
		    addCriterion("expPercent not between", value1, value2, "exppercent");
		    return this;
	    }

	    public Criteria andHppercentIsNull() {
		    addCriterion("hpPercent is null");
		    return this;
	    }

	    public Criteria andHppercentIsNotNull() {
		    addCriterion("hpPercent is not null");
		    return this;
	    }

	    public Criteria andHppercentEqualTo(Integer value) {
		    addCriterion("hpPercent =", value, "hppercent");
		    return this;
	    }

	    public Criteria andHppercentNotEqualTo(Integer value) {
		    addCriterion("hpPercent <>", value, "hppercent");
		    return this;
	    }

	    public Criteria andHppercentGreaterThan(Integer value) {
		    addCriterion("hpPercent >", value, "hppercent");
		    return this;
	    }

	    public Criteria andHppercentGreaterThanOrEqualTo(Integer value) {
		    addCriterion("hpPercent >=", value, "hppercent");
		    return this;
	    }

	    public Criteria andHppercentLessThan(Integer value) {
		    addCriterion("hpPercent <", value, "hppercent");
		    return this;
	    }

	    public Criteria andHppercentLessThanOrEqualTo(Integer value) {
		    addCriterion("hpPercent <=", value, "hppercent");
		    return this;
	    }

	    public Criteria andHppercentIn(List values) {
		    addCriterion("hpPercent in", values, "hppercent");
		    return this;
	    }

	    public Criteria andHppercentNotIn(List values) {
		    addCriterion("hpPercent not in", values, "hppercent");
		    return this;
	    }

	    public Criteria andHppercentBetween(Integer value1, Integer value2) {
		    addCriterion("hpPercent between", value1, value2, "hppercent");
		    return this;
	    }

	    public Criteria andHppercentNotBetween(Integer value1, Integer value2) {
		    addCriterion("hpPercent not between", value1, value2, "hppercent");
		    return this;
	    }

	    public Criteria andMppercentIsNull() {
		    addCriterion("mpPercent is null");
		    return this;
	    }

	    public Criteria andMppercentIsNotNull() {
		    addCriterion("mpPercent is not null");
		    return this;
	    }

	    public Criteria andMppercentEqualTo(Integer value) {
		    addCriterion("mpPercent =", value, "mppercent");
		    return this;
	    }

	    public Criteria andMppercentNotEqualTo(Integer value) {
		    addCriterion("mpPercent <>", value, "mppercent");
		    return this;
	    }

	    public Criteria andMppercentGreaterThan(Integer value) {
		    addCriterion("mpPercent >", value, "mppercent");
		    return this;
	    }

	    public Criteria andMppercentGreaterThanOrEqualTo(Integer value) {
		    addCriterion("mpPercent >=", value, "mppercent");
		    return this;
	    }

	    public Criteria andMppercentLessThan(Integer value) {
		    addCriterion("mpPercent <", value, "mppercent");
		    return this;
	    }

	    public Criteria andMppercentLessThanOrEqualTo(Integer value) {
		    addCriterion("mpPercent <=", value, "mppercent");
		    return this;
	    }

	    public Criteria andMppercentIn(List values) {
		    addCriterion("mpPercent in", values, "mppercent");
		    return this;
	    }

	    public Criteria andMppercentNotIn(List values) {
		    addCriterion("mpPercent not in", values, "mppercent");
		    return this;
	    }

	    public Criteria andMppercentBetween(Integer value1, Integer value2) {
		    addCriterion("mpPercent between", value1, value2, "mppercent");
		    return this;
	    }

	    public Criteria andMppercentNotBetween(Integer value1, Integer value2) {
		    addCriterion("mpPercent not between", value1, value2, "mppercent");
		    return this;
	    }

	    public Criteria andItemrepairpercentIsNull() {
		    addCriterion("itemRepairPercent is null");
		    return this;
	    }

	    public Criteria andItemrepairpercentIsNotNull() {
		    addCriterion("itemRepairPercent is not null");
		    return this;
	    }

	    public Criteria andItemrepairpercentEqualTo(Integer value) {
		    addCriterion("itemRepairPercent =", value, "itemrepairpercent");
		    return this;
	    }

	    public Criteria andItemrepairpercentNotEqualTo(Integer value) {
		    addCriterion("itemRepairPercent <>", value, "itemrepairpercent");
		    return this;
	    }

	    public Criteria andItemrepairpercentGreaterThan(Integer value) {
		    addCriterion("itemRepairPercent >", value, "itemrepairpercent");
		    return this;
	    }

	    public Criteria andItemrepairpercentGreaterThanOrEqualTo(Integer value) {
		    addCriterion("itemRepairPercent >=", value, "itemrepairpercent");
		    return this;
	    }

	    public Criteria andItemrepairpercentLessThan(Integer value) {
		    addCriterion("itemRepairPercent <", value, "itemrepairpercent");
		    return this;
	    }

	    public Criteria andItemrepairpercentLessThanOrEqualTo(Integer value) {
		    addCriterion("itemRepairPercent <=", value, "itemrepairpercent");
		    return this;
	    }

	    public Criteria andItemrepairpercentIn(List values) {
		    addCriterion("itemRepairPercent in", values, "itemrepairpercent");
		    return this;
	    }

	    public Criteria andItemrepairpercentNotIn(List values) {
		    addCriterion("itemRepairPercent not in", values,
		            "itemrepairpercent");
		    return this;
	    }

	    public Criteria andItemrepairpercentBetween(Integer value1,
	            Integer value2) {
		    addCriterion("itemRepairPercent between", value1, value2,
		            "itemrepairpercent");
		    return this;
	    }

	    public Criteria andItemrepairpercentNotBetween(Integer value1,
	            Integer value2) {
		    addCriterion("itemRepairPercent not between", value1, value2,
		            "itemrepairpercent");
		    return this;
	    }

	    public Criteria andExchangecostpercentIsNull() {
		    addCriterion("exchangeCostPercent is null");
		    return this;
	    }

	    public Criteria andExchangecostpercentIsNotNull() {
		    addCriterion("exchangeCostPercent is not null");
		    return this;
	    }

	    public Criteria andExchangecostpercentEqualTo(Integer value) {
		    addCriterion("exchangeCostPercent =", value, "exchangecostpercent");
		    return this;
	    }

	    public Criteria andExchangecostpercentNotEqualTo(Integer value) {
		    addCriterion("exchangeCostPercent <>", value, "exchangecostpercent");
		    return this;
	    }

	    public Criteria andExchangecostpercentGreaterThan(Integer value) {
		    addCriterion("exchangeCostPercent >", value, "exchangecostpercent");
		    return this;
	    }

	    public Criteria andExchangecostpercentGreaterThanOrEqualTo(Integer value) {
		    addCriterion("exchangeCostPercent >=", value, "exchangecostpercent");
		    return this;
	    }

	    public Criteria andExchangecostpercentLessThan(Integer value) {
		    addCriterion("exchangeCostPercent <", value, "exchangecostpercent");
		    return this;
	    }

	    public Criteria andExchangecostpercentLessThanOrEqualTo(Integer value) {
		    addCriterion("exchangeCostPercent <=", value, "exchangecostpercent");
		    return this;
	    }

	    public Criteria andExchangecostpercentIn(List values) {
		    addCriterion("exchangeCostPercent in", values,
		            "exchangecostpercent");
		    return this;
	    }

	    public Criteria andExchangecostpercentNotIn(List values) {
		    addCriterion("exchangeCostPercent not in", values,
		            "exchangecostpercent");
		    return this;
	    }

	    public Criteria andExchangecostpercentBetween(Integer value1,
	            Integer value2) {
		    addCriterion("exchangeCostPercent between", value1, value2,
		            "exchangecostpercent");
		    return this;
	    }

	    public Criteria andExchangecostpercentNotBetween(Integer value1,
	            Integer value2) {
		    addCriterion("exchangeCostPercent not between", value1, value2,
		            "exchangecostpercent");
		    return this;
	    }

	    public Criteria andRewardtimesIsNull() {
		    addCriterion("rewardTimes is null");
		    return this;
	    }

	    public Criteria andRewardtimesIsNotNull() {
		    addCriterion("rewardTimes is not null");
		    return this;
	    }

	    public Criteria andRewardtimesEqualTo(Integer value) {
		    addCriterion("rewardTimes =", value, "rewardtimes");
		    return this;
	    }

	    public Criteria andRewardtimesNotEqualTo(Integer value) {
		    addCriterion("rewardTimes <>", value, "rewardtimes");
		    return this;
	    }

	    public Criteria andRewardtimesGreaterThan(Integer value) {
		    addCriterion("rewardTimes >", value, "rewardtimes");
		    return this;
	    }

	    public Criteria andRewardtimesGreaterThanOrEqualTo(Integer value) {
		    addCriterion("rewardTimes >=", value, "rewardtimes");
		    return this;
	    }

	    public Criteria andRewardtimesLessThan(Integer value) {
		    addCriterion("rewardTimes <", value, "rewardtimes");
		    return this;
	    }

	    public Criteria andRewardtimesLessThanOrEqualTo(Integer value) {
		    addCriterion("rewardTimes <=", value, "rewardtimes");
		    return this;
	    }

	    public Criteria andRewardtimesIn(List values) {
		    addCriterion("rewardTimes in", values, "rewardtimes");
		    return this;
	    }

	    public Criteria andRewardtimesNotIn(List values) {
		    addCriterion("rewardTimes not in", values, "rewardtimes");
		    return this;
	    }

	    public Criteria andRewardtimesBetween(Integer value1, Integer value2) {
		    addCriterion("rewardTimes between", value1, value2, "rewardtimes");
		    return this;
	    }

	    public Criteria andRewardtimesNotBetween(Integer value1, Integer value2) {
		    addCriterion("rewardTimes not between", value1, value2,
		            "rewardtimes");
		    return this;
	    }

	    public Criteria andParam1IsNull() {
		    addCriterion("param1 is null");
		    return this;
	    }

	    public Criteria andParam1IsNotNull() {
		    addCriterion("param1 is not null");
		    return this;
	    }

	    public Criteria andParam1EqualTo(Integer value) {
		    addCriterion("param1 =", value, "param1");
		    return this;
	    }

	    public Criteria andParam1NotEqualTo(Integer value) {
		    addCriterion("param1 <>", value, "param1");
		    return this;
	    }

	    public Criteria andParam1GreaterThan(Integer value) {
		    addCriterion("param1 >", value, "param1");
		    return this;
	    }

	    public Criteria andParam1GreaterThanOrEqualTo(Integer value) {
		    addCriterion("param1 >=", value, "param1");
		    return this;
	    }

	    public Criteria andParam1LessThan(Integer value) {
		    addCriterion("param1 <", value, "param1");
		    return this;
	    }

	    public Criteria andParam1LessThanOrEqualTo(Integer value) {
		    addCriterion("param1 <=", value, "param1");
		    return this;
	    }

	    public Criteria andParam1In(List values) {
		    addCriterion("param1 in", values, "param1");
		    return this;
	    }

	    public Criteria andParam1NotIn(List values) {
		    addCriterion("param1 not in", values, "param1");
		    return this;
	    }

	    public Criteria andParam1Between(Integer value1, Integer value2) {
		    addCriterion("param1 between", value1, value2, "param1");
		    return this;
	    }

	    public Criteria andParam1NotBetween(Integer value1, Integer value2) {
		    addCriterion("param1 not between", value1, value2, "param1");
		    return this;
	    }

	    public Criteria andParam2IsNull() {
		    addCriterion("param2 is null");
		    return this;
	    }

	    public Criteria andParam2IsNotNull() {
		    addCriterion("param2 is not null");
		    return this;
	    }

	    public Criteria andParam2EqualTo(Integer value) {
		    addCriterion("param2 =", value, "param2");
		    return this;
	    }

	    public Criteria andParam2NotEqualTo(Integer value) {
		    addCriterion("param2 <>", value, "param2");
		    return this;
	    }

	    public Criteria andParam2GreaterThan(Integer value) {
		    addCriterion("param2 >", value, "param2");
		    return this;
	    }

	    public Criteria andParam2GreaterThanOrEqualTo(Integer value) {
		    addCriterion("param2 >=", value, "param2");
		    return this;
	    }

	    public Criteria andParam2LessThan(Integer value) {
		    addCriterion("param2 <", value, "param2");
		    return this;
	    }

	    public Criteria andParam2LessThanOrEqualTo(Integer value) {
		    addCriterion("param2 <=", value, "param2");
		    return this;
	    }

	    public Criteria andParam2In(List values) {
		    addCriterion("param2 in", values, "param2");
		    return this;
	    }

	    public Criteria andParam2NotIn(List values) {
		    addCriterion("param2 not in", values, "param2");
		    return this;
	    }

	    public Criteria andParam2Between(Integer value1, Integer value2) {
		    addCriterion("param2 between", value1, value2, "param2");
		    return this;
	    }

	    public Criteria andParam2NotBetween(Integer value1, Integer value2) {
		    addCriterion("param2 not between", value1, value2, "param2");
		    return this;
	    }

	    public Criteria andLevelIsNull() {
		    addCriterion("level is null");
		    return this;
	    }

	    public Criteria andLevelIsNotNull() {
		    addCriterion("level is not null");
		    return this;
	    }

	    public Criteria andLevelEqualTo(Integer value) {
		    addCriterion("level =", value, "level");
		    return this;
	    }

	    public Criteria andLevelNotEqualTo(Integer value) {
		    addCriterion("level <>", value, "level");
		    return this;
	    }

	    public Criteria andLevelGreaterThan(Integer value) {
		    addCriterion("level >", value, "level");
		    return this;
	    }

	    public Criteria andLevelGreaterThanOrEqualTo(Integer value) {
		    addCriterion("level >=", value, "level");
		    return this;
	    }

	    public Criteria andLevelLessThan(Integer value) {
		    addCriterion("level <", value, "level");
		    return this;
	    }

	    public Criteria andLevelLessThanOrEqualTo(Integer value) {
		    addCriterion("level <=", value, "level");
		    return this;
	    }

	    public Criteria andLevelIn(List values) {
		    addCriterion("level in", values, "level");
		    return this;
	    }

	    public Criteria andLevelNotIn(List values) {
		    addCriterion("level not in", values, "level");
		    return this;
	    }

	    public Criteria andLevelBetween(Integer value1, Integer value2) {
		    addCriterion("level between", value1, value2, "level");
		    return this;
	    }

	    public Criteria andLevelNotBetween(Integer value1, Integer value2) {
		    addCriterion("level not between", value1, value2, "level");
		    return this;
	    }

	    public Criteria andTypeIsNull() {
		    addCriterion("type is null");
		    return this;
	    }

	    public Criteria andTypeIsNotNull() {
		    addCriterion("type is not null");
		    return this;
	    }

	    public Criteria andTypeEqualTo(Integer value) {
		    addCriterion("type =", value, "type");
		    return this;
	    }

	    public Criteria andTypeNotEqualTo(Integer value) {
		    addCriterion("type <>", value, "type");
		    return this;
	    }

	    public Criteria andTypeGreaterThan(Integer value) {
		    addCriterion("type >", value, "type");
		    return this;
	    }

	    public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
		    addCriterion("type >=", value, "type");
		    return this;
	    }

	    public Criteria andTypeLessThan(Integer value) {
		    addCriterion("type <", value, "type");
		    return this;
	    }

	    public Criteria andTypeLessThanOrEqualTo(Integer value) {
		    addCriterion("type <=", value, "type");
		    return this;
	    }

	    public Criteria andTypeIn(List values) {
		    addCriterion("type in", values, "type");
		    return this;
	    }

	    public Criteria andTypeNotIn(List values) {
		    addCriterion("type not in", values, "type");
		    return this;
	    }

	    public Criteria andTypeBetween(Integer value1, Integer value2) {
		    addCriterion("type between", value1, value2, "type");
		    return this;
	    }

	    public Criteria andTypeNotBetween(Integer value1, Integer value2) {
		    addCriterion("type not between", value1, value2, "type");
		    return this;
	    }

	    public Criteria andItemamountIsNull() {
		    addCriterion("itemAmount is null");
		    return this;
	    }

	    public Criteria andItemamountIsNotNull() {
		    addCriterion("itemAmount is not null");
		    return this;
	    }

	    public Criteria andItemamountEqualTo(Integer value) {
		    addCriterion("itemAmount =", value, "itemamount");
		    return this;
	    }

	    public Criteria andItemamountNotEqualTo(Integer value) {
		    addCriterion("itemAmount <>", value, "itemamount");
		    return this;
	    }

	    public Criteria andItemamountGreaterThan(Integer value) {
		    addCriterion("itemAmount >", value, "itemamount");
		    return this;
	    }

	    public Criteria andItemamountGreaterThanOrEqualTo(Integer value) {
		    addCriterion("itemAmount >=", value, "itemamount");
		    return this;
	    }

	    public Criteria andItemamountLessThan(Integer value) {
		    addCriterion("itemAmount <", value, "itemamount");
		    return this;
	    }

	    public Criteria andItemamountLessThanOrEqualTo(Integer value) {
		    addCriterion("itemAmount <=", value, "itemamount");
		    return this;
	    }

	    public Criteria andItemamountIn(List values) {
		    addCriterion("itemAmount in", values, "itemamount");
		    return this;
	    }

	    public Criteria andItemamountNotIn(List values) {
		    addCriterion("itemAmount not in", values, "itemamount");
		    return this;
	    }

	    public Criteria andItemamountBetween(Integer value1, Integer value2) {
		    addCriterion("itemAmount between", value1, value2, "itemamount");
		    return this;
	    }

	    public Criteria andItemamountNotBetween(Integer value1, Integer value2) {
		    addCriterion("itemAmount not between", value1, value2, "itemamount");
		    return this;
	    }
    }
}