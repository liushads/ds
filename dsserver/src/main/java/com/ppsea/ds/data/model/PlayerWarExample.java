package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PlayerWarExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    public PlayerWarExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    protected PlayerWarExample(PlayerWarExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table player_war
     *
     * @ibatorgenerated Fri May 28 14:47:06 CST 2010
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andPlayerIdIsNull() {
            addCriterion("player_id is null");
            return this;
        }

        public Criteria andPlayerIdIsNotNull() {
            addCriterion("player_id is not null");
            return this;
        }

        public Criteria andPlayerIdEqualTo(Integer value) {
            addCriterion("player_id =", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdNotEqualTo(Integer value) {
            addCriterion("player_id <>", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdGreaterThan(Integer value) {
            addCriterion("player_id >", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("player_id >=", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdLessThan(Integer value) {
            addCriterion("player_id <", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
            addCriterion("player_id <=", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdIn(List values) {
            addCriterion("player_id in", values, "playerId");
            return this;
        }

        public Criteria andPlayerIdNotIn(List values) {
            addCriterion("player_id not in", values, "playerId");
            return this;
        }

        public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
            addCriterion("player_id between", value1, value2, "playerId");
            return this;
        }

        public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("player_id not between", value1, value2, "playerId");
            return this;
        }

        public Criteria andSectIdIsNull() {
            addCriterion("sect_id is null");
            return this;
        }

        public Criteria andSectIdIsNotNull() {
            addCriterion("sect_id is not null");
            return this;
        }

        public Criteria andSectIdEqualTo(Integer value) {
            addCriterion("sect_id =", value, "sectId");
            return this;
        }

        public Criteria andSectIdNotEqualTo(Integer value) {
            addCriterion("sect_id <>", value, "sectId");
            return this;
        }

        public Criteria andSectIdGreaterThan(Integer value) {
            addCriterion("sect_id >", value, "sectId");
            return this;
        }

        public Criteria andSectIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("sect_id >=", value, "sectId");
            return this;
        }

        public Criteria andSectIdLessThan(Integer value) {
            addCriterion("sect_id <", value, "sectId");
            return this;
        }

        public Criteria andSectIdLessThanOrEqualTo(Integer value) {
            addCriterion("sect_id <=", value, "sectId");
            return this;
        }

        public Criteria andSectIdIn(List values) {
            addCriterion("sect_id in", values, "sectId");
            return this;
        }

        public Criteria andSectIdNotIn(List values) {
            addCriterion("sect_id not in", values, "sectId");
            return this;
        }

        public Criteria andSectIdBetween(Integer value1, Integer value2) {
            addCriterion("sect_id between", value1, value2, "sectId");
            return this;
        }

        public Criteria andSectIdNotBetween(Integer value1, Integer value2) {
            addCriterion("sect_id not between", value1, value2, "sectId");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return this;
        }

        public Criteria andStatusIn(List values) {
            addCriterion("status in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List values) {
            addCriterion("status not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return this;
        }

        public Criteria andKillerIdIsNull() {
            addCriterion("killer_id is null");
            return this;
        }

        public Criteria andKillerIdIsNotNull() {
            addCriterion("killer_id is not null");
            return this;
        }

        public Criteria andKillerIdEqualTo(Integer value) {
            addCriterion("killer_id =", value, "killerId");
            return this;
        }

        public Criteria andKillerIdNotEqualTo(Integer value) {
            addCriterion("killer_id <>", value, "killerId");
            return this;
        }

        public Criteria andKillerIdGreaterThan(Integer value) {
            addCriterion("killer_id >", value, "killerId");
            return this;
        }

        public Criteria andKillerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("killer_id >=", value, "killerId");
            return this;
        }

        public Criteria andKillerIdLessThan(Integer value) {
            addCriterion("killer_id <", value, "killerId");
            return this;
        }

        public Criteria andKillerIdLessThanOrEqualTo(Integer value) {
            addCriterion("killer_id <=", value, "killerId");
            return this;
        }

        public Criteria andKillerIdIn(List values) {
            addCriterion("killer_id in", values, "killerId");
            return this;
        }

        public Criteria andKillerIdNotIn(List values) {
            addCriterion("killer_id not in", values, "killerId");
            return this;
        }

        public Criteria andKillerIdBetween(Integer value1, Integer value2) {
            addCriterion("killer_id between", value1, value2, "killerId");
            return this;
        }

        public Criteria andKillerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("killer_id not between", value1, value2, "killerId");
            return this;
        }

        public Criteria andSignupTimeIsNull() {
            addCriterion("signup_time is null");
            return this;
        }

        public Criteria andSignupTimeIsNotNull() {
            addCriterion("signup_time is not null");
            return this;
        }

        public Criteria andSignupTimeEqualTo(Date value) {
            addCriterion("signup_time =", value, "signupTime");
            return this;
        }

        public Criteria andSignupTimeNotEqualTo(Date value) {
            addCriterion("signup_time <>", value, "signupTime");
            return this;
        }

        public Criteria andSignupTimeGreaterThan(Date value) {
            addCriterion("signup_time >", value, "signupTime");
            return this;
        }

        public Criteria andSignupTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("signup_time >=", value, "signupTime");
            return this;
        }

        public Criteria andSignupTimeLessThan(Date value) {
            addCriterion("signup_time <", value, "signupTime");
            return this;
        }

        public Criteria andSignupTimeLessThanOrEqualTo(Date value) {
            addCriterion("signup_time <=", value, "signupTime");
            return this;
        }

        public Criteria andSignupTimeIn(List values) {
            addCriterion("signup_time in", values, "signupTime");
            return this;
        }

        public Criteria andSignupTimeNotIn(List values) {
            addCriterion("signup_time not in", values, "signupTime");
            return this;
        }

        public Criteria andSignupTimeBetween(Date value1, Date value2) {
            addCriterion("signup_time between", value1, value2, "signupTime");
            return this;
        }

        public Criteria andSignupTimeNotBetween(Date value1, Date value2) {
            addCriterion("signup_time not between", value1, value2, "signupTime");
            return this;
        }
    }
}