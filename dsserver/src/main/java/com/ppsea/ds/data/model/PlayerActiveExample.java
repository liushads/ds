package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class PlayerActiveExample {

	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    protected String orderByClause;
	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    protected List oredCriteria;

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    public PlayerActiveExample() {
	    oredCriteria = new ArrayList();
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    protected PlayerActiveExample(PlayerActiveExample example) {
	    this.orderByClause = example.orderByClause;
	    this.oredCriteria = example.oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
	    this.orderByClause = orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    public String getOrderByClause() {
	    return orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    public List getOredCriteria() {
	    return oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    public void or(Criteria criteria) {
	    oredCriteria.add(criteria);
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    public Criteria createCriteria() {
	    Criteria criteria = createCriteriaInternal();
	    if (oredCriteria.size() == 0) {
		    oredCriteria.add(criteria);
	    }
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    protected Criteria createCriteriaInternal() {
	    Criteria criteria = new Criteria();
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    public void clear() {
	    oredCriteria.clear();
    }

	/**
     * This class was generated by Apache iBATIS ibator. This class corresponds to the database table player_active
     * @ibatorgenerated  Mon Oct 18 12:22:35 CST 2010
     */
    public static class Criteria {
	    protected List criteriaWithoutValue;
	    protected List criteriaWithSingleValue;
	    protected List criteriaWithListValue;
	    protected List criteriaWithBetweenValue;

	    protected Criteria() {
		    super();
		    criteriaWithoutValue = new ArrayList();
		    criteriaWithSingleValue = new ArrayList();
		    criteriaWithListValue = new ArrayList();
		    criteriaWithBetweenValue = new ArrayList();
	    }

	    public boolean isValid() {
		    return criteriaWithoutValue.size() > 0
		            || criteriaWithSingleValue.size() > 0
		            || criteriaWithListValue.size() > 0
		            || criteriaWithBetweenValue.size() > 0;
	    }

	    public List getCriteriaWithoutValue() {
		    return criteriaWithoutValue;
	    }

	    public List getCriteriaWithSingleValue() {
		    return criteriaWithSingleValue;
	    }

	    public List getCriteriaWithListValue() {
		    return criteriaWithListValue;
	    }

	    public List getCriteriaWithBetweenValue() {
		    return criteriaWithBetweenValue;
	    }

	    protected void addCriterion(String condition) {
		    if (condition == null) {
			    throw new RuntimeException("Value for condition cannot be null");
		    }
		    criteriaWithoutValue.add(condition);
	    }

	    protected void addCriterion(String condition, Object value,
	            String property) {
		    if (value == null) {
			    throw new RuntimeException("Value for " + property
			            + " cannot be null");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("value", value);
		    criteriaWithSingleValue.add(map);
	    }

	    protected void addCriterion(String condition, List values,
	            String property) {
		    if (values == null || values.size() == 0) {
			    throw new RuntimeException("Value list for " + property
			            + " cannot be null or empty");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", values);
		    criteriaWithListValue.add(map);
	    }

	    protected void addCriterion(String condition, Object value1,
	            Object value2, String property) {
		    if (value1 == null || value2 == null) {
			    throw new RuntimeException("Between values for " + property
			            + " cannot be null");
		    }
		    List list = new ArrayList();
		    list.add(value1);
		    list.add(value2);
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", list);
		    criteriaWithBetweenValue.add(map);
	    }

	    public Criteria andIdIsNull() {
		    addCriterion("id is null");
		    return this;
	    }

	    public Criteria andIdIsNotNull() {
		    addCriterion("id is not null");
		    return this;
	    }

	    public Criteria andIdEqualTo(Integer value) {
		    addCriterion("id =", value, "id");
		    return this;
	    }

	    public Criteria andIdNotEqualTo(Integer value) {
		    addCriterion("id <>", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThan(Integer value) {
		    addCriterion("id >", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThanOrEqualTo(Integer value) {
		    addCriterion("id >=", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThan(Integer value) {
		    addCriterion("id <", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThanOrEqualTo(Integer value) {
		    addCriterion("id <=", value, "id");
		    return this;
	    }

	    public Criteria andIdIn(List values) {
		    addCriterion("id in", values, "id");
		    return this;
	    }

	    public Criteria andIdNotIn(List values) {
		    addCriterion("id not in", values, "id");
		    return this;
	    }

	    public Criteria andIdBetween(Integer value1, Integer value2) {
		    addCriterion("id between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andIdNotBetween(Integer value1, Integer value2) {
		    addCriterion("id not between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andPlayerIdIsNull() {
		    addCriterion("player_id is null");
		    return this;
	    }

	    public Criteria andPlayerIdIsNotNull() {
		    addCriterion("player_id is not null");
		    return this;
	    }

	    public Criteria andPlayerIdEqualTo(Integer value) {
		    addCriterion("player_id =", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdNotEqualTo(Integer value) {
		    addCriterion("player_id <>", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdGreaterThan(Integer value) {
		    addCriterion("player_id >", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
		    addCriterion("player_id >=", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdLessThan(Integer value) {
		    addCriterion("player_id <", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
		    addCriterion("player_id <=", value, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdIn(List values) {
		    addCriterion("player_id in", values, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdNotIn(List values) {
		    addCriterion("player_id not in", values, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
		    addCriterion("player_id between", value1, value2, "playerId");
		    return this;
	    }

	    public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
		    addCriterion("player_id not between", value1, value2, "playerId");
		    return this;
	    }

	    public Criteria andKeyWordIsNull() {
		    addCriterion("key_word is null");
		    return this;
	    }

	    public Criteria andKeyWordIsNotNull() {
		    addCriterion("key_word is not null");
		    return this;
	    }

	    public Criteria andKeyWordEqualTo(String value) {
		    addCriterion("key_word =", value, "keyWord");
		    return this;
	    }

	    public Criteria andKeyWordNotEqualTo(String value) {
		    addCriterion("key_word <>", value, "keyWord");
		    return this;
	    }

	    public Criteria andKeyWordGreaterThan(String value) {
		    addCriterion("key_word >", value, "keyWord");
		    return this;
	    }

	    public Criteria andKeyWordGreaterThanOrEqualTo(String value) {
		    addCriterion("key_word >=", value, "keyWord");
		    return this;
	    }

	    public Criteria andKeyWordLessThan(String value) {
		    addCriterion("key_word <", value, "keyWord");
		    return this;
	    }

	    public Criteria andKeyWordLessThanOrEqualTo(String value) {
		    addCriterion("key_word <=", value, "keyWord");
		    return this;
	    }

	    public Criteria andKeyWordLike(String value) {
		    addCriterion("key_word like", value, "keyWord");
		    return this;
	    }

	    public Criteria andKeyWordNotLike(String value) {
		    addCriterion("key_word not like", value, "keyWord");
		    return this;
	    }

	    public Criteria andKeyWordIn(List values) {
		    addCriterion("key_word in", values, "keyWord");
		    return this;
	    }

	    public Criteria andKeyWordNotIn(List values) {
		    addCriterion("key_word not in", values, "keyWord");
		    return this;
	    }

	    public Criteria andKeyWordBetween(String value1, String value2) {
		    addCriterion("key_word between", value1, value2, "keyWord");
		    return this;
	    }

	    public Criteria andKeyWordNotBetween(String value1, String value2) {
		    addCriterion("key_word not between", value1, value2, "keyWord");
		    return this;
	    }

	    public Criteria andTypeIsNull() {
		    addCriterion("type is null");
		    return this;
	    }

	    public Criteria andTypeIsNotNull() {
		    addCriterion("type is not null");
		    return this;
	    }

	    public Criteria andTypeEqualTo(Integer value) {
		    addCriterion("type =", value, "type");
		    return this;
	    }

	    public Criteria andTypeNotEqualTo(Integer value) {
		    addCriterion("type <>", value, "type");
		    return this;
	    }

	    public Criteria andTypeGreaterThan(Integer value) {
		    addCriterion("type >", value, "type");
		    return this;
	    }

	    public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
		    addCriterion("type >=", value, "type");
		    return this;
	    }

	    public Criteria andTypeLessThan(Integer value) {
		    addCriterion("type <", value, "type");
		    return this;
	    }

	    public Criteria andTypeLessThanOrEqualTo(Integer value) {
		    addCriterion("type <=", value, "type");
		    return this;
	    }

	    public Criteria andTypeIn(List values) {
		    addCriterion("type in", values, "type");
		    return this;
	    }

	    public Criteria andTypeNotIn(List values) {
		    addCriterion("type not in", values, "type");
		    return this;
	    }

	    public Criteria andTypeBetween(Integer value1, Integer value2) {
		    addCriterion("type between", value1, value2, "type");
		    return this;
	    }

	    public Criteria andTypeNotBetween(Integer value1, Integer value2) {
		    addCriterion("type not between", value1, value2, "type");
		    return this;
	    }

	    public Criteria andJoinDateIsNull() {
		    addCriterion("join_date is null");
		    return this;
	    }

	    public Criteria andJoinDateIsNotNull() {
		    addCriterion("join_date is not null");
		    return this;
	    }

	    public Criteria andJoinDateEqualTo(Date value) {
		    addCriterion("join_date =", value, "joinDate");
		    return this;
	    }

	    public Criteria andJoinDateNotEqualTo(Date value) {
		    addCriterion("join_date <>", value, "joinDate");
		    return this;
	    }

	    public Criteria andJoinDateGreaterThan(Date value) {
		    addCriterion("join_date >", value, "joinDate");
		    return this;
	    }

	    public Criteria andJoinDateGreaterThanOrEqualTo(Date value) {
		    addCriterion("join_date >=", value, "joinDate");
		    return this;
	    }

	    public Criteria andJoinDateLessThan(Date value) {
		    addCriterion("join_date <", value, "joinDate");
		    return this;
	    }

	    public Criteria andJoinDateLessThanOrEqualTo(Date value) {
		    addCriterion("join_date <=", value, "joinDate");
		    return this;
	    }

	    public Criteria andJoinDateIn(List values) {
		    addCriterion("join_date in", values, "joinDate");
		    return this;
	    }

	    public Criteria andJoinDateNotIn(List values) {
		    addCriterion("join_date not in", values, "joinDate");
		    return this;
	    }

	    public Criteria andJoinDateBetween(Date value1, Date value2) {
		    addCriterion("join_date between", value1, value2, "joinDate");
		    return this;
	    }

	    public Criteria andJoinDateNotBetween(Date value1, Date value2) {
		    addCriterion("join_date not between", value1, value2, "joinDate");
		    return this;
	    }

	    public Criteria andTimeIsNull() {
		    addCriterion("time is null");
		    return this;
	    }

	    public Criteria andTimeIsNotNull() {
		    addCriterion("time is not null");
		    return this;
	    }

	    public Criteria andTimeEqualTo(Integer value) {
		    addCriterion("time =", value, "time");
		    return this;
	    }

	    public Criteria andTimeNotEqualTo(Integer value) {
		    addCriterion("time <>", value, "time");
		    return this;
	    }

	    public Criteria andTimeGreaterThan(Integer value) {
		    addCriterion("time >", value, "time");
		    return this;
	    }

	    public Criteria andTimeGreaterThanOrEqualTo(Integer value) {
		    addCriterion("time >=", value, "time");
		    return this;
	    }

	    public Criteria andTimeLessThan(Integer value) {
		    addCriterion("time <", value, "time");
		    return this;
	    }

	    public Criteria andTimeLessThanOrEqualTo(Integer value) {
		    addCriterion("time <=", value, "time");
		    return this;
	    }

	    public Criteria andTimeIn(List values) {
		    addCriterion("time in", values, "time");
		    return this;
	    }

	    public Criteria andTimeNotIn(List values) {
		    addCriterion("time not in", values, "time");
		    return this;
	    }

	    public Criteria andTimeBetween(Integer value1, Integer value2) {
		    addCriterion("time between", value1, value2, "time");
		    return this;
	    }

	    public Criteria andTimeNotBetween(Integer value1, Integer value2) {
		    addCriterion("time not between", value1, value2, "time");
		    return this;
	    }
    }
}