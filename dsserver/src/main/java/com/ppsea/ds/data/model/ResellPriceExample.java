package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ResellPriceExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    public ResellPriceExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    protected ResellPriceExample(ResellPriceExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table resell_price
     *
     * @ibatorgenerated Sun Jan 27 21:49:32 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andItemNameIsNull() {
            addCriterion("item_name is null");
            return this;
        }

        public Criteria andItemNameIsNotNull() {
            addCriterion("item_name is not null");
            return this;
        }

        public Criteria andItemNameEqualTo(String value) {
            addCriterion("item_name =", value, "itemName");
            return this;
        }

        public Criteria andItemNameNotEqualTo(String value) {
            addCriterion("item_name <>", value, "itemName");
            return this;
        }

        public Criteria andItemNameGreaterThan(String value) {
            addCriterion("item_name >", value, "itemName");
            return this;
        }

        public Criteria andItemNameGreaterThanOrEqualTo(String value) {
            addCriterion("item_name >=", value, "itemName");
            return this;
        }

        public Criteria andItemNameLessThan(String value) {
            addCriterion("item_name <", value, "itemName");
            return this;
        }

        public Criteria andItemNameLessThanOrEqualTo(String value) {
            addCriterion("item_name <=", value, "itemName");
            return this;
        }

        public Criteria andItemNameLike(String value) {
            addCriterion("item_name like", value, "itemName");
            return this;
        }

        public Criteria andItemNameNotLike(String value) {
            addCriterion("item_name not like", value, "itemName");
            return this;
        }

        public Criteria andItemNameIn(List values) {
            addCriterion("item_name in", values, "itemName");
            return this;
        }

        public Criteria andItemNameNotIn(List values) {
            addCriterion("item_name not in", values, "itemName");
            return this;
        }

        public Criteria andItemNameBetween(String value1, String value2) {
            addCriterion("item_name between", value1, value2, "itemName");
            return this;
        }

        public Criteria andItemNameNotBetween(String value1, String value2) {
            addCriterion("item_name not between", value1, value2, "itemName");
            return this;
        }

        public Criteria andItemTypeIsNull() {
            addCriterion("item_type is null");
            return this;
        }

        public Criteria andItemTypeIsNotNull() {
            addCriterion("item_type is not null");
            return this;
        }

        public Criteria andItemTypeEqualTo(Integer value) {
            addCriterion("item_type =", value, "itemType");
            return this;
        }

        public Criteria andItemTypeNotEqualTo(Integer value) {
            addCriterion("item_type <>", value, "itemType");
            return this;
        }

        public Criteria andItemTypeGreaterThan(Integer value) {
            addCriterion("item_type >", value, "itemType");
            return this;
        }

        public Criteria andItemTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("item_type >=", value, "itemType");
            return this;
        }

        public Criteria andItemTypeLessThan(Integer value) {
            addCriterion("item_type <", value, "itemType");
            return this;
        }

        public Criteria andItemTypeLessThanOrEqualTo(Integer value) {
            addCriterion("item_type <=", value, "itemType");
            return this;
        }

        public Criteria andItemTypeIn(List values) {
            addCriterion("item_type in", values, "itemType");
            return this;
        }

        public Criteria andItemTypeNotIn(List values) {
            addCriterion("item_type not in", values, "itemType");
            return this;
        }

        public Criteria andItemTypeBetween(Integer value1, Integer value2) {
            addCriterion("item_type between", value1, value2, "itemType");
            return this;
        }

        public Criteria andItemTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("item_type not between", value1, value2, "itemType");
            return this;
        }

        public Criteria andMinPriceIsNull() {
            addCriterion("min_price is null");
            return this;
        }

        public Criteria andMinPriceIsNotNull() {
            addCriterion("min_price is not null");
            return this;
        }

        public Criteria andMinPriceEqualTo(Integer value) {
            addCriterion("min_price =", value, "minPrice");
            return this;
        }

        public Criteria andMinPriceNotEqualTo(Integer value) {
            addCriterion("min_price <>", value, "minPrice");
            return this;
        }

        public Criteria andMinPriceGreaterThan(Integer value) {
            addCriterion("min_price >", value, "minPrice");
            return this;
        }

        public Criteria andMinPriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("min_price >=", value, "minPrice");
            return this;
        }

        public Criteria andMinPriceLessThan(Integer value) {
            addCriterion("min_price <", value, "minPrice");
            return this;
        }

        public Criteria andMinPriceLessThanOrEqualTo(Integer value) {
            addCriterion("min_price <=", value, "minPrice");
            return this;
        }

        public Criteria andMinPriceIn(List values) {
            addCriterion("min_price in", values, "minPrice");
            return this;
        }

        public Criteria andMinPriceNotIn(List values) {
            addCriterion("min_price not in", values, "minPrice");
            return this;
        }

        public Criteria andMinPriceBetween(Integer value1, Integer value2) {
            addCriterion("min_price between", value1, value2, "minPrice");
            return this;
        }

        public Criteria andMinPriceNotBetween(Integer value1, Integer value2) {
            addCriterion("min_price not between", value1, value2, "minPrice");
            return this;
        }

        public Criteria andMaxPriceIsNull() {
            addCriterion("max_price is null");
            return this;
        }

        public Criteria andMaxPriceIsNotNull() {
            addCriterion("max_price is not null");
            return this;
        }

        public Criteria andMaxPriceEqualTo(Integer value) {
            addCriterion("max_price =", value, "maxPrice");
            return this;
        }

        public Criteria andMaxPriceNotEqualTo(Integer value) {
            addCriterion("max_price <>", value, "maxPrice");
            return this;
        }

        public Criteria andMaxPriceGreaterThan(Integer value) {
            addCriterion("max_price >", value, "maxPrice");
            return this;
        }

        public Criteria andMaxPriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("max_price >=", value, "maxPrice");
            return this;
        }

        public Criteria andMaxPriceLessThan(Integer value) {
            addCriterion("max_price <", value, "maxPrice");
            return this;
        }

        public Criteria andMaxPriceLessThanOrEqualTo(Integer value) {
            addCriterion("max_price <=", value, "maxPrice");
            return this;
        }

        public Criteria andMaxPriceIn(List values) {
            addCriterion("max_price in", values, "maxPrice");
            return this;
        }

        public Criteria andMaxPriceNotIn(List values) {
            addCriterion("max_price not in", values, "maxPrice");
            return this;
        }

        public Criteria andMaxPriceBetween(Integer value1, Integer value2) {
            addCriterion("max_price between", value1, value2, "maxPrice");
            return this;
        }

        public Criteria andMaxPriceNotBetween(Integer value1, Integer value2) {
            addCriterion("max_price not between", value1, value2, "maxPrice");
            return this;
        }

        public Criteria andEffectRateIsNull() {
            addCriterion("effect_rate is null");
            return this;
        }

        public Criteria andEffectRateIsNotNull() {
            addCriterion("effect_rate is not null");
            return this;
        }

        public Criteria andEffectRateEqualTo(Integer value) {
            addCriterion("effect_rate =", value, "effectRate");
            return this;
        }

        public Criteria andEffectRateNotEqualTo(Integer value) {
            addCriterion("effect_rate <>", value, "effectRate");
            return this;
        }

        public Criteria andEffectRateGreaterThan(Integer value) {
            addCriterion("effect_rate >", value, "effectRate");
            return this;
        }

        public Criteria andEffectRateGreaterThanOrEqualTo(Integer value) {
            addCriterion("effect_rate >=", value, "effectRate");
            return this;
        }

        public Criteria andEffectRateLessThan(Integer value) {
            addCriterion("effect_rate <", value, "effectRate");
            return this;
        }

        public Criteria andEffectRateLessThanOrEqualTo(Integer value) {
            addCriterion("effect_rate <=", value, "effectRate");
            return this;
        }

        public Criteria andEffectRateIn(List values) {
            addCriterion("effect_rate in", values, "effectRate");
            return this;
        }

        public Criteria andEffectRateNotIn(List values) {
            addCriterion("effect_rate not in", values, "effectRate");
            return this;
        }

        public Criteria andEffectRateBetween(Integer value1, Integer value2) {
            addCriterion("effect_rate between", value1, value2, "effectRate");
            return this;
        }

        public Criteria andEffectRateNotBetween(Integer value1, Integer value2) {
            addCriterion("effect_rate not between", value1, value2, "effectRate");
            return this;
        }

        public Criteria andFloatPriceIsNull() {
            addCriterion("float_price is null");
            return this;
        }

        public Criteria andFloatPriceIsNotNull() {
            addCriterion("float_price is not null");
            return this;
        }

        public Criteria andFloatPriceEqualTo(Integer value) {
            addCriterion("float_price =", value, "floatPrice");
            return this;
        }

        public Criteria andFloatPriceNotEqualTo(Integer value) {
            addCriterion("float_price <>", value, "floatPrice");
            return this;
        }

        public Criteria andFloatPriceGreaterThan(Integer value) {
            addCriterion("float_price >", value, "floatPrice");
            return this;
        }

        public Criteria andFloatPriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("float_price >=", value, "floatPrice");
            return this;
        }

        public Criteria andFloatPriceLessThan(Integer value) {
            addCriterion("float_price <", value, "floatPrice");
            return this;
        }

        public Criteria andFloatPriceLessThanOrEqualTo(Integer value) {
            addCriterion("float_price <=", value, "floatPrice");
            return this;
        }

        public Criteria andFloatPriceIn(List values) {
            addCriterion("float_price in", values, "floatPrice");
            return this;
        }

        public Criteria andFloatPriceNotIn(List values) {
            addCriterion("float_price not in", values, "floatPrice");
            return this;
        }

        public Criteria andFloatPriceBetween(Integer value1, Integer value2) {
            addCriterion("float_price between", value1, value2, "floatPrice");
            return this;
        }

        public Criteria andFloatPriceNotBetween(Integer value1, Integer value2) {
            addCriterion("float_price not between", value1, value2, "floatPrice");
            return this;
        }
    }
}