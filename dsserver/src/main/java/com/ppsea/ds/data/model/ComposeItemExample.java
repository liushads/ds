package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ComposeItemExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	public ComposeItemExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	protected ComposeItemExample(ComposeItemExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table compose_item
	 * @ibatorgenerated  Tue Jan 15 22:06:05 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andItemIdIsNull() {
			addCriterion("item_id is null");
			return this;
		}

		public Criteria andItemIdIsNotNull() {
			addCriterion("item_id is not null");
			return this;
		}

		public Criteria andItemIdEqualTo(Integer value) {
			addCriterion("item_id =", value, "itemId");
			return this;
		}

		public Criteria andItemIdNotEqualTo(Integer value) {
			addCriterion("item_id <>", value, "itemId");
			return this;
		}

		public Criteria andItemIdGreaterThan(Integer value) {
			addCriterion("item_id >", value, "itemId");
			return this;
		}

		public Criteria andItemIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("item_id >=", value, "itemId");
			return this;
		}

		public Criteria andItemIdLessThan(Integer value) {
			addCriterion("item_id <", value, "itemId");
			return this;
		}

		public Criteria andItemIdLessThanOrEqualTo(Integer value) {
			addCriterion("item_id <=", value, "itemId");
			return this;
		}

		public Criteria andItemIdIn(List values) {
			addCriterion("item_id in", values, "itemId");
			return this;
		}

		public Criteria andItemIdNotIn(List values) {
			addCriterion("item_id not in", values, "itemId");
			return this;
		}

		public Criteria andItemIdBetween(Integer value1, Integer value2) {
			addCriterion("item_id between", value1, value2, "itemId");
			return this;
		}

		public Criteria andItemIdNotBetween(Integer value1, Integer value2) {
			addCriterion("item_id not between", value1, value2, "itemId");
			return this;
		}

		public Criteria andNeedItemsIsNull() {
			addCriterion("need_items is null");
			return this;
		}

		public Criteria andNeedItemsIsNotNull() {
			addCriterion("need_items is not null");
			return this;
		}

		public Criteria andNeedItemsEqualTo(String value) {
			addCriterion("need_items =", value, "needItems");
			return this;
		}

		public Criteria andNeedItemsNotEqualTo(String value) {
			addCriterion("need_items <>", value, "needItems");
			return this;
		}

		public Criteria andNeedItemsGreaterThan(String value) {
			addCriterion("need_items >", value, "needItems");
			return this;
		}

		public Criteria andNeedItemsGreaterThanOrEqualTo(String value) {
			addCriterion("need_items >=", value, "needItems");
			return this;
		}

		public Criteria andNeedItemsLessThan(String value) {
			addCriterion("need_items <", value, "needItems");
			return this;
		}

		public Criteria andNeedItemsLessThanOrEqualTo(String value) {
			addCriterion("need_items <=", value, "needItems");
			return this;
		}

		public Criteria andNeedItemsLike(String value) {
			addCriterion("need_items like", value, "needItems");
			return this;
		}

		public Criteria andNeedItemsNotLike(String value) {
			addCriterion("need_items not like", value, "needItems");
			return this;
		}

		public Criteria andNeedItemsIn(List values) {
			addCriterion("need_items in", values, "needItems");
			return this;
		}

		public Criteria andNeedItemsNotIn(List values) {
			addCriterion("need_items not in", values, "needItems");
			return this;
		}

		public Criteria andNeedItemsBetween(String value1, String value2) {
			addCriterion("need_items between", value1, value2, "needItems");
			return this;
		}

		public Criteria andNeedItemsNotBetween(String value1, String value2) {
			addCriterion("need_items not between", value1, value2, "needItems");
			return this;
		}

		public Criteria andNeedCopperIsNull() {
			addCriterion("need_copper is null");
			return this;
		}

		public Criteria andNeedCopperIsNotNull() {
			addCriterion("need_copper is not null");
			return this;
		}

		public Criteria andNeedCopperEqualTo(Integer value) {
			addCriterion("need_copper =", value, "needCopper");
			return this;
		}

		public Criteria andNeedCopperNotEqualTo(Integer value) {
			addCriterion("need_copper <>", value, "needCopper");
			return this;
		}

		public Criteria andNeedCopperGreaterThan(Integer value) {
			addCriterion("need_copper >", value, "needCopper");
			return this;
		}

		public Criteria andNeedCopperGreaterThanOrEqualTo(Integer value) {
			addCriterion("need_copper >=", value, "needCopper");
			return this;
		}

		public Criteria andNeedCopperLessThan(Integer value) {
			addCriterion("need_copper <", value, "needCopper");
			return this;
		}

		public Criteria andNeedCopperLessThanOrEqualTo(Integer value) {
			addCriterion("need_copper <=", value, "needCopper");
			return this;
		}

		public Criteria andNeedCopperIn(List values) {
			addCriterion("need_copper in", values, "needCopper");
			return this;
		}

		public Criteria andNeedCopperNotIn(List values) {
			addCriterion("need_copper not in", values, "needCopper");
			return this;
		}

		public Criteria andNeedCopperBetween(Integer value1, Integer value2) {
			addCriterion("need_copper between", value1, value2, "needCopper");
			return this;
		}

		public Criteria andNeedCopperNotBetween(Integer value1, Integer value2) {
			addCriterion("need_copper not between", value1, value2,
					"needCopper");
			return this;
		}

		public Criteria andNeedGoldIsNull() {
			addCriterion("need_gold is null");
			return this;
		}

		public Criteria andNeedGoldIsNotNull() {
			addCriterion("need_gold is not null");
			return this;
		}

		public Criteria andNeedGoldEqualTo(Integer value) {
			addCriterion("need_gold =", value, "needGold");
			return this;
		}

		public Criteria andNeedGoldNotEqualTo(Integer value) {
			addCriterion("need_gold <>", value, "needGold");
			return this;
		}

		public Criteria andNeedGoldGreaterThan(Integer value) {
			addCriterion("need_gold >", value, "needGold");
			return this;
		}

		public Criteria andNeedGoldGreaterThanOrEqualTo(Integer value) {
			addCriterion("need_gold >=", value, "needGold");
			return this;
		}

		public Criteria andNeedGoldLessThan(Integer value) {
			addCriterion("need_gold <", value, "needGold");
			return this;
		}

		public Criteria andNeedGoldLessThanOrEqualTo(Integer value) {
			addCriterion("need_gold <=", value, "needGold");
			return this;
		}

		public Criteria andNeedGoldIn(List values) {
			addCriterion("need_gold in", values, "needGold");
			return this;
		}

		public Criteria andNeedGoldNotIn(List values) {
			addCriterion("need_gold not in", values, "needGold");
			return this;
		}

		public Criteria andNeedGoldBetween(Integer value1, Integer value2) {
			addCriterion("need_gold between", value1, value2, "needGold");
			return this;
		}

		public Criteria andNeedGoldNotBetween(Integer value1, Integer value2) {
			addCriterion("need_gold not between", value1, value2, "needGold");
			return this;
		}
	}
}