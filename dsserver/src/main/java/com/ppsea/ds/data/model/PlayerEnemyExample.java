package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PlayerEnemyExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	public PlayerEnemyExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	protected PlayerEnemyExample(PlayerEnemyExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table player_enemy
	 * @ibatorgenerated  Thu May 27 15:07:51 CST 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andPlayerIdIsNull() {
			addCriterion("player_id is null");
			return this;
		}

		public Criteria andPlayerIdIsNotNull() {
			addCriterion("player_id is not null");
			return this;
		}

		public Criteria andPlayerIdEqualTo(Integer value) {
			addCriterion("player_id =", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotEqualTo(Integer value) {
			addCriterion("player_id <>", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThan(Integer value) {
			addCriterion("player_id >", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("player_id >=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThan(Integer value) {
			addCriterion("player_id <", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
			addCriterion("player_id <=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdIn(List values) {
			addCriterion("player_id in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotIn(List values) {
			addCriterion("player_id not in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
			addCriterion("player_id between", value1, value2, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("player_id not between", value1, value2, "playerId");
			return this;
		}

		public Criteria andEnemyIdIsNull() {
			addCriterion("enemy_id is null");
			return this;
		}

		public Criteria andEnemyIdIsNotNull() {
			addCriterion("enemy_id is not null");
			return this;
		}

		public Criteria andEnemyIdEqualTo(Integer value) {
			addCriterion("enemy_id =", value, "enemyId");
			return this;
		}

		public Criteria andEnemyIdNotEqualTo(Integer value) {
			addCriterion("enemy_id <>", value, "enemyId");
			return this;
		}

		public Criteria andEnemyIdGreaterThan(Integer value) {
			addCriterion("enemy_id >", value, "enemyId");
			return this;
		}

		public Criteria andEnemyIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("enemy_id >=", value, "enemyId");
			return this;
		}

		public Criteria andEnemyIdLessThan(Integer value) {
			addCriterion("enemy_id <", value, "enemyId");
			return this;
		}

		public Criteria andEnemyIdLessThanOrEqualTo(Integer value) {
			addCriterion("enemy_id <=", value, "enemyId");
			return this;
		}

		public Criteria andEnemyIdIn(List values) {
			addCriterion("enemy_id in", values, "enemyId");
			return this;
		}

		public Criteria andEnemyIdNotIn(List values) {
			addCriterion("enemy_id not in", values, "enemyId");
			return this;
		}

		public Criteria andEnemyIdBetween(Integer value1, Integer value2) {
			addCriterion("enemy_id between", value1, value2, "enemyId");
			return this;
		}

		public Criteria andEnemyIdNotBetween(Integer value1, Integer value2) {
			addCriterion("enemy_id not between", value1, value2, "enemyId");
			return this;
		}

		public Criteria andEnemyNameIsNull() {
			addCriterion("enemy_name is null");
			return this;
		}

		public Criteria andEnemyNameIsNotNull() {
			addCriterion("enemy_name is not null");
			return this;
		}

		public Criteria andEnemyNameEqualTo(String value) {
			addCriterion("enemy_name =", value, "enemyName");
			return this;
		}

		public Criteria andEnemyNameNotEqualTo(String value) {
			addCriterion("enemy_name <>", value, "enemyName");
			return this;
		}

		public Criteria andEnemyNameGreaterThan(String value) {
			addCriterion("enemy_name >", value, "enemyName");
			return this;
		}

		public Criteria andEnemyNameGreaterThanOrEqualTo(String value) {
			addCriterion("enemy_name >=", value, "enemyName");
			return this;
		}

		public Criteria andEnemyNameLessThan(String value) {
			addCriterion("enemy_name <", value, "enemyName");
			return this;
		}

		public Criteria andEnemyNameLessThanOrEqualTo(String value) {
			addCriterion("enemy_name <=", value, "enemyName");
			return this;
		}

		public Criteria andEnemyNameLike(String value) {
			addCriterion("enemy_name like", value, "enemyName");
			return this;
		}

		public Criteria andEnemyNameNotLike(String value) {
			addCriterion("enemy_name not like", value, "enemyName");
			return this;
		}

		public Criteria andEnemyNameIn(List values) {
			addCriterion("enemy_name in", values, "enemyName");
			return this;
		}

		public Criteria andEnemyNameNotIn(List values) {
			addCriterion("enemy_name not in", values, "enemyName");
			return this;
		}

		public Criteria andEnemyNameBetween(String value1, String value2) {
			addCriterion("enemy_name between", value1, value2, "enemyName");
			return this;
		}

		public Criteria andEnemyNameNotBetween(String value1, String value2) {
			addCriterion("enemy_name not between", value1, value2, "enemyName");
			return this;
		}

		public Criteria andKilledTimesIsNull() {
			addCriterion("killed_times is null");
			return this;
		}

		public Criteria andKilledTimesIsNotNull() {
			addCriterion("killed_times is not null");
			return this;
		}

		public Criteria andKilledTimesEqualTo(Integer value) {
			addCriterion("killed_times =", value, "killedTimes");
			return this;
		}

		public Criteria andKilledTimesNotEqualTo(Integer value) {
			addCriterion("killed_times <>", value, "killedTimes");
			return this;
		}

		public Criteria andKilledTimesGreaterThan(Integer value) {
			addCriterion("killed_times >", value, "killedTimes");
			return this;
		}

		public Criteria andKilledTimesGreaterThanOrEqualTo(Integer value) {
			addCriterion("killed_times >=", value, "killedTimes");
			return this;
		}

		public Criteria andKilledTimesLessThan(Integer value) {
			addCriterion("killed_times <", value, "killedTimes");
			return this;
		}

		public Criteria andKilledTimesLessThanOrEqualTo(Integer value) {
			addCriterion("killed_times <=", value, "killedTimes");
			return this;
		}

		public Criteria andKilledTimesIn(List values) {
			addCriterion("killed_times in", values, "killedTimes");
			return this;
		}

		public Criteria andKilledTimesNotIn(List values) {
			addCriterion("killed_times not in", values, "killedTimes");
			return this;
		}

		public Criteria andKilledTimesBetween(Integer value1, Integer value2) {
			addCriterion("killed_times between", value1, value2, "killedTimes");
			return this;
		}

		public Criteria andKilledTimesNotBetween(Integer value1, Integer value2) {
			addCriterion("killed_times not between", value1, value2,
					"killedTimes");
			return this;
		}
	}
}