package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.ppsea.ds.data.Page;

public class MessageExample extends Page{
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    public MessageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    protected MessageExample(MessageExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table message
     *
     * @ibatorgenerated Sun May 09 22:49:12 CST 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andPlayerIdIsNull() {
            addCriterion("player_id is null");
            return this;
        }

        public Criteria andPlayerIdIsNotNull() {
            addCriterion("player_id is not null");
            return this;
        }

        public Criteria andPlayerIdEqualTo(Integer value) {
            addCriterion("player_id =", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdNotEqualTo(Integer value) {
            addCriterion("player_id <>", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdGreaterThan(Integer value) {
            addCriterion("player_id >", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("player_id >=", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdLessThan(Integer value) {
            addCriterion("player_id <", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
            addCriterion("player_id <=", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdIn(List<Integer> values) {
            addCriterion("player_id in", values, "playerId");
            return this;
        }

        public Criteria andPlayerIdNotIn(List<Integer> values) {
            addCriterion("player_id not in", values, "playerId");
            return this;
        }

        public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
            addCriterion("player_id between", value1, value2, "playerId");
            return this;
        }

        public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("player_id not between", value1, value2, "playerId");
            return this;
        }

        public Criteria andTypeIdIsNull() {
            addCriterion("type_id is null");
            return this;
        }

        public Criteria andTypeIdIsNotNull() {
            addCriterion("type_id is not null");
            return this;
        }

        public Criteria andTypeIdEqualTo(Integer value) {
            addCriterion("type_id =", value, "typeId");
            return this;
        }

        public Criteria andTypeIdNotEqualTo(Integer value) {
            addCriterion("type_id <>", value, "typeId");
            return this;
        }

        public Criteria andTypeIdGreaterThan(Integer value) {
            addCriterion("type_id >", value, "typeId");
            return this;
        }

        public Criteria andTypeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("type_id >=", value, "typeId");
            return this;
        }

        public Criteria andTypeIdLessThan(Integer value) {
            addCriterion("type_id <", value, "typeId");
            return this;
        }

        public Criteria andTypeIdLessThanOrEqualTo(Integer value) {
            addCriterion("type_id <=", value, "typeId");
            return this;
        }

        public Criteria andTypeIdIn(List<Integer> values) {
            addCriterion("type_id in", values, "typeId");
            return this;
        }

        public Criteria andTypeIdNotIn(List<Integer> values) {
            addCriterion("type_id not in", values, "typeId");
            return this;
        }

        public Criteria andTypeIdBetween(Integer value1, Integer value2) {
            addCriterion("type_id between", value1, value2, "typeId");
            return this;
        }

        public Criteria andTypeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("type_id not between", value1, value2, "typeId");
            return this;
        }

        public Criteria andContentIsNull() {
            addCriterion("content is null");
            return this;
        }

        public Criteria andContentIsNotNull() {
            addCriterion("content is not null");
            return this;
        }

        public Criteria andContentEqualTo(String value) {
            addCriterion("content =", value, "content");
            return this;
        }

        public Criteria andContentNotEqualTo(String value) {
            addCriterion("content <>", value, "content");
            return this;
        }

        public Criteria andContentGreaterThan(String value) {
            addCriterion("content >", value, "content");
            return this;
        }

        public Criteria andContentGreaterThanOrEqualTo(String value) {
            addCriterion("content >=", value, "content");
            return this;
        }

        public Criteria andContentLessThan(String value) {
            addCriterion("content <", value, "content");
            return this;
        }

        public Criteria andContentLessThanOrEqualTo(String value) {
            addCriterion("content <=", value, "content");
            return this;
        }

        public Criteria andContentLike(String value) {
            addCriterion("content like", value, "content");
            return this;
        }

        public Criteria andContentNotLike(String value) {
            addCriterion("content not like", value, "content");
            return this;
        }

        public Criteria andContentIn(List<String> values) {
            addCriterion("content in", values, "content");
            return this;
        }

        public Criteria andContentNotIn(List<String> values) {
            addCriterion("content not in", values, "content");
            return this;
        }

        public Criteria andContentBetween(String value1, String value2) {
            addCriterion("content between", value1, value2, "content");
            return this;
        }

        public Criteria andContentNotBetween(String value1, String value2) {
            addCriterion("content not between", value1, value2, "content");
            return this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return this;
        }

        public Criteria andFromPlayerIdIsNull() {
            addCriterion("from_player_id is null");
            return this;
        }

        public Criteria andFromPlayerIdIsNotNull() {
            addCriterion("from_player_id is not null");
            return this;
        }

        public Criteria andFromPlayerIdEqualTo(Integer value) {
            addCriterion("from_player_id =", value, "fromPlayerId");
            return this;
        }

        public Criteria andFromPlayerIdNotEqualTo(Integer value) {
            addCriterion("from_player_id <>", value, "fromPlayerId");
            return this;
        }

        public Criteria andFromPlayerIdGreaterThan(Integer value) {
            addCriterion("from_player_id >", value, "fromPlayerId");
            return this;
        }

        public Criteria andFromPlayerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("from_player_id >=", value, "fromPlayerId");
            return this;
        }

        public Criteria andFromPlayerIdLessThan(Integer value) {
            addCriterion("from_player_id <", value, "fromPlayerId");
            return this;
        }

        public Criteria andFromPlayerIdLessThanOrEqualTo(Integer value) {
            addCriterion("from_player_id <=", value, "fromPlayerId");
            return this;
        }

        public Criteria andFromPlayerIdIn(List<Integer> values) {
            addCriterion("from_player_id in", values, "fromPlayerId");
            return this;
        }

        public Criteria andFromPlayerIdNotIn(List<Integer> values) {
            addCriterion("from_player_id not in", values, "fromPlayerId");
            return this;
        }

        public Criteria andFromPlayerIdBetween(Integer value1, Integer value2) {
            addCriterion("from_player_id between", value1, value2, "fromPlayerId");
            return this;
        }

        public Criteria andFromPlayerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("from_player_id not between", value1, value2, "fromPlayerId");
            return this;
        }

        public Criteria andFromPlayerNameIsNull() {
            addCriterion("from_player_name is null");
            return this;
        }

        public Criteria andFromPlayerNameIsNotNull() {
            addCriterion("from_player_name is not null");
            return this;
        }

        public Criteria andFromPlayerNameEqualTo(String value) {
            addCriterion("from_player_name =", value, "fromPlayerName");
            return this;
        }

        public Criteria andFromPlayerNameNotEqualTo(String value) {
            addCriterion("from_player_name <>", value, "fromPlayerName");
            return this;
        }

        public Criteria andFromPlayerNameGreaterThan(String value) {
            addCriterion("from_player_name >", value, "fromPlayerName");
            return this;
        }

        public Criteria andFromPlayerNameGreaterThanOrEqualTo(String value) {
            addCriterion("from_player_name >=", value, "fromPlayerName");
            return this;
        }

        public Criteria andFromPlayerNameLessThan(String value) {
            addCriterion("from_player_name <", value, "fromPlayerName");
            return this;
        }

        public Criteria andFromPlayerNameLessThanOrEqualTo(String value) {
            addCriterion("from_player_name <=", value, "fromPlayerName");
            return this;
        }

        public Criteria andFromPlayerNameLike(String value) {
            addCriterion("from_player_name like", value, "fromPlayerName");
            return this;
        }

        public Criteria andFromPlayerNameNotLike(String value) {
            addCriterion("from_player_name not like", value, "fromPlayerName");
            return this;
        }

        public Criteria andFromPlayerNameIn(List<String> values) {
            addCriterion("from_player_name in", values, "fromPlayerName");
            return this;
        }

        public Criteria andFromPlayerNameNotIn(List<String> values) {
            addCriterion("from_player_name not in", values, "fromPlayerName");
            return this;
        }

        public Criteria andFromPlayerNameBetween(String value1, String value2) {
            addCriterion("from_player_name between", value1, value2, "fromPlayerName");
            return this;
        }

        public Criteria andFromPlayerNameNotBetween(String value1, String value2) {
            addCriterion("from_player_name not between", value1, value2, "fromPlayerName");
            return this;
        }

        public Criteria andParametersIsNull() {
            addCriterion("parameters is null");
            return this;
        }

        public Criteria andParametersIsNotNull() {
            addCriterion("parameters is not null");
            return this;
        }

        public Criteria andParametersEqualTo(String value) {
            addCriterion("parameters =", value, "parameters");
            return this;
        }

        public Criteria andParametersNotEqualTo(String value) {
            addCriterion("parameters <>", value, "parameters");
            return this;
        }

        public Criteria andParametersGreaterThan(String value) {
            addCriterion("parameters >", value, "parameters");
            return this;
        }

        public Criteria andParametersGreaterThanOrEqualTo(String value) {
            addCriterion("parameters >=", value, "parameters");
            return this;
        }

        public Criteria andParametersLessThan(String value) {
            addCriterion("parameters <", value, "parameters");
            return this;
        }

        public Criteria andParametersLessThanOrEqualTo(String value) {
            addCriterion("parameters <=", value, "parameters");
            return this;
        }

        public Criteria andParametersLike(String value) {
            addCriterion("parameters like", value, "parameters");
            return this;
        }

        public Criteria andParametersNotLike(String value) {
            addCriterion("parameters not like", value, "parameters");
            return this;
        }

        public Criteria andParametersIn(List<String> values) {
            addCriterion("parameters in", values, "parameters");
            return this;
        }

        public Criteria andParametersNotIn(List<String> values) {
            addCriterion("parameters not in", values, "parameters");
            return this;
        }

        public Criteria andParametersBetween(String value1, String value2) {
            addCriterion("parameters between", value1, value2, "parameters");
            return this;
        }

        public Criteria andParametersNotBetween(String value1, String value2) {
            addCriterion("parameters not between", value1, value2, "parameters");
            return this;
        }

        public Criteria andPlainIsNull() {
            addCriterion("plain is null");
            return this;
        }

        public Criteria andPlainIsNotNull() {
            addCriterion("plain is not null");
            return this;
        }

        public Criteria andPlainEqualTo(Byte value) {
            addCriterion("plain =", value, "plain");
            return this;
        }

        public Criteria andPlainNotEqualTo(Byte value) {
            addCriterion("plain <>", value, "plain");
            return this;
        }

        public Criteria andPlainGreaterThan(Byte value) {
            addCriterion("plain >", value, "plain");
            return this;
        }

        public Criteria andPlainGreaterThanOrEqualTo(Byte value) {
            addCriterion("plain >=", value, "plain");
            return this;
        }

        public Criteria andPlainLessThan(Byte value) {
            addCriterion("plain <", value, "plain");
            return this;
        }

        public Criteria andPlainLessThanOrEqualTo(Byte value) {
            addCriterion("plain <=", value, "plain");
            return this;
        }

        public Criteria andPlainIn(List<Byte> values) {
            addCriterion("plain in", values, "plain");
            return this;
        }

        public Criteria andPlainNotIn(List<Byte> values) {
            addCriterion("plain not in", values, "plain");
            return this;
        }

        public Criteria andPlainBetween(Byte value1, Byte value2) {
            addCriterion("plain between", value1, value2, "plain");
            return this;
        }

        public Criteria andPlainNotBetween(Byte value1, Byte value2) {
            addCriterion("plain not between", value1, value2, "plain");
            return this;
        }
    }
}