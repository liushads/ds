package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PointsItemExample {

	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    protected String orderByClause;
	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    protected List oredCriteria;

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    public PointsItemExample() {
	    oredCriteria = new ArrayList();
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    protected PointsItemExample(PointsItemExample example) {
	    this.orderByClause = example.orderByClause;
	    this.oredCriteria = example.oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
	    this.orderByClause = orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    public String getOrderByClause() {
	    return orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    public List getOredCriteria() {
	    return oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    public void or(Criteria criteria) {
	    oredCriteria.add(criteria);
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    public Criteria createCriteria() {
	    Criteria criteria = createCriteriaInternal();
	    if (oredCriteria.size() == 0) {
		    oredCriteria.add(criteria);
	    }
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    protected Criteria createCriteriaInternal() {
	    Criteria criteria = new Criteria();
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    public void clear() {
	    oredCriteria.clear();
    }

	/**
     * This class was generated by Apache iBATIS ibator. This class corresponds to the database table points_item
     * @ibatorgenerated  Tue Dec 14 11:41:37 CST 2010
     */
    public static class Criteria {
	    protected List criteriaWithoutValue;
	    protected List criteriaWithSingleValue;
	    protected List criteriaWithListValue;
	    protected List criteriaWithBetweenValue;

	    protected Criteria() {
		    super();
		    criteriaWithoutValue = new ArrayList();
		    criteriaWithSingleValue = new ArrayList();
		    criteriaWithListValue = new ArrayList();
		    criteriaWithBetweenValue = new ArrayList();
	    }

	    public boolean isValid() {
		    return criteriaWithoutValue.size() > 0
		            || criteriaWithSingleValue.size() > 0
		            || criteriaWithListValue.size() > 0
		            || criteriaWithBetweenValue.size() > 0;
	    }

	    public List getCriteriaWithoutValue() {
		    return criteriaWithoutValue;
	    }

	    public List getCriteriaWithSingleValue() {
		    return criteriaWithSingleValue;
	    }

	    public List getCriteriaWithListValue() {
		    return criteriaWithListValue;
	    }

	    public List getCriteriaWithBetweenValue() {
		    return criteriaWithBetweenValue;
	    }

	    protected void addCriterion(String condition) {
		    if (condition == null) {
			    throw new RuntimeException("Value for condition cannot be null");
		    }
		    criteriaWithoutValue.add(condition);
	    }

	    protected void addCriterion(String condition, Object value,
	            String property) {
		    if (value == null) {
			    throw new RuntimeException("Value for " + property
			            + " cannot be null");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("value", value);
		    criteriaWithSingleValue.add(map);
	    }

	    protected void addCriterion(String condition, List values,
	            String property) {
		    if (values == null || values.size() == 0) {
			    throw new RuntimeException("Value list for " + property
			            + " cannot be null or empty");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", values);
		    criteriaWithListValue.add(map);
	    }

	    protected void addCriterion(String condition, Object value1,
	            Object value2, String property) {
		    if (value1 == null || value2 == null) {
			    throw new RuntimeException("Between values for " + property
			            + " cannot be null");
		    }
		    List list = new ArrayList();
		    list.add(value1);
		    list.add(value2);
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", list);
		    criteriaWithBetweenValue.add(map);
	    }

	    public Criteria andIdIsNull() {
		    addCriterion("id is null");
		    return this;
	    }

	    public Criteria andIdIsNotNull() {
		    addCriterion("id is not null");
		    return this;
	    }

	    public Criteria andIdEqualTo(Integer value) {
		    addCriterion("id =", value, "id");
		    return this;
	    }

	    public Criteria andIdNotEqualTo(Integer value) {
		    addCriterion("id <>", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThan(Integer value) {
		    addCriterion("id >", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThanOrEqualTo(Integer value) {
		    addCriterion("id >=", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThan(Integer value) {
		    addCriterion("id <", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThanOrEqualTo(Integer value) {
		    addCriterion("id <=", value, "id");
		    return this;
	    }

	    public Criteria andIdIn(List values) {
		    addCriterion("id in", values, "id");
		    return this;
	    }

	    public Criteria andIdNotIn(List values) {
		    addCriterion("id not in", values, "id");
		    return this;
	    }

	    public Criteria andIdBetween(Integer value1, Integer value2) {
		    addCriterion("id between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andIdNotBetween(Integer value1, Integer value2) {
		    addCriterion("id not between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andTypeIsNull() {
		    addCriterion("type is null");
		    return this;
	    }

	    public Criteria andTypeIsNotNull() {
		    addCriterion("type is not null");
		    return this;
	    }

	    public Criteria andTypeEqualTo(Integer value) {
		    addCriterion("type =", value, "type");
		    return this;
	    }

	    public Criteria andTypeNotEqualTo(Integer value) {
		    addCriterion("type <>", value, "type");
		    return this;
	    }

	    public Criteria andTypeGreaterThan(Integer value) {
		    addCriterion("type >", value, "type");
		    return this;
	    }

	    public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
		    addCriterion("type >=", value, "type");
		    return this;
	    }

	    public Criteria andTypeLessThan(Integer value) {
		    addCriterion("type <", value, "type");
		    return this;
	    }

	    public Criteria andTypeLessThanOrEqualTo(Integer value) {
		    addCriterion("type <=", value, "type");
		    return this;
	    }

	    public Criteria andTypeIn(List values) {
		    addCriterion("type in", values, "type");
		    return this;
	    }

	    public Criteria andTypeNotIn(List values) {
		    addCriterion("type not in", values, "type");
		    return this;
	    }

	    public Criteria andTypeBetween(Integer value1, Integer value2) {
		    addCriterion("type between", value1, value2, "type");
		    return this;
	    }

	    public Criteria andTypeNotBetween(Integer value1, Integer value2) {
		    addCriterion("type not between", value1, value2, "type");
		    return this;
	    }

	    public Criteria andItemIdIsNull() {
		    addCriterion("item_id is null");
		    return this;
	    }

	    public Criteria andItemIdIsNotNull() {
		    addCriterion("item_id is not null");
		    return this;
	    }

	    public Criteria andItemIdEqualTo(Integer value) {
		    addCriterion("item_id =", value, "itemId");
		    return this;
	    }

	    public Criteria andItemIdNotEqualTo(Integer value) {
		    addCriterion("item_id <>", value, "itemId");
		    return this;
	    }

	    public Criteria andItemIdGreaterThan(Integer value) {
		    addCriterion("item_id >", value, "itemId");
		    return this;
	    }

	    public Criteria andItemIdGreaterThanOrEqualTo(Integer value) {
		    addCriterion("item_id >=", value, "itemId");
		    return this;
	    }

	    public Criteria andItemIdLessThan(Integer value) {
		    addCriterion("item_id <", value, "itemId");
		    return this;
	    }

	    public Criteria andItemIdLessThanOrEqualTo(Integer value) {
		    addCriterion("item_id <=", value, "itemId");
		    return this;
	    }

	    public Criteria andItemIdIn(List values) {
		    addCriterion("item_id in", values, "itemId");
		    return this;
	    }

	    public Criteria andItemIdNotIn(List values) {
		    addCriterion("item_id not in", values, "itemId");
		    return this;
	    }

	    public Criteria andItemIdBetween(Integer value1, Integer value2) {
		    addCriterion("item_id between", value1, value2, "itemId");
		    return this;
	    }

	    public Criteria andItemIdNotBetween(Integer value1, Integer value2) {
		    addCriterion("item_id not between", value1, value2, "itemId");
		    return this;
	    }

	    public Criteria andAmountIsNull() {
		    addCriterion("amount is null");
		    return this;
	    }

	    public Criteria andAmountIsNotNull() {
		    addCriterion("amount is not null");
		    return this;
	    }

	    public Criteria andAmountEqualTo(Integer value) {
		    addCriterion("amount =", value, "amount");
		    return this;
	    }

	    public Criteria andAmountNotEqualTo(Integer value) {
		    addCriterion("amount <>", value, "amount");
		    return this;
	    }

	    public Criteria andAmountGreaterThan(Integer value) {
		    addCriterion("amount >", value, "amount");
		    return this;
	    }

	    public Criteria andAmountGreaterThanOrEqualTo(Integer value) {
		    addCriterion("amount >=", value, "amount");
		    return this;
	    }

	    public Criteria andAmountLessThan(Integer value) {
		    addCriterion("amount <", value, "amount");
		    return this;
	    }

	    public Criteria andAmountLessThanOrEqualTo(Integer value) {
		    addCriterion("amount <=", value, "amount");
		    return this;
	    }

	    public Criteria andAmountIn(List values) {
		    addCriterion("amount in", values, "amount");
		    return this;
	    }

	    public Criteria andAmountNotIn(List values) {
		    addCriterion("amount not in", values, "amount");
		    return this;
	    }

	    public Criteria andAmountBetween(Integer value1, Integer value2) {
		    addCriterion("amount between", value1, value2, "amount");
		    return this;
	    }

	    public Criteria andAmountNotBetween(Integer value1, Integer value2) {
		    addCriterion("amount not between", value1, value2, "amount");
		    return this;
	    }

	    public Criteria andPointsIsNull() {
		    addCriterion("points is null");
		    return this;
	    }

	    public Criteria andPointsIsNotNull() {
		    addCriterion("points is not null");
		    return this;
	    }

	    public Criteria andPointsEqualTo(Integer value) {
		    addCriterion("points =", value, "points");
		    return this;
	    }

	    public Criteria andPointsNotEqualTo(Integer value) {
		    addCriterion("points <>", value, "points");
		    return this;
	    }

	    public Criteria andPointsGreaterThan(Integer value) {
		    addCriterion("points >", value, "points");
		    return this;
	    }

	    public Criteria andPointsGreaterThanOrEqualTo(Integer value) {
		    addCriterion("points >=", value, "points");
		    return this;
	    }

	    public Criteria andPointsLessThan(Integer value) {
		    addCriterion("points <", value, "points");
		    return this;
	    }

	    public Criteria andPointsLessThanOrEqualTo(Integer value) {
		    addCriterion("points <=", value, "points");
		    return this;
	    }

	    public Criteria andPointsIn(List values) {
		    addCriterion("points in", values, "points");
		    return this;
	    }

	    public Criteria andPointsNotIn(List values) {
		    addCriterion("points not in", values, "points");
		    return this;
	    }

	    public Criteria andPointsBetween(Integer value1, Integer value2) {
		    addCriterion("points between", value1, value2, "points");
		    return this;
	    }

	    public Criteria andPointsNotBetween(Integer value1, Integer value2) {
		    addCriterion("points not between", value1, value2, "points");
		    return this;
	    }

	    public Criteria andItemNameIsNull() {
		    addCriterion("item_name is null");
		    return this;
	    }

	    public Criteria andItemNameIsNotNull() {
		    addCriterion("item_name is not null");
		    return this;
	    }

	    public Criteria andItemNameEqualTo(String value) {
		    addCriterion("item_name =", value, "itemName");
		    return this;
	    }

	    public Criteria andItemNameNotEqualTo(String value) {
		    addCriterion("item_name <>", value, "itemName");
		    return this;
	    }

	    public Criteria andItemNameGreaterThan(String value) {
		    addCriterion("item_name >", value, "itemName");
		    return this;
	    }

	    public Criteria andItemNameGreaterThanOrEqualTo(String value) {
		    addCriterion("item_name >=", value, "itemName");
		    return this;
	    }

	    public Criteria andItemNameLessThan(String value) {
		    addCriterion("item_name <", value, "itemName");
		    return this;
	    }

	    public Criteria andItemNameLessThanOrEqualTo(String value) {
		    addCriterion("item_name <=", value, "itemName");
		    return this;
	    }

	    public Criteria andItemNameLike(String value) {
		    addCriterion("item_name like", value, "itemName");
		    return this;
	    }

	    public Criteria andItemNameNotLike(String value) {
		    addCriterion("item_name not like", value, "itemName");
		    return this;
	    }

	    public Criteria andItemNameIn(List values) {
		    addCriterion("item_name in", values, "itemName");
		    return this;
	    }

	    public Criteria andItemNameNotIn(List values) {
		    addCriterion("item_name not in", values, "itemName");
		    return this;
	    }

	    public Criteria andItemNameBetween(String value1, String value2) {
		    addCriterion("item_name between", value1, value2, "itemName");
		    return this;
	    }

	    public Criteria andItemNameNotBetween(String value1, String value2) {
		    addCriterion("item_name not between", value1, value2, "itemName");
		    return this;
	    }
    }
}