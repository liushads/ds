package com.ppsea.ds.data.dao;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.ppsea.ds.data.model.MissionType;
import com.ppsea.ds.data.model.MissionTypeExample;

public class MissionTypeDAOImpl implements MissionTypeDAO {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    public MissionTypeDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    public Integer insert(MissionType record) throws SQLException {
        Object newKey = sqlMapClient.insert("mission_type.abatorgenerated_insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    public int updateByPrimaryKey(MissionType record) throws SQLException {
        int rows = sqlMapClient.update("mission_type.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    public int updateByPrimaryKeySelective(MissionType record) throws SQLException {
        int rows = sqlMapClient.update("mission_type.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    @SuppressWarnings("unchecked")
    public List<MissionType> selectByExample(MissionTypeExample example) throws SQLException {
        List<MissionType> list = (List<MissionType>) sqlMapClient.queryForList("mission_type.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    public MissionType selectByPrimaryKey(Integer id) throws SQLException {
        MissionType key = new MissionType();
        key.setId(id);
        MissionType record = (MissionType) sqlMapClient.queryForObject("mission_type.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    public int deleteByExample(MissionTypeExample example) throws SQLException {
        int rows = sqlMapClient.delete("mission_type.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    public int deleteByPrimaryKey(Integer id) throws SQLException {
        MissionType key = new MissionType();
        key.setId(id);
        int rows = sqlMapClient.delete("mission_type.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    public int countByExample(MissionTypeExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("mission_type.abatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    public int updateByExampleSelective(MissionType record, MissionTypeExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("mission_type.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    public int updateByExample(MissionType record, MissionTypeExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("mission_type.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table mission_type
     *
     * @abatorgenerated Wed Dec 17 16:31:41 CST 2008
     */
    private static class UpdateByExampleParms extends MissionTypeExample {
        private Object record;

        public UpdateByExampleParms(Object record, MissionTypeExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}