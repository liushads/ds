package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class QuestionTypeExample {

	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    protected String orderByClause;
	/**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    protected List oredCriteria;

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    public QuestionTypeExample() {
	    oredCriteria = new ArrayList();
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    protected QuestionTypeExample(QuestionTypeExample example) {
	    this.orderByClause = example.orderByClause;
	    this.oredCriteria = example.oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    public void setOrderByClause(String orderByClause) {
	    this.orderByClause = orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    public String getOrderByClause() {
	    return orderByClause;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    public List getOredCriteria() {
	    return oredCriteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    public void or(Criteria criteria) {
	    oredCriteria.add(criteria);
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    public Criteria createCriteria() {
	    Criteria criteria = createCriteriaInternal();
	    if (oredCriteria.size() == 0) {
		    oredCriteria.add(criteria);
	    }
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    protected Criteria createCriteriaInternal() {
	    Criteria criteria = new Criteria();
	    return criteria;
    }

	/**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    public void clear() {
	    oredCriteria.clear();
    }

	/**
     * This class was generated by Apache iBATIS ibator. This class corresponds to the database table question_type
     * @ibatorgenerated  Wed May 25 16:18:24 CST 2011
     */
    public static class Criteria {
	    protected List criteriaWithoutValue;
	    protected List criteriaWithSingleValue;
	    protected List criteriaWithListValue;
	    protected List criteriaWithBetweenValue;

	    protected Criteria() {
		    super();
		    criteriaWithoutValue = new ArrayList();
		    criteriaWithSingleValue = new ArrayList();
		    criteriaWithListValue = new ArrayList();
		    criteriaWithBetweenValue = new ArrayList();
	    }

	    public boolean isValid() {
		    return criteriaWithoutValue.size() > 0
		            || criteriaWithSingleValue.size() > 0
		            || criteriaWithListValue.size() > 0
		            || criteriaWithBetweenValue.size() > 0;
	    }

	    public List getCriteriaWithoutValue() {
		    return criteriaWithoutValue;
	    }

	    public List getCriteriaWithSingleValue() {
		    return criteriaWithSingleValue;
	    }

	    public List getCriteriaWithListValue() {
		    return criteriaWithListValue;
	    }

	    public List getCriteriaWithBetweenValue() {
		    return criteriaWithBetweenValue;
	    }

	    protected void addCriterion(String condition) {
		    if (condition == null) {
			    throw new RuntimeException("Value for condition cannot be null");
		    }
		    criteriaWithoutValue.add(condition);
	    }

	    protected void addCriterion(String condition, Object value,
	            String property) {
		    if (value == null) {
			    throw new RuntimeException("Value for " + property
			            + " cannot be null");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("value", value);
		    criteriaWithSingleValue.add(map);
	    }

	    protected void addCriterion(String condition, List values,
	            String property) {
		    if (values == null || values.size() == 0) {
			    throw new RuntimeException("Value list for " + property
			            + " cannot be null or empty");
		    }
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", values);
		    criteriaWithListValue.add(map);
	    }

	    protected void addCriterion(String condition, Object value1,
	            Object value2, String property) {
		    if (value1 == null || value2 == null) {
			    throw new RuntimeException("Between values for " + property
			            + " cannot be null");
		    }
		    List list = new ArrayList();
		    list.add(value1);
		    list.add(value2);
		    Map map = new HashMap();
		    map.put("condition", condition);
		    map.put("values", list);
		    criteriaWithBetweenValue.add(map);
	    }

	    public Criteria andIdIsNull() {
		    addCriterion("id is null");
		    return this;
	    }

	    public Criteria andIdIsNotNull() {
		    addCriterion("id is not null");
		    return this;
	    }

	    public Criteria andIdEqualTo(Integer value) {
		    addCriterion("id =", value, "id");
		    return this;
	    }

	    public Criteria andIdNotEqualTo(Integer value) {
		    addCriterion("id <>", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThan(Integer value) {
		    addCriterion("id >", value, "id");
		    return this;
	    }

	    public Criteria andIdGreaterThanOrEqualTo(Integer value) {
		    addCriterion("id >=", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThan(Integer value) {
		    addCriterion("id <", value, "id");
		    return this;
	    }

	    public Criteria andIdLessThanOrEqualTo(Integer value) {
		    addCriterion("id <=", value, "id");
		    return this;
	    }

	    public Criteria andIdIn(List values) {
		    addCriterion("id in", values, "id");
		    return this;
	    }

	    public Criteria andIdNotIn(List values) {
		    addCriterion("id not in", values, "id");
		    return this;
	    }

	    public Criteria andIdBetween(Integer value1, Integer value2) {
		    addCriterion("id between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andIdNotBetween(Integer value1, Integer value2) {
		    addCriterion("id not between", value1, value2, "id");
		    return this;
	    }

	    public Criteria andTypeIsNull() {
		    addCriterion("type is null");
		    return this;
	    }

	    public Criteria andTypeIsNotNull() {
		    addCriterion("type is not null");
		    return this;
	    }

	    public Criteria andTypeEqualTo(Integer value) {
		    addCriterion("type =", value, "type");
		    return this;
	    }

	    public Criteria andTypeNotEqualTo(Integer value) {
		    addCriterion("type <>", value, "type");
		    return this;
	    }

	    public Criteria andTypeGreaterThan(Integer value) {
		    addCriterion("type >", value, "type");
		    return this;
	    }

	    public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
		    addCriterion("type >=", value, "type");
		    return this;
	    }

	    public Criteria andTypeLessThan(Integer value) {
		    addCriterion("type <", value, "type");
		    return this;
	    }

	    public Criteria andTypeLessThanOrEqualTo(Integer value) {
		    addCriterion("type <=", value, "type");
		    return this;
	    }

	    public Criteria andTypeIn(List values) {
		    addCriterion("type in", values, "type");
		    return this;
	    }

	    public Criteria andTypeNotIn(List values) {
		    addCriterion("type not in", values, "type");
		    return this;
	    }

	    public Criteria andTypeBetween(Integer value1, Integer value2) {
		    addCriterion("type between", value1, value2, "type");
		    return this;
	    }

	    public Criteria andTypeNotBetween(Integer value1, Integer value2) {
		    addCriterion("type not between", value1, value2, "type");
		    return this;
	    }

	    public Criteria andDescriptionIsNull() {
		    addCriterion("description is null");
		    return this;
	    }

	    public Criteria andDescriptionIsNotNull() {
		    addCriterion("description is not null");
		    return this;
	    }

	    public Criteria andDescriptionEqualTo(String value) {
		    addCriterion("description =", value, "description");
		    return this;
	    }

	    public Criteria andDescriptionNotEqualTo(String value) {
		    addCriterion("description <>", value, "description");
		    return this;
	    }

	    public Criteria andDescriptionGreaterThan(String value) {
		    addCriterion("description >", value, "description");
		    return this;
	    }

	    public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
		    addCriterion("description >=", value, "description");
		    return this;
	    }

	    public Criteria andDescriptionLessThan(String value) {
		    addCriterion("description <", value, "description");
		    return this;
	    }

	    public Criteria andDescriptionLessThanOrEqualTo(String value) {
		    addCriterion("description <=", value, "description");
		    return this;
	    }

	    public Criteria andDescriptionLike(String value) {
		    addCriterion("description like", value, "description");
		    return this;
	    }

	    public Criteria andDescriptionNotLike(String value) {
		    addCriterion("description not like", value, "description");
		    return this;
	    }

	    public Criteria andDescriptionIn(List values) {
		    addCriterion("description in", values, "description");
		    return this;
	    }

	    public Criteria andDescriptionNotIn(List values) {
		    addCriterion("description not in", values, "description");
		    return this;
	    }

	    public Criteria andDescriptionBetween(String value1, String value2) {
		    addCriterion("description between", value1, value2, "description");
		    return this;
	    }

	    public Criteria andDescriptionNotBetween(String value1, String value2) {
		    addCriterion("description not between", value1, value2,
		            "description");
		    return this;
	    }
    }
}