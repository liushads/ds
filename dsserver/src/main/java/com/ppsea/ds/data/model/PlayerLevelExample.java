package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PlayerLevelExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	public PlayerLevelExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	protected PlayerLevelExample(PlayerLevelExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table player_level
	 * @ibatorgenerated  Thu Dec 27 01:05:56 CST 2012
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andLevelIsNull() {
			addCriterion("level is null");
			return this;
		}

		public Criteria andLevelIsNotNull() {
			addCriterion("level is not null");
			return this;
		}

		public Criteria andLevelEqualTo(Integer value) {
			addCriterion("level =", value, "level");
			return this;
		}

		public Criteria andLevelNotEqualTo(Integer value) {
			addCriterion("level <>", value, "level");
			return this;
		}

		public Criteria andLevelGreaterThan(Integer value) {
			addCriterion("level >", value, "level");
			return this;
		}

		public Criteria andLevelGreaterThanOrEqualTo(Integer value) {
			addCriterion("level >=", value, "level");
			return this;
		}

		public Criteria andLevelLessThan(Integer value) {
			addCriterion("level <", value, "level");
			return this;
		}

		public Criteria andLevelLessThanOrEqualTo(Integer value) {
			addCriterion("level <=", value, "level");
			return this;
		}

		public Criteria andLevelIn(List values) {
			addCriterion("level in", values, "level");
			return this;
		}

		public Criteria andLevelNotIn(List values) {
			addCriterion("level not in", values, "level");
			return this;
		}

		public Criteria andLevelBetween(Integer value1, Integer value2) {
			addCriterion("level between", value1, value2, "level");
			return this;
		}

		public Criteria andLevelNotBetween(Integer value1, Integer value2) {
			addCriterion("level not between", value1, value2, "level");
			return this;
		}

		public Criteria andExpIsNull() {
			addCriterion("exp is null");
			return this;
		}

		public Criteria andExpIsNotNull() {
			addCriterion("exp is not null");
			return this;
		}

		public Criteria andExpEqualTo(Integer value) {
			addCriterion("exp =", value, "exp");
			return this;
		}

		public Criteria andExpNotEqualTo(Integer value) {
			addCriterion("exp <>", value, "exp");
			return this;
		}

		public Criteria andExpGreaterThan(Integer value) {
			addCriterion("exp >", value, "exp");
			return this;
		}

		public Criteria andExpGreaterThanOrEqualTo(Integer value) {
			addCriterion("exp >=", value, "exp");
			return this;
		}

		public Criteria andExpLessThan(Integer value) {
			addCriterion("exp <", value, "exp");
			return this;
		}

		public Criteria andExpLessThanOrEqualTo(Integer value) {
			addCriterion("exp <=", value, "exp");
			return this;
		}

		public Criteria andExpIn(List values) {
			addCriterion("exp in", values, "exp");
			return this;
		}

		public Criteria andExpNotIn(List values) {
			addCriterion("exp not in", values, "exp");
			return this;
		}

		public Criteria andExpBetween(Integer value1, Integer value2) {
			addCriterion("exp between", value1, value2, "exp");
			return this;
		}

		public Criteria andExpNotBetween(Integer value1, Integer value2) {
			addCriterion("exp not between", value1, value2, "exp");
			return this;
		}

		public Criteria andAttackMinIsNull() {
			addCriterion("attack_min is null");
			return this;
		}

		public Criteria andAttackMinIsNotNull() {
			addCriterion("attack_min is not null");
			return this;
		}

		public Criteria andAttackMinEqualTo(Integer value) {
			addCriterion("attack_min =", value, "attackMin");
			return this;
		}

		public Criteria andAttackMinNotEqualTo(Integer value) {
			addCriterion("attack_min <>", value, "attackMin");
			return this;
		}

		public Criteria andAttackMinGreaterThan(Integer value) {
			addCriterion("attack_min >", value, "attackMin");
			return this;
		}

		public Criteria andAttackMinGreaterThanOrEqualTo(Integer value) {
			addCriterion("attack_min >=", value, "attackMin");
			return this;
		}

		public Criteria andAttackMinLessThan(Integer value) {
			addCriterion("attack_min <", value, "attackMin");
			return this;
		}

		public Criteria andAttackMinLessThanOrEqualTo(Integer value) {
			addCriterion("attack_min <=", value, "attackMin");
			return this;
		}

		public Criteria andAttackMinIn(List values) {
			addCriterion("attack_min in", values, "attackMin");
			return this;
		}

		public Criteria andAttackMinNotIn(List values) {
			addCriterion("attack_min not in", values, "attackMin");
			return this;
		}

		public Criteria andAttackMinBetween(Integer value1, Integer value2) {
			addCriterion("attack_min between", value1, value2, "attackMin");
			return this;
		}

		public Criteria andAttackMinNotBetween(Integer value1, Integer value2) {
			addCriterion("attack_min not between", value1, value2, "attackMin");
			return this;
		}

		public Criteria andAttackMaxIsNull() {
			addCriterion("attack_max is null");
			return this;
		}

		public Criteria andAttackMaxIsNotNull() {
			addCriterion("attack_max is not null");
			return this;
		}

		public Criteria andAttackMaxEqualTo(Integer value) {
			addCriterion("attack_max =", value, "attackMax");
			return this;
		}

		public Criteria andAttackMaxNotEqualTo(Integer value) {
			addCriterion("attack_max <>", value, "attackMax");
			return this;
		}

		public Criteria andAttackMaxGreaterThan(Integer value) {
			addCriterion("attack_max >", value, "attackMax");
			return this;
		}

		public Criteria andAttackMaxGreaterThanOrEqualTo(Integer value) {
			addCriterion("attack_max >=", value, "attackMax");
			return this;
		}

		public Criteria andAttackMaxLessThan(Integer value) {
			addCriterion("attack_max <", value, "attackMax");
			return this;
		}

		public Criteria andAttackMaxLessThanOrEqualTo(Integer value) {
			addCriterion("attack_max <=", value, "attackMax");
			return this;
		}

		public Criteria andAttackMaxIn(List values) {
			addCriterion("attack_max in", values, "attackMax");
			return this;
		}

		public Criteria andAttackMaxNotIn(List values) {
			addCriterion("attack_max not in", values, "attackMax");
			return this;
		}

		public Criteria andAttackMaxBetween(Integer value1, Integer value2) {
			addCriterion("attack_max between", value1, value2, "attackMax");
			return this;
		}

		public Criteria andAttackMaxNotBetween(Integer value1, Integer value2) {
			addCriterion("attack_max not between", value1, value2, "attackMax");
			return this;
		}

		public Criteria andDefenceIsNull() {
			addCriterion("defence is null");
			return this;
		}

		public Criteria andDefenceIsNotNull() {
			addCriterion("defence is not null");
			return this;
		}

		public Criteria andDefenceEqualTo(Integer value) {
			addCriterion("defence =", value, "defence");
			return this;
		}

		public Criteria andDefenceNotEqualTo(Integer value) {
			addCriterion("defence <>", value, "defence");
			return this;
		}

		public Criteria andDefenceGreaterThan(Integer value) {
			addCriterion("defence >", value, "defence");
			return this;
		}

		public Criteria andDefenceGreaterThanOrEqualTo(Integer value) {
			addCriterion("defence >=", value, "defence");
			return this;
		}

		public Criteria andDefenceLessThan(Integer value) {
			addCriterion("defence <", value, "defence");
			return this;
		}

		public Criteria andDefenceLessThanOrEqualTo(Integer value) {
			addCriterion("defence <=", value, "defence");
			return this;
		}

		public Criteria andDefenceIn(List values) {
			addCriterion("defence in", values, "defence");
			return this;
		}

		public Criteria andDefenceNotIn(List values) {
			addCriterion("defence not in", values, "defence");
			return this;
		}

		public Criteria andDefenceBetween(Integer value1, Integer value2) {
			addCriterion("defence between", value1, value2, "defence");
			return this;
		}

		public Criteria andDefenceNotBetween(Integer value1, Integer value2) {
			addCriterion("defence not between", value1, value2, "defence");
			return this;
		}

		public Criteria andHpIsNull() {
			addCriterion("hp is null");
			return this;
		}

		public Criteria andHpIsNotNull() {
			addCriterion("hp is not null");
			return this;
		}

		public Criteria andHpEqualTo(Integer value) {
			addCriterion("hp =", value, "hp");
			return this;
		}

		public Criteria andHpNotEqualTo(Integer value) {
			addCriterion("hp <>", value, "hp");
			return this;
		}

		public Criteria andHpGreaterThan(Integer value) {
			addCriterion("hp >", value, "hp");
			return this;
		}

		public Criteria andHpGreaterThanOrEqualTo(Integer value) {
			addCriterion("hp >=", value, "hp");
			return this;
		}

		public Criteria andHpLessThan(Integer value) {
			addCriterion("hp <", value, "hp");
			return this;
		}

		public Criteria andHpLessThanOrEqualTo(Integer value) {
			addCriterion("hp <=", value, "hp");
			return this;
		}

		public Criteria andHpIn(List values) {
			addCriterion("hp in", values, "hp");
			return this;
		}

		public Criteria andHpNotIn(List values) {
			addCriterion("hp not in", values, "hp");
			return this;
		}

		public Criteria andHpBetween(Integer value1, Integer value2) {
			addCriterion("hp between", value1, value2, "hp");
			return this;
		}

		public Criteria andHpNotBetween(Integer value1, Integer value2) {
			addCriterion("hp not between", value1, value2, "hp");
			return this;
		}

		public Criteria andCritIsNull() {
			addCriterion("crit is null");
			return this;
		}

		public Criteria andCritIsNotNull() {
			addCriterion("crit is not null");
			return this;
		}

		public Criteria andCritEqualTo(Integer value) {
			addCriterion("crit =", value, "crit");
			return this;
		}

		public Criteria andCritNotEqualTo(Integer value) {
			addCriterion("crit <>", value, "crit");
			return this;
		}

		public Criteria andCritGreaterThan(Integer value) {
			addCriterion("crit >", value, "crit");
			return this;
		}

		public Criteria andCritGreaterThanOrEqualTo(Integer value) {
			addCriterion("crit >=", value, "crit");
			return this;
		}

		public Criteria andCritLessThan(Integer value) {
			addCriterion("crit <", value, "crit");
			return this;
		}

		public Criteria andCritLessThanOrEqualTo(Integer value) {
			addCriterion("crit <=", value, "crit");
			return this;
		}

		public Criteria andCritIn(List values) {
			addCriterion("crit in", values, "crit");
			return this;
		}

		public Criteria andCritNotIn(List values) {
			addCriterion("crit not in", values, "crit");
			return this;
		}

		public Criteria andCritBetween(Integer value1, Integer value2) {
			addCriterion("crit between", value1, value2, "crit");
			return this;
		}

		public Criteria andCritNotBetween(Integer value1, Integer value2) {
			addCriterion("crit not between", value1, value2, "crit");
			return this;
		}

		public Criteria andParryIsNull() {
			addCriterion("parry is null");
			return this;
		}

		public Criteria andParryIsNotNull() {
			addCriterion("parry is not null");
			return this;
		}

		public Criteria andParryEqualTo(Integer value) {
			addCriterion("parry =", value, "parry");
			return this;
		}

		public Criteria andParryNotEqualTo(Integer value) {
			addCriterion("parry <>", value, "parry");
			return this;
		}

		public Criteria andParryGreaterThan(Integer value) {
			addCriterion("parry >", value, "parry");
			return this;
		}

		public Criteria andParryGreaterThanOrEqualTo(Integer value) {
			addCriterion("parry >=", value, "parry");
			return this;
		}

		public Criteria andParryLessThan(Integer value) {
			addCriterion("parry <", value, "parry");
			return this;
		}

		public Criteria andParryLessThanOrEqualTo(Integer value) {
			addCriterion("parry <=", value, "parry");
			return this;
		}

		public Criteria andParryIn(List values) {
			addCriterion("parry in", values, "parry");
			return this;
		}

		public Criteria andParryNotIn(List values) {
			addCriterion("parry not in", values, "parry");
			return this;
		}

		public Criteria andParryBetween(Integer value1, Integer value2) {
			addCriterion("parry between", value1, value2, "parry");
			return this;
		}

		public Criteria andParryNotBetween(Integer value1, Integer value2) {
			addCriterion("parry not between", value1, value2, "parry");
			return this;
		}

		public Criteria andConstitutionIsNull() {
			addCriterion("constitution is null");
			return this;
		}

		public Criteria andConstitutionIsNotNull() {
			addCriterion("constitution is not null");
			return this;
		}

		public Criteria andConstitutionEqualTo(Integer value) {
			addCriterion("constitution =", value, "constitution");
			return this;
		}

		public Criteria andConstitutionNotEqualTo(Integer value) {
			addCriterion("constitution <>", value, "constitution");
			return this;
		}

		public Criteria andConstitutionGreaterThan(Integer value) {
			addCriterion("constitution >", value, "constitution");
			return this;
		}

		public Criteria andConstitutionGreaterThanOrEqualTo(Integer value) {
			addCriterion("constitution >=", value, "constitution");
			return this;
		}

		public Criteria andConstitutionLessThan(Integer value) {
			addCriterion("constitution <", value, "constitution");
			return this;
		}

		public Criteria andConstitutionLessThanOrEqualTo(Integer value) {
			addCriterion("constitution <=", value, "constitution");
			return this;
		}

		public Criteria andConstitutionIn(List values) {
			addCriterion("constitution in", values, "constitution");
			return this;
		}

		public Criteria andConstitutionNotIn(List values) {
			addCriterion("constitution not in", values, "constitution");
			return this;
		}

		public Criteria andConstitutionBetween(Integer value1, Integer value2) {
			addCriterion("constitution between", value1, value2, "constitution");
			return this;
		}

		public Criteria andConstitutionNotBetween(Integer value1, Integer value2) {
			addCriterion("constitution not between", value1, value2,
					"constitution");
			return this;
		}

		public Criteria andForcesIsNull() {
			addCriterion("forces is null");
			return this;
		}

		public Criteria andForcesIsNotNull() {
			addCriterion("forces is not null");
			return this;
		}

		public Criteria andForcesEqualTo(Integer value) {
			addCriterion("forces =", value, "forces");
			return this;
		}

		public Criteria andForcesNotEqualTo(Integer value) {
			addCriterion("forces <>", value, "forces");
			return this;
		}

		public Criteria andForcesGreaterThan(Integer value) {
			addCriterion("forces >", value, "forces");
			return this;
		}

		public Criteria andForcesGreaterThanOrEqualTo(Integer value) {
			addCriterion("forces >=", value, "forces");
			return this;
		}

		public Criteria andForcesLessThan(Integer value) {
			addCriterion("forces <", value, "forces");
			return this;
		}

		public Criteria andForcesLessThanOrEqualTo(Integer value) {
			addCriterion("forces <=", value, "forces");
			return this;
		}

		public Criteria andForcesIn(List values) {
			addCriterion("forces in", values, "forces");
			return this;
		}

		public Criteria andForcesNotIn(List values) {
			addCriterion("forces not in", values, "forces");
			return this;
		}

		public Criteria andForcesBetween(Integer value1, Integer value2) {
			addCriterion("forces between", value1, value2, "forces");
			return this;
		}

		public Criteria andForcesNotBetween(Integer value1, Integer value2) {
			addCriterion("forces not between", value1, value2, "forces");
			return this;
		}

		public Criteria andAgilityIsNull() {
			addCriterion("agility is null");
			return this;
		}

		public Criteria andAgilityIsNotNull() {
			addCriterion("agility is not null");
			return this;
		}

		public Criteria andAgilityEqualTo(Integer value) {
			addCriterion("agility =", value, "agility");
			return this;
		}

		public Criteria andAgilityNotEqualTo(Integer value) {
			addCriterion("agility <>", value, "agility");
			return this;
		}

		public Criteria andAgilityGreaterThan(Integer value) {
			addCriterion("agility >", value, "agility");
			return this;
		}

		public Criteria andAgilityGreaterThanOrEqualTo(Integer value) {
			addCriterion("agility >=", value, "agility");
			return this;
		}

		public Criteria andAgilityLessThan(Integer value) {
			addCriterion("agility <", value, "agility");
			return this;
		}

		public Criteria andAgilityLessThanOrEqualTo(Integer value) {
			addCriterion("agility <=", value, "agility");
			return this;
		}

		public Criteria andAgilityIn(List values) {
			addCriterion("agility in", values, "agility");
			return this;
		}

		public Criteria andAgilityNotIn(List values) {
			addCriterion("agility not in", values, "agility");
			return this;
		}

		public Criteria andAgilityBetween(Integer value1, Integer value2) {
			addCriterion("agility between", value1, value2, "agility");
			return this;
		}

		public Criteria andAgilityNotBetween(Integer value1, Integer value2) {
			addCriterion("agility not between", value1, value2, "agility");
			return this;
		}

		public Criteria andIntelligenceIsNull() {
			addCriterion("intelligence is null");
			return this;
		}

		public Criteria andIntelligenceIsNotNull() {
			addCriterion("intelligence is not null");
			return this;
		}

		public Criteria andIntelligenceEqualTo(Integer value) {
			addCriterion("intelligence =", value, "intelligence");
			return this;
		}

		public Criteria andIntelligenceNotEqualTo(Integer value) {
			addCriterion("intelligence <>", value, "intelligence");
			return this;
		}

		public Criteria andIntelligenceGreaterThan(Integer value) {
			addCriterion("intelligence >", value, "intelligence");
			return this;
		}

		public Criteria andIntelligenceGreaterThanOrEqualTo(Integer value) {
			addCriterion("intelligence >=", value, "intelligence");
			return this;
		}

		public Criteria andIntelligenceLessThan(Integer value) {
			addCriterion("intelligence <", value, "intelligence");
			return this;
		}

		public Criteria andIntelligenceLessThanOrEqualTo(Integer value) {
			addCriterion("intelligence <=", value, "intelligence");
			return this;
		}

		public Criteria andIntelligenceIn(List values) {
			addCriterion("intelligence in", values, "intelligence");
			return this;
		}

		public Criteria andIntelligenceNotIn(List values) {
			addCriterion("intelligence not in", values, "intelligence");
			return this;
		}

		public Criteria andIntelligenceBetween(Integer value1, Integer value2) {
			addCriterion("intelligence between", value1, value2, "intelligence");
			return this;
		}

		public Criteria andIntelligenceNotBetween(Integer value1, Integer value2) {
			addCriterion("intelligence not between", value1, value2,
					"intelligence");
			return this;
		}

		public Criteria andRoomIsNull() {
			addCriterion("room is null");
			return this;
		}

		public Criteria andRoomIsNotNull() {
			addCriterion("room is not null");
			return this;
		}

		public Criteria andRoomEqualTo(Integer value) {
			addCriterion("room =", value, "room");
			return this;
		}

		public Criteria andRoomNotEqualTo(Integer value) {
			addCriterion("room <>", value, "room");
			return this;
		}

		public Criteria andRoomGreaterThan(Integer value) {
			addCriterion("room >", value, "room");
			return this;
		}

		public Criteria andRoomGreaterThanOrEqualTo(Integer value) {
			addCriterion("room >=", value, "room");
			return this;
		}

		public Criteria andRoomLessThan(Integer value) {
			addCriterion("room <", value, "room");
			return this;
		}

		public Criteria andRoomLessThanOrEqualTo(Integer value) {
			addCriterion("room <=", value, "room");
			return this;
		}

		public Criteria andRoomIn(List values) {
			addCriterion("room in", values, "room");
			return this;
		}

		public Criteria andRoomNotIn(List values) {
			addCriterion("room not in", values, "room");
			return this;
		}

		public Criteria andRoomBetween(Integer value1, Integer value2) {
			addCriterion("room between", value1, value2, "room");
			return this;
		}

		public Criteria andRoomNotBetween(Integer value1, Integer value2) {
			addCriterion("room not between", value1, value2, "room");
			return this;
		}

		public Criteria andSkillLevelIsNull() {
			addCriterion("skill_level is null");
			return this;
		}

		public Criteria andSkillLevelIsNotNull() {
			addCriterion("skill_level is not null");
			return this;
		}

		public Criteria andSkillLevelEqualTo(Integer value) {
			addCriterion("skill_level =", value, "skillLevel");
			return this;
		}

		public Criteria andSkillLevelNotEqualTo(Integer value) {
			addCriterion("skill_level <>", value, "skillLevel");
			return this;
		}

		public Criteria andSkillLevelGreaterThan(Integer value) {
			addCriterion("skill_level >", value, "skillLevel");
			return this;
		}

		public Criteria andSkillLevelGreaterThanOrEqualTo(Integer value) {
			addCriterion("skill_level >=", value, "skillLevel");
			return this;
		}

		public Criteria andSkillLevelLessThan(Integer value) {
			addCriterion("skill_level <", value, "skillLevel");
			return this;
		}

		public Criteria andSkillLevelLessThanOrEqualTo(Integer value) {
			addCriterion("skill_level <=", value, "skillLevel");
			return this;
		}

		public Criteria andSkillLevelIn(List values) {
			addCriterion("skill_level in", values, "skillLevel");
			return this;
		}

		public Criteria andSkillLevelNotIn(List values) {
			addCriterion("skill_level not in", values, "skillLevel");
			return this;
		}

		public Criteria andSkillLevelBetween(Integer value1, Integer value2) {
			addCriterion("skill_level between", value1, value2, "skillLevel");
			return this;
		}

		public Criteria andSkillLevelNotBetween(Integer value1, Integer value2) {
			addCriterion("skill_level not between", value1, value2,
					"skillLevel");
			return this;
		}

		public Criteria andFameIsNull() {
			addCriterion("fame is null");
			return this;
		}

		public Criteria andFameIsNotNull() {
			addCriterion("fame is not null");
			return this;
		}

		public Criteria andFameEqualTo(Integer value) {
			addCriterion("fame =", value, "fame");
			return this;
		}

		public Criteria andFameNotEqualTo(Integer value) {
			addCriterion("fame <>", value, "fame");
			return this;
		}

		public Criteria andFameGreaterThan(Integer value) {
			addCriterion("fame >", value, "fame");
			return this;
		}

		public Criteria andFameGreaterThanOrEqualTo(Integer value) {
			addCriterion("fame >=", value, "fame");
			return this;
		}

		public Criteria andFameLessThan(Integer value) {
			addCriterion("fame <", value, "fame");
			return this;
		}

		public Criteria andFameLessThanOrEqualTo(Integer value) {
			addCriterion("fame <=", value, "fame");
			return this;
		}

		public Criteria andFameIn(List values) {
			addCriterion("fame in", values, "fame");
			return this;
		}

		public Criteria andFameNotIn(List values) {
			addCriterion("fame not in", values, "fame");
			return this;
		}

		public Criteria andFameBetween(Integer value1, Integer value2) {
			addCriterion("fame between", value1, value2, "fame");
			return this;
		}

		public Criteria andFameNotBetween(Integer value1, Integer value2) {
			addCriterion("fame not between", value1, value2, "fame");
			return this;
		}
	}
}