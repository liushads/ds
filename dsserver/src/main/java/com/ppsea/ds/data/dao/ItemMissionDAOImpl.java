package com.ppsea.ds.data.dao;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.ppsea.ds.data.model.ItemMission;
import com.ppsea.ds.data.model.ItemMissionExample;

public class ItemMissionDAOImpl implements ItemMissionDAO {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    public ItemMissionDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    public Integer insert(ItemMission record) throws SQLException {
        Object newKey = sqlMapClient.insert("item_mission.abatorgenerated_insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    public int updateByPrimaryKey(ItemMission record) throws SQLException {
        int rows = sqlMapClient.update("item_mission.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    public int updateByPrimaryKeySelective(ItemMission record) throws SQLException {
        int rows = sqlMapClient.update("item_mission.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    @SuppressWarnings("unchecked")
    public List<ItemMission> selectByExample(ItemMissionExample example) throws SQLException {
        List<ItemMission> list = (List<ItemMission>) sqlMapClient.queryForList("item_mission.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    public ItemMission selectByPrimaryKey(Integer id) throws SQLException {
        ItemMission key = new ItemMission();
        key.setId(id);
        ItemMission record = (ItemMission) sqlMapClient.queryForObject("item_mission.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    public int deleteByExample(ItemMissionExample example) throws SQLException {
        int rows = sqlMapClient.delete("item_mission.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    public int deleteByPrimaryKey(Integer id) throws SQLException {
        ItemMission key = new ItemMission();
        key.setId(id);
        int rows = sqlMapClient.delete("item_mission.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    public int countByExample(ItemMissionExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("item_mission.abatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    public int updateByExampleSelective(ItemMission record, ItemMissionExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("item_mission.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    public int updateByExample(ItemMission record, ItemMissionExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("item_mission.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table item_mission
     *
     * @abatorgenerated Tue Feb 17 21:12:11 CST 2009
     */
    private static class UpdateByExampleParms extends ItemMissionExample {
        private Object record;

        public UpdateByExampleParms(Object record, ItemMissionExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}