package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BuffRandExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    public BuffRandExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    protected BuffRandExample(BuffRandExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table buff_rand
     *
     * @ibatorgenerated Thu Jan 03 10:59:05 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andBuffTypeIdIsNull() {
            addCriterion("buff_type_id is null");
            return this;
        }

        public Criteria andBuffTypeIdIsNotNull() {
            addCriterion("buff_type_id is not null");
            return this;
        }

        public Criteria andBuffTypeIdEqualTo(Integer value) {
            addCriterion("buff_type_id =", value, "buffTypeId");
            return this;
        }

        public Criteria andBuffTypeIdNotEqualTo(Integer value) {
            addCriterion("buff_type_id <>", value, "buffTypeId");
            return this;
        }

        public Criteria andBuffTypeIdGreaterThan(Integer value) {
            addCriterion("buff_type_id >", value, "buffTypeId");
            return this;
        }

        public Criteria andBuffTypeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("buff_type_id >=", value, "buffTypeId");
            return this;
        }

        public Criteria andBuffTypeIdLessThan(Integer value) {
            addCriterion("buff_type_id <", value, "buffTypeId");
            return this;
        }

        public Criteria andBuffTypeIdLessThanOrEqualTo(Integer value) {
            addCriterion("buff_type_id <=", value, "buffTypeId");
            return this;
        }

        public Criteria andBuffTypeIdIn(List values) {
            addCriterion("buff_type_id in", values, "buffTypeId");
            return this;
        }

        public Criteria andBuffTypeIdNotIn(List values) {
            addCriterion("buff_type_id not in", values, "buffTypeId");
            return this;
        }

        public Criteria andBuffTypeIdBetween(Integer value1, Integer value2) {
            addCriterion("buff_type_id between", value1, value2, "buffTypeId");
            return this;
        }

        public Criteria andBuffTypeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("buff_type_id not between", value1, value2, "buffTypeId");
            return this;
        }

        public Criteria andPreIsNull() {
            addCriterion("pre is null");
            return this;
        }

        public Criteria andPreIsNotNull() {
            addCriterion("pre is not null");
            return this;
        }

        public Criteria andPreEqualTo(Integer value) {
            addCriterion("pre =", value, "pre");
            return this;
        }

        public Criteria andPreNotEqualTo(Integer value) {
            addCriterion("pre <>", value, "pre");
            return this;
        }

        public Criteria andPreGreaterThan(Integer value) {
            addCriterion("pre >", value, "pre");
            return this;
        }

        public Criteria andPreGreaterThanOrEqualTo(Integer value) {
            addCriterion("pre >=", value, "pre");
            return this;
        }

        public Criteria andPreLessThan(Integer value) {
            addCriterion("pre <", value, "pre");
            return this;
        }

        public Criteria andPreLessThanOrEqualTo(Integer value) {
            addCriterion("pre <=", value, "pre");
            return this;
        }

        public Criteria andPreIn(List values) {
            addCriterion("pre in", values, "pre");
            return this;
        }

        public Criteria andPreNotIn(List values) {
            addCriterion("pre not in", values, "pre");
            return this;
        }

        public Criteria andPreBetween(Integer value1, Integer value2) {
            addCriterion("pre between", value1, value2, "pre");
            return this;
        }

        public Criteria andPreNotBetween(Integer value1, Integer value2) {
            addCriterion("pre not between", value1, value2, "pre");
            return this;
        }

        public Criteria andBuffValueIsNull() {
            addCriterion("buff_value is null");
            return this;
        }

        public Criteria andBuffValueIsNotNull() {
            addCriterion("buff_value is not null");
            return this;
        }

        public Criteria andBuffValueEqualTo(Integer value) {
            addCriterion("buff_value =", value, "buffValue");
            return this;
        }

        public Criteria andBuffValueNotEqualTo(Integer value) {
            addCriterion("buff_value <>", value, "buffValue");
            return this;
        }

        public Criteria andBuffValueGreaterThan(Integer value) {
            addCriterion("buff_value >", value, "buffValue");
            return this;
        }

        public Criteria andBuffValueGreaterThanOrEqualTo(Integer value) {
            addCriterion("buff_value >=", value, "buffValue");
            return this;
        }

        public Criteria andBuffValueLessThan(Integer value) {
            addCriterion("buff_value <", value, "buffValue");
            return this;
        }

        public Criteria andBuffValueLessThanOrEqualTo(Integer value) {
            addCriterion("buff_value <=", value, "buffValue");
            return this;
        }

        public Criteria andBuffValueIn(List values) {
            addCriterion("buff_value in", values, "buffValue");
            return this;
        }

        public Criteria andBuffValueNotIn(List values) {
            addCriterion("buff_value not in", values, "buffValue");
            return this;
        }

        public Criteria andBuffValueBetween(Integer value1, Integer value2) {
            addCriterion("buff_value between", value1, value2, "buffValue");
            return this;
        }

        public Criteria andBuffValueNotBetween(Integer value1, Integer value2) {
            addCriterion("buff_value not between", value1, value2, "buffValue");
            return this;
        }
    }
}