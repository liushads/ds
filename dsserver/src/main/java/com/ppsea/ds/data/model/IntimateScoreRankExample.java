package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IntimateScoreRankExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	public IntimateScoreRankExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	protected IntimateScoreRankExample(IntimateScoreRankExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table intimate_score_rank
	 * @ibatorgenerated  Tue Aug 10 20:50:27 CST 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andPlayerIdIsNull() {
			addCriterion("player_id is null");
			return this;
		}

		public Criteria andPlayerIdIsNotNull() {
			addCriterion("player_id is not null");
			return this;
		}

		public Criteria andPlayerIdEqualTo(Integer value) {
			addCriterion("player_id =", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotEqualTo(Integer value) {
			addCriterion("player_id <>", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThan(Integer value) {
			addCriterion("player_id >", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("player_id >=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThan(Integer value) {
			addCriterion("player_id <", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
			addCriterion("player_id <=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdIn(List values) {
			addCriterion("player_id in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotIn(List values) {
			addCriterion("player_id not in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
			addCriterion("player_id between", value1, value2, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("player_id not between", value1, value2, "playerId");
			return this;
		}

		public Criteria andPlayerNameIsNull() {
			addCriterion("player_name is null");
			return this;
		}

		public Criteria andPlayerNameIsNotNull() {
			addCriterion("player_name is not null");
			return this;
		}

		public Criteria andPlayerNameEqualTo(String value) {
			addCriterion("player_name =", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameNotEqualTo(String value) {
			addCriterion("player_name <>", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameGreaterThan(String value) {
			addCriterion("player_name >", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameGreaterThanOrEqualTo(String value) {
			addCriterion("player_name >=", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameLessThan(String value) {
			addCriterion("player_name <", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameLessThanOrEqualTo(String value) {
			addCriterion("player_name <=", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameLike(String value) {
			addCriterion("player_name like", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameNotLike(String value) {
			addCriterion("player_name not like", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameIn(List values) {
			addCriterion("player_name in", values, "playerName");
			return this;
		}

		public Criteria andPlayerNameNotIn(List values) {
			addCriterion("player_name not in", values, "playerName");
			return this;
		}

		public Criteria andPlayerNameBetween(String value1, String value2) {
			addCriterion("player_name between", value1, value2, "playerName");
			return this;
		}

		public Criteria andPlayerNameNotBetween(String value1, String value2) {
			addCriterion("player_name not between", value1, value2,
					"playerName");
			return this;
		}

		public Criteria andMateIdIsNull() {
			addCriterion("mate_id is null");
			return this;
		}

		public Criteria andMateIdIsNotNull() {
			addCriterion("mate_id is not null");
			return this;
		}

		public Criteria andMateIdEqualTo(Integer value) {
			addCriterion("mate_id =", value, "mateId");
			return this;
		}

		public Criteria andMateIdNotEqualTo(Integer value) {
			addCriterion("mate_id <>", value, "mateId");
			return this;
		}

		public Criteria andMateIdGreaterThan(Integer value) {
			addCriterion("mate_id >", value, "mateId");
			return this;
		}

		public Criteria andMateIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("mate_id >=", value, "mateId");
			return this;
		}

		public Criteria andMateIdLessThan(Integer value) {
			addCriterion("mate_id <", value, "mateId");
			return this;
		}

		public Criteria andMateIdLessThanOrEqualTo(Integer value) {
			addCriterion("mate_id <=", value, "mateId");
			return this;
		}

		public Criteria andMateIdIn(List values) {
			addCriterion("mate_id in", values, "mateId");
			return this;
		}

		public Criteria andMateIdNotIn(List values) {
			addCriterion("mate_id not in", values, "mateId");
			return this;
		}

		public Criteria andMateIdBetween(Integer value1, Integer value2) {
			addCriterion("mate_id between", value1, value2, "mateId");
			return this;
		}

		public Criteria andMateIdNotBetween(Integer value1, Integer value2) {
			addCriterion("mate_id not between", value1, value2, "mateId");
			return this;
		}

		public Criteria andMateNameIsNull() {
			addCriterion("mate_name is null");
			return this;
		}

		public Criteria andMateNameIsNotNull() {
			addCriterion("mate_name is not null");
			return this;
		}

		public Criteria andMateNameEqualTo(String value) {
			addCriterion("mate_name =", value, "mateName");
			return this;
		}

		public Criteria andMateNameNotEqualTo(String value) {
			addCriterion("mate_name <>", value, "mateName");
			return this;
		}

		public Criteria andMateNameGreaterThan(String value) {
			addCriterion("mate_name >", value, "mateName");
			return this;
		}

		public Criteria andMateNameGreaterThanOrEqualTo(String value) {
			addCriterion("mate_name >=", value, "mateName");
			return this;
		}

		public Criteria andMateNameLessThan(String value) {
			addCriterion("mate_name <", value, "mateName");
			return this;
		}

		public Criteria andMateNameLessThanOrEqualTo(String value) {
			addCriterion("mate_name <=", value, "mateName");
			return this;
		}

		public Criteria andMateNameLike(String value) {
			addCriterion("mate_name like", value, "mateName");
			return this;
		}

		public Criteria andMateNameNotLike(String value) {
			addCriterion("mate_name not like", value, "mateName");
			return this;
		}

		public Criteria andMateNameIn(List values) {
			addCriterion("mate_name in", values, "mateName");
			return this;
		}

		public Criteria andMateNameNotIn(List values) {
			addCriterion("mate_name not in", values, "mateName");
			return this;
		}

		public Criteria andMateNameBetween(String value1, String value2) {
			addCriterion("mate_name between", value1, value2, "mateName");
			return this;
		}

		public Criteria andMateNameNotBetween(String value1, String value2) {
			addCriterion("mate_name not between", value1, value2, "mateName");
			return this;
		}

		public Criteria andIntimateScoreIsNull() {
			addCriterion("intimate_score is null");
			return this;
		}

		public Criteria andIntimateScoreIsNotNull() {
			addCriterion("intimate_score is not null");
			return this;
		}

		public Criteria andIntimateScoreEqualTo(Integer value) {
			addCriterion("intimate_score =", value, "intimateScore");
			return this;
		}

		public Criteria andIntimateScoreNotEqualTo(Integer value) {
			addCriterion("intimate_score <>", value, "intimateScore");
			return this;
		}

		public Criteria andIntimateScoreGreaterThan(Integer value) {
			addCriterion("intimate_score >", value, "intimateScore");
			return this;
		}

		public Criteria andIntimateScoreGreaterThanOrEqualTo(Integer value) {
			addCriterion("intimate_score >=", value, "intimateScore");
			return this;
		}

		public Criteria andIntimateScoreLessThan(Integer value) {
			addCriterion("intimate_score <", value, "intimateScore");
			return this;
		}

		public Criteria andIntimateScoreLessThanOrEqualTo(Integer value) {
			addCriterion("intimate_score <=", value, "intimateScore");
			return this;
		}

		public Criteria andIntimateScoreIn(List values) {
			addCriterion("intimate_score in", values, "intimateScore");
			return this;
		}

		public Criteria andIntimateScoreNotIn(List values) {
			addCriterion("intimate_score not in", values, "intimateScore");
			return this;
		}

		public Criteria andIntimateScoreBetween(Integer value1, Integer value2) {
			addCriterion("intimate_score between", value1, value2,
					"intimateScore");
			return this;
		}

		public Criteria andIntimateScoreNotBetween(Integer value1,
				Integer value2) {
			addCriterion("intimate_score not between", value1, value2,
					"intimateScore");
			return this;
		}

		public Criteria andUpdatedTimeIsNull() {
			addCriterion("updated_time is null");
			return this;
		}

		public Criteria andUpdatedTimeIsNotNull() {
			addCriterion("updated_time is not null");
			return this;
		}

		public Criteria andUpdatedTimeEqualTo(Date value) {
			addCriterion("updated_time =", value, "updatedTime");
			return this;
		}

		public Criteria andUpdatedTimeNotEqualTo(Date value) {
			addCriterion("updated_time <>", value, "updatedTime");
			return this;
		}

		public Criteria andUpdatedTimeGreaterThan(Date value) {
			addCriterion("updated_time >", value, "updatedTime");
			return this;
		}

		public Criteria andUpdatedTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("updated_time >=", value, "updatedTime");
			return this;
		}

		public Criteria andUpdatedTimeLessThan(Date value) {
			addCriterion("updated_time <", value, "updatedTime");
			return this;
		}

		public Criteria andUpdatedTimeLessThanOrEqualTo(Date value) {
			addCriterion("updated_time <=", value, "updatedTime");
			return this;
		}

		public Criteria andUpdatedTimeIn(List values) {
			addCriterion("updated_time in", values, "updatedTime");
			return this;
		}

		public Criteria andUpdatedTimeNotIn(List values) {
			addCriterion("updated_time not in", values, "updatedTime");
			return this;
		}

		public Criteria andUpdatedTimeBetween(Date value1, Date value2) {
			addCriterion("updated_time between", value1, value2, "updatedTime");
			return this;
		}

		public Criteria andUpdatedTimeNotBetween(Date value1, Date value2) {
			addCriterion("updated_time not between", value1, value2,
					"updatedTime");
			return this;
		}

		public Criteria andCreatedTimeIsNull() {
			addCriterion("created_time is null");
			return this;
		}

		public Criteria andCreatedTimeIsNotNull() {
			addCriterion("created_time is not null");
			return this;
		}

		public Criteria andCreatedTimeEqualTo(Date value) {
			addCriterion("created_time =", value, "createdTime");
			return this;
		}

		public Criteria andCreatedTimeNotEqualTo(Date value) {
			addCriterion("created_time <>", value, "createdTime");
			return this;
		}

		public Criteria andCreatedTimeGreaterThan(Date value) {
			addCriterion("created_time >", value, "createdTime");
			return this;
		}

		public Criteria andCreatedTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("created_time >=", value, "createdTime");
			return this;
		}

		public Criteria andCreatedTimeLessThan(Date value) {
			addCriterion("created_time <", value, "createdTime");
			return this;
		}

		public Criteria andCreatedTimeLessThanOrEqualTo(Date value) {
			addCriterion("created_time <=", value, "createdTime");
			return this;
		}

		public Criteria andCreatedTimeIn(List values) {
			addCriterion("created_time in", values, "createdTime");
			return this;
		}

		public Criteria andCreatedTimeNotIn(List values) {
			addCriterion("created_time not in", values, "createdTime");
			return this;
		}

		public Criteria andCreatedTimeBetween(Date value1, Date value2) {
			addCriterion("created_time between", value1, value2, "createdTime");
			return this;
		}

		public Criteria andCreatedTimeNotBetween(Date value1, Date value2) {
			addCriterion("created_time not between", value1, value2,
					"createdTime");
			return this;
		}
	}
}