package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SkillExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	public SkillExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	protected SkillExample(SkillExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table skill
	 * @ibatorgenerated  Thu Feb 28 12:07:24 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return this;
		}

		public Criteria andNameIn(List values) {
			addCriterion("name in", values, "name");
			return this;
		}

		public Criteria andNameNotIn(List values) {
			addCriterion("name not in", values, "name");
			return this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return this;
		}

		public Criteria andDesceptionIsNull() {
			addCriterion("desception is null");
			return this;
		}

		public Criteria andDesceptionIsNotNull() {
			addCriterion("desception is not null");
			return this;
		}

		public Criteria andDesceptionEqualTo(String value) {
			addCriterion("desception =", value, "desception");
			return this;
		}

		public Criteria andDesceptionNotEqualTo(String value) {
			addCriterion("desception <>", value, "desception");
			return this;
		}

		public Criteria andDesceptionGreaterThan(String value) {
			addCriterion("desception >", value, "desception");
			return this;
		}

		public Criteria andDesceptionGreaterThanOrEqualTo(String value) {
			addCriterion("desception >=", value, "desception");
			return this;
		}

		public Criteria andDesceptionLessThan(String value) {
			addCriterion("desception <", value, "desception");
			return this;
		}

		public Criteria andDesceptionLessThanOrEqualTo(String value) {
			addCriterion("desception <=", value, "desception");
			return this;
		}

		public Criteria andDesceptionLike(String value) {
			addCriterion("desception like", value, "desception");
			return this;
		}

		public Criteria andDesceptionNotLike(String value) {
			addCriterion("desception not like", value, "desception");
			return this;
		}

		public Criteria andDesceptionIn(List values) {
			addCriterion("desception in", values, "desception");
			return this;
		}

		public Criteria andDesceptionNotIn(List values) {
			addCriterion("desception not in", values, "desception");
			return this;
		}

		public Criteria andDesceptionBetween(String value1, String value2) {
			addCriterion("desception between", value1, value2, "desception");
			return this;
		}

		public Criteria andDesceptionNotBetween(String value1, String value2) {
			addCriterion("desception not between", value1, value2, "desception");
			return this;
		}

		public Criteria andLevelIsNull() {
			addCriterion("level is null");
			return this;
		}

		public Criteria andLevelIsNotNull() {
			addCriterion("level is not null");
			return this;
		}

		public Criteria andLevelEqualTo(Integer value) {
			addCriterion("level =", value, "level");
			return this;
		}

		public Criteria andLevelNotEqualTo(Integer value) {
			addCriterion("level <>", value, "level");
			return this;
		}

		public Criteria andLevelGreaterThan(Integer value) {
			addCriterion("level >", value, "level");
			return this;
		}

		public Criteria andLevelGreaterThanOrEqualTo(Integer value) {
			addCriterion("level >=", value, "level");
			return this;
		}

		public Criteria andLevelLessThan(Integer value) {
			addCriterion("level <", value, "level");
			return this;
		}

		public Criteria andLevelLessThanOrEqualTo(Integer value) {
			addCriterion("level <=", value, "level");
			return this;
		}

		public Criteria andLevelIn(List values) {
			addCriterion("level in", values, "level");
			return this;
		}

		public Criteria andLevelNotIn(List values) {
			addCriterion("level not in", values, "level");
			return this;
		}

		public Criteria andLevelBetween(Integer value1, Integer value2) {
			addCriterion("level between", value1, value2, "level");
			return this;
		}

		public Criteria andLevelNotBetween(Integer value1, Integer value2) {
			addCriterion("level not between", value1, value2, "level");
			return this;
		}

		public Criteria andAttackIsNull() {
			addCriterion("attack is null");
			return this;
		}

		public Criteria andAttackIsNotNull() {
			addCriterion("attack is not null");
			return this;
		}

		public Criteria andAttackEqualTo(Integer value) {
			addCriterion("attack =", value, "attack");
			return this;
		}

		public Criteria andAttackNotEqualTo(Integer value) {
			addCriterion("attack <>", value, "attack");
			return this;
		}

		public Criteria andAttackGreaterThan(Integer value) {
			addCriterion("attack >", value, "attack");
			return this;
		}

		public Criteria andAttackGreaterThanOrEqualTo(Integer value) {
			addCriterion("attack >=", value, "attack");
			return this;
		}

		public Criteria andAttackLessThan(Integer value) {
			addCriterion("attack <", value, "attack");
			return this;
		}

		public Criteria andAttackLessThanOrEqualTo(Integer value) {
			addCriterion("attack <=", value, "attack");
			return this;
		}

		public Criteria andAttackIn(List values) {
			addCriterion("attack in", values, "attack");
			return this;
		}

		public Criteria andAttackNotIn(List values) {
			addCriterion("attack not in", values, "attack");
			return this;
		}

		public Criteria andAttackBetween(Integer value1, Integer value2) {
			addCriterion("attack between", value1, value2, "attack");
			return this;
		}

		public Criteria andAttackNotBetween(Integer value1, Integer value2) {
			addCriterion("attack not between", value1, value2, "attack");
			return this;
		}

		public Criteria andDefenceIsNull() {
			addCriterion("defence is null");
			return this;
		}

		public Criteria andDefenceIsNotNull() {
			addCriterion("defence is not null");
			return this;
		}

		public Criteria andDefenceEqualTo(Integer value) {
			addCriterion("defence =", value, "defence");
			return this;
		}

		public Criteria andDefenceNotEqualTo(Integer value) {
			addCriterion("defence <>", value, "defence");
			return this;
		}

		public Criteria andDefenceGreaterThan(Integer value) {
			addCriterion("defence >", value, "defence");
			return this;
		}

		public Criteria andDefenceGreaterThanOrEqualTo(Integer value) {
			addCriterion("defence >=", value, "defence");
			return this;
		}

		public Criteria andDefenceLessThan(Integer value) {
			addCriterion("defence <", value, "defence");
			return this;
		}

		public Criteria andDefenceLessThanOrEqualTo(Integer value) {
			addCriterion("defence <=", value, "defence");
			return this;
		}

		public Criteria andDefenceIn(List values) {
			addCriterion("defence in", values, "defence");
			return this;
		}

		public Criteria andDefenceNotIn(List values) {
			addCriterion("defence not in", values, "defence");
			return this;
		}

		public Criteria andDefenceBetween(Integer value1, Integer value2) {
			addCriterion("defence between", value1, value2, "defence");
			return this;
		}

		public Criteria andDefenceNotBetween(Integer value1, Integer value2) {
			addCriterion("defence not between", value1, value2, "defence");
			return this;
		}

		public Criteria andHpIsNull() {
			addCriterion("hp is null");
			return this;
		}

		public Criteria andHpIsNotNull() {
			addCriterion("hp is not null");
			return this;
		}

		public Criteria andHpEqualTo(Integer value) {
			addCriterion("hp =", value, "hp");
			return this;
		}

		public Criteria andHpNotEqualTo(Integer value) {
			addCriterion("hp <>", value, "hp");
			return this;
		}

		public Criteria andHpGreaterThan(Integer value) {
			addCriterion("hp >", value, "hp");
			return this;
		}

		public Criteria andHpGreaterThanOrEqualTo(Integer value) {
			addCriterion("hp >=", value, "hp");
			return this;
		}

		public Criteria andHpLessThan(Integer value) {
			addCriterion("hp <", value, "hp");
			return this;
		}

		public Criteria andHpLessThanOrEqualTo(Integer value) {
			addCriterion("hp <=", value, "hp");
			return this;
		}

		public Criteria andHpIn(List values) {
			addCriterion("hp in", values, "hp");
			return this;
		}

		public Criteria andHpNotIn(List values) {
			addCriterion("hp not in", values, "hp");
			return this;
		}

		public Criteria andHpBetween(Integer value1, Integer value2) {
			addCriterion("hp between", value1, value2, "hp");
			return this;
		}

		public Criteria andHpNotBetween(Integer value1, Integer value2) {
			addCriterion("hp not between", value1, value2, "hp");
			return this;
		}

		public Criteria andCritIsNull() {
			addCriterion("crit is null");
			return this;
		}

		public Criteria andCritIsNotNull() {
			addCriterion("crit is not null");
			return this;
		}

		public Criteria andCritEqualTo(Integer value) {
			addCriterion("crit =", value, "crit");
			return this;
		}

		public Criteria andCritNotEqualTo(Integer value) {
			addCriterion("crit <>", value, "crit");
			return this;
		}

		public Criteria andCritGreaterThan(Integer value) {
			addCriterion("crit >", value, "crit");
			return this;
		}

		public Criteria andCritGreaterThanOrEqualTo(Integer value) {
			addCriterion("crit >=", value, "crit");
			return this;
		}

		public Criteria andCritLessThan(Integer value) {
			addCriterion("crit <", value, "crit");
			return this;
		}

		public Criteria andCritLessThanOrEqualTo(Integer value) {
			addCriterion("crit <=", value, "crit");
			return this;
		}

		public Criteria andCritIn(List values) {
			addCriterion("crit in", values, "crit");
			return this;
		}

		public Criteria andCritNotIn(List values) {
			addCriterion("crit not in", values, "crit");
			return this;
		}

		public Criteria andCritBetween(Integer value1, Integer value2) {
			addCriterion("crit between", value1, value2, "crit");
			return this;
		}

		public Criteria andCritNotBetween(Integer value1, Integer value2) {
			addCriterion("crit not between", value1, value2, "crit");
			return this;
		}

		public Criteria andParryIsNull() {
			addCriterion("parry is null");
			return this;
		}

		public Criteria andParryIsNotNull() {
			addCriterion("parry is not null");
			return this;
		}

		public Criteria andParryEqualTo(Integer value) {
			addCriterion("parry =", value, "parry");
			return this;
		}

		public Criteria andParryNotEqualTo(Integer value) {
			addCriterion("parry <>", value, "parry");
			return this;
		}

		public Criteria andParryGreaterThan(Integer value) {
			addCriterion("parry >", value, "parry");
			return this;
		}

		public Criteria andParryGreaterThanOrEqualTo(Integer value) {
			addCriterion("parry >=", value, "parry");
			return this;
		}

		public Criteria andParryLessThan(Integer value) {
			addCriterion("parry <", value, "parry");
			return this;
		}

		public Criteria andParryLessThanOrEqualTo(Integer value) {
			addCriterion("parry <=", value, "parry");
			return this;
		}

		public Criteria andParryIn(List values) {
			addCriterion("parry in", values, "parry");
			return this;
		}

		public Criteria andParryNotIn(List values) {
			addCriterion("parry not in", values, "parry");
			return this;
		}

		public Criteria andParryBetween(Integer value1, Integer value2) {
			addCriterion("parry between", value1, value2, "parry");
			return this;
		}

		public Criteria andParryNotBetween(Integer value1, Integer value2) {
			addCriterion("parry not between", value1, value2, "parry");
			return this;
		}

		public Criteria andHitIsNull() {
			addCriterion("hit is null");
			return this;
		}

		public Criteria andHitIsNotNull() {
			addCriterion("hit is not null");
			return this;
		}

		public Criteria andHitEqualTo(Integer value) {
			addCriterion("hit =", value, "hit");
			return this;
		}

		public Criteria andHitNotEqualTo(Integer value) {
			addCriterion("hit <>", value, "hit");
			return this;
		}

		public Criteria andHitGreaterThan(Integer value) {
			addCriterion("hit >", value, "hit");
			return this;
		}

		public Criteria andHitGreaterThanOrEqualTo(Integer value) {
			addCriterion("hit >=", value, "hit");
			return this;
		}

		public Criteria andHitLessThan(Integer value) {
			addCriterion("hit <", value, "hit");
			return this;
		}

		public Criteria andHitLessThanOrEqualTo(Integer value) {
			addCriterion("hit <=", value, "hit");
			return this;
		}

		public Criteria andHitIn(List values) {
			addCriterion("hit in", values, "hit");
			return this;
		}

		public Criteria andHitNotIn(List values) {
			addCriterion("hit not in", values, "hit");
			return this;
		}

		public Criteria andHitBetween(Integer value1, Integer value2) {
			addCriterion("hit between", value1, value2, "hit");
			return this;
		}

		public Criteria andHitNotBetween(Integer value1, Integer value2) {
			addCriterion("hit not between", value1, value2, "hit");
			return this;
		}

		public Criteria andSidestepIsNull() {
			addCriterion("sidestep is null");
			return this;
		}

		public Criteria andSidestepIsNotNull() {
			addCriterion("sidestep is not null");
			return this;
		}

		public Criteria andSidestepEqualTo(Integer value) {
			addCriterion("sidestep =", value, "sidestep");
			return this;
		}

		public Criteria andSidestepNotEqualTo(Integer value) {
			addCriterion("sidestep <>", value, "sidestep");
			return this;
		}

		public Criteria andSidestepGreaterThan(Integer value) {
			addCriterion("sidestep >", value, "sidestep");
			return this;
		}

		public Criteria andSidestepGreaterThanOrEqualTo(Integer value) {
			addCriterion("sidestep >=", value, "sidestep");
			return this;
		}

		public Criteria andSidestepLessThan(Integer value) {
			addCriterion("sidestep <", value, "sidestep");
			return this;
		}

		public Criteria andSidestepLessThanOrEqualTo(Integer value) {
			addCriterion("sidestep <=", value, "sidestep");
			return this;
		}

		public Criteria andSidestepIn(List values) {
			addCriterion("sidestep in", values, "sidestep");
			return this;
		}

		public Criteria andSidestepNotIn(List values) {
			addCriterion("sidestep not in", values, "sidestep");
			return this;
		}

		public Criteria andSidestepBetween(Integer value1, Integer value2) {
			addCriterion("sidestep between", value1, value2, "sidestep");
			return this;
		}

		public Criteria andSidestepNotBetween(Integer value1, Integer value2) {
			addCriterion("sidestep not between", value1, value2, "sidestep");
			return this;
		}

		public Criteria andLimitLevelIsNull() {
			addCriterion("limit_level is null");
			return this;
		}

		public Criteria andLimitLevelIsNotNull() {
			addCriterion("limit_level is not null");
			return this;
		}

		public Criteria andLimitLevelEqualTo(Integer value) {
			addCriterion("limit_level =", value, "limitLevel");
			return this;
		}

		public Criteria andLimitLevelNotEqualTo(Integer value) {
			addCriterion("limit_level <>", value, "limitLevel");
			return this;
		}

		public Criteria andLimitLevelGreaterThan(Integer value) {
			addCriterion("limit_level >", value, "limitLevel");
			return this;
		}

		public Criteria andLimitLevelGreaterThanOrEqualTo(Integer value) {
			addCriterion("limit_level >=", value, "limitLevel");
			return this;
		}

		public Criteria andLimitLevelLessThan(Integer value) {
			addCriterion("limit_level <", value, "limitLevel");
			return this;
		}

		public Criteria andLimitLevelLessThanOrEqualTo(Integer value) {
			addCriterion("limit_level <=", value, "limitLevel");
			return this;
		}

		public Criteria andLimitLevelIn(List values) {
			addCriterion("limit_level in", values, "limitLevel");
			return this;
		}

		public Criteria andLimitLevelNotIn(List values) {
			addCriterion("limit_level not in", values, "limitLevel");
			return this;
		}

		public Criteria andLimitLevelBetween(Integer value1, Integer value2) {
			addCriterion("limit_level between", value1, value2, "limitLevel");
			return this;
		}

		public Criteria andLimitLevelNotBetween(Integer value1, Integer value2) {
			addCriterion("limit_level not between", value1, value2,
					"limitLevel");
			return this;
		}

		public Criteria andLimitEternalIsNull() {
			addCriterion("limit_eternal is null");
			return this;
		}

		public Criteria andLimitEternalIsNotNull() {
			addCriterion("limit_eternal is not null");
			return this;
		}

		public Criteria andLimitEternalEqualTo(Integer value) {
			addCriterion("limit_eternal =", value, "limitEternal");
			return this;
		}

		public Criteria andLimitEternalNotEqualTo(Integer value) {
			addCriterion("limit_eternal <>", value, "limitEternal");
			return this;
		}

		public Criteria andLimitEternalGreaterThan(Integer value) {
			addCriterion("limit_eternal >", value, "limitEternal");
			return this;
		}

		public Criteria andLimitEternalGreaterThanOrEqualTo(Integer value) {
			addCriterion("limit_eternal >=", value, "limitEternal");
			return this;
		}

		public Criteria andLimitEternalLessThan(Integer value) {
			addCriterion("limit_eternal <", value, "limitEternal");
			return this;
		}

		public Criteria andLimitEternalLessThanOrEqualTo(Integer value) {
			addCriterion("limit_eternal <=", value, "limitEternal");
			return this;
		}

		public Criteria andLimitEternalIn(List values) {
			addCriterion("limit_eternal in", values, "limitEternal");
			return this;
		}

		public Criteria andLimitEternalNotIn(List values) {
			addCriterion("limit_eternal not in", values, "limitEternal");
			return this;
		}

		public Criteria andLimitEternalBetween(Integer value1, Integer value2) {
			addCriterion("limit_eternal between", value1, value2,
					"limitEternal");
			return this;
		}

		public Criteria andLimitEternalNotBetween(Integer value1, Integer value2) {
			addCriterion("limit_eternal not between", value1, value2,
					"limitEternal");
			return this;
		}

		public Criteria andSkillTypeIsNull() {
			addCriterion("skill_type is null");
			return this;
		}

		public Criteria andSkillTypeIsNotNull() {
			addCriterion("skill_type is not null");
			return this;
		}

		public Criteria andSkillTypeEqualTo(Integer value) {
			addCriterion("skill_type =", value, "skillType");
			return this;
		}

		public Criteria andSkillTypeNotEqualTo(Integer value) {
			addCriterion("skill_type <>", value, "skillType");
			return this;
		}

		public Criteria andSkillTypeGreaterThan(Integer value) {
			addCriterion("skill_type >", value, "skillType");
			return this;
		}

		public Criteria andSkillTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("skill_type >=", value, "skillType");
			return this;
		}

		public Criteria andSkillTypeLessThan(Integer value) {
			addCriterion("skill_type <", value, "skillType");
			return this;
		}

		public Criteria andSkillTypeLessThanOrEqualTo(Integer value) {
			addCriterion("skill_type <=", value, "skillType");
			return this;
		}

		public Criteria andSkillTypeIn(List values) {
			addCriterion("skill_type in", values, "skillType");
			return this;
		}

		public Criteria andSkillTypeNotIn(List values) {
			addCriterion("skill_type not in", values, "skillType");
			return this;
		}

		public Criteria andSkillTypeBetween(Integer value1, Integer value2) {
			addCriterion("skill_type between", value1, value2, "skillType");
			return this;
		}

		public Criteria andSkillTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("skill_type not between", value1, value2, "skillType");
			return this;
		}
	}
}