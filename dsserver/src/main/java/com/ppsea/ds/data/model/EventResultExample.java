package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EventResultExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	public EventResultExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	protected EventResultExample(EventResultExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table event_result
	 * @abatorgenerated  Sun Mar 08 21:00:49 CST 2009
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andDescriptionIsNull() {
			addCriterion("description is null");
			return this;
		}

		public Criteria andDescriptionIsNotNull() {
			addCriterion("description is not null");
			return this;
		}

		public Criteria andDescriptionEqualTo(String value) {
			addCriterion("description =", value, "description");
			return this;
		}

		public Criteria andDescriptionNotEqualTo(String value) {
			addCriterion("description <>", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThan(String value) {
			addCriterion("description >", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("description >=", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThan(String value) {
			addCriterion("description <", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThanOrEqualTo(String value) {
			addCriterion("description <=", value, "description");
			return this;
		}

		public Criteria andDescriptionLike(String value) {
			addCriterion("description like", value, "description");
			return this;
		}

		public Criteria andDescriptionNotLike(String value) {
			addCriterion("description not like", value, "description");
			return this;
		}

		public Criteria andDescriptionIn(List<String> values) {
			addCriterion("description in", values, "description");
			return this;
		}

		public Criteria andDescriptionNotIn(List<String> values) {
			addCriterion("description not in", values, "description");
			return this;
		}

		public Criteria andDescriptionBetween(String value1, String value2) {
			addCriterion("description between", value1, value2, "description");
			return this;
		}

		public Criteria andDescriptionNotBetween(String value1, String value2) {
			addCriterion("description not between", value1, value2,
					"description");
			return this;
		}

		public Criteria andItemIdIsNull() {
			addCriterion("item_id is null");
			return this;
		}

		public Criteria andItemIdIsNotNull() {
			addCriterion("item_id is not null");
			return this;
		}

		public Criteria andItemIdEqualTo(Integer value) {
			addCriterion("item_id =", value, "itemId");
			return this;
		}

		public Criteria andItemIdNotEqualTo(Integer value) {
			addCriterion("item_id <>", value, "itemId");
			return this;
		}

		public Criteria andItemIdGreaterThan(Integer value) {
			addCriterion("item_id >", value, "itemId");
			return this;
		}

		public Criteria andItemIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("item_id >=", value, "itemId");
			return this;
		}

		public Criteria andItemIdLessThan(Integer value) {
			addCriterion("item_id <", value, "itemId");
			return this;
		}

		public Criteria andItemIdLessThanOrEqualTo(Integer value) {
			addCriterion("item_id <=", value, "itemId");
			return this;
		}

		public Criteria andItemIdIn(List<Integer> values) {
			addCriterion("item_id in", values, "itemId");
			return this;
		}

		public Criteria andItemIdNotIn(List<Integer> values) {
			addCriterion("item_id not in", values, "itemId");
			return this;
		}

		public Criteria andItemIdBetween(Integer value1, Integer value2) {
			addCriterion("item_id between", value1, value2, "itemId");
			return this;
		}

		public Criteria andItemIdNotBetween(Integer value1, Integer value2) {
			addCriterion("item_id not between", value1, value2, "itemId");
			return this;
		}

		public Criteria andItemCountIsNull() {
			addCriterion("item_count is null");
			return this;
		}

		public Criteria andItemCountIsNotNull() {
			addCriterion("item_count is not null");
			return this;
		}

		public Criteria andItemCountEqualTo(Integer value) {
			addCriterion("item_count =", value, "itemCount");
			return this;
		}

		public Criteria andItemCountNotEqualTo(Integer value) {
			addCriterion("item_count <>", value, "itemCount");
			return this;
		}

		public Criteria andItemCountGreaterThan(Integer value) {
			addCriterion("item_count >", value, "itemCount");
			return this;
		}

		public Criteria andItemCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("item_count >=", value, "itemCount");
			return this;
		}

		public Criteria andItemCountLessThan(Integer value) {
			addCriterion("item_count <", value, "itemCount");
			return this;
		}

		public Criteria andItemCountLessThanOrEqualTo(Integer value) {
			addCriterion("item_count <=", value, "itemCount");
			return this;
		}

		public Criteria andItemCountIn(List<Integer> values) {
			addCriterion("item_count in", values, "itemCount");
			return this;
		}

		public Criteria andItemCountNotIn(List<Integer> values) {
			addCriterion("item_count not in", values, "itemCount");
			return this;
		}

		public Criteria andItemCountBetween(Integer value1, Integer value2) {
			addCriterion("item_count between", value1, value2, "itemCount");
			return this;
		}

		public Criteria andItemCountNotBetween(Integer value1, Integer value2) {
			addCriterion("item_count not between", value1, value2, "itemCount");
			return this;
		}

		public Criteria andEventIdIsNull() {
			addCriterion("event_id is null");
			return this;
		}

		public Criteria andEventIdIsNotNull() {
			addCriterion("event_id is not null");
			return this;
		}

		public Criteria andEventIdEqualTo(Integer value) {
			addCriterion("event_id =", value, "eventId");
			return this;
		}

		public Criteria andEventIdNotEqualTo(Integer value) {
			addCriterion("event_id <>", value, "eventId");
			return this;
		}

		public Criteria andEventIdGreaterThan(Integer value) {
			addCriterion("event_id >", value, "eventId");
			return this;
		}

		public Criteria andEventIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("event_id >=", value, "eventId");
			return this;
		}

		public Criteria andEventIdLessThan(Integer value) {
			addCriterion("event_id <", value, "eventId");
			return this;
		}

		public Criteria andEventIdLessThanOrEqualTo(Integer value) {
			addCriterion("event_id <=", value, "eventId");
			return this;
		}

		public Criteria andEventIdIn(List<Integer> values) {
			addCriterion("event_id in", values, "eventId");
			return this;
		}

		public Criteria andEventIdNotIn(List<Integer> values) {
			addCriterion("event_id not in", values, "eventId");
			return this;
		}

		public Criteria andEventIdBetween(Integer value1, Integer value2) {
			addCriterion("event_id between", value1, value2, "eventId");
			return this;
		}

		public Criteria andEventIdNotBetween(Integer value1, Integer value2) {
			addCriterion("event_id not between", value1, value2, "eventId");
			return this;
		}
	}
}