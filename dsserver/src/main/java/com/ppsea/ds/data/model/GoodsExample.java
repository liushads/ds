package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GoodsExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    public GoodsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    protected GoodsExample(GoodsExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table goods
     *
     * @abatorgenerated Wed Apr 21 10:01:15 CST 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return this;
        }

        public Criteria andPriceEqualTo(Integer value) {
            addCriterion("price =", value, "price");
            return this;
        }

        public Criteria andPriceNotEqualTo(Integer value) {
            addCriterion("price <>", value, "price");
            return this;
        }

        public Criteria andPriceGreaterThan(Integer value) {
            addCriterion("price >", value, "price");
            return this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("price >=", value, "price");
            return this;
        }

        public Criteria andPriceLessThan(Integer value) {
            addCriterion("price <", value, "price");
            return this;
        }

        public Criteria andPriceLessThanOrEqualTo(Integer value) {
            addCriterion("price <=", value, "price");
            return this;
        }

        public Criteria andPriceIn(List<Integer> values) {
            addCriterion("price in", values, "price");
            return this;
        }

        public Criteria andPriceNotIn(List<Integer> values) {
            addCriterion("price not in", values, "price");
            return this;
        }

        public Criteria andPriceBetween(Integer value1, Integer value2) {
            addCriterion("price between", value1, value2, "price");
            return this;
        }

        public Criteria andPriceNotBetween(Integer value1, Integer value2) {
            addCriterion("price not between", value1, value2, "price");
            return this;
        }

        public Criteria andGoldIsNull() {
            addCriterion("gold is null");
            return this;
        }

        public Criteria andGoldIsNotNull() {
            addCriterion("gold is not null");
            return this;
        }

        public Criteria andGoldEqualTo(Integer value) {
            addCriterion("gold =", value, "gold");
            return this;
        }

        public Criteria andGoldNotEqualTo(Integer value) {
            addCriterion("gold <>", value, "gold");
            return this;
        }

        public Criteria andGoldGreaterThan(Integer value) {
            addCriterion("gold >", value, "gold");
            return this;
        }

        public Criteria andGoldGreaterThanOrEqualTo(Integer value) {
            addCriterion("gold >=", value, "gold");
            return this;
        }

        public Criteria andGoldLessThan(Integer value) {
            addCriterion("gold <", value, "gold");
            return this;
        }

        public Criteria andGoldLessThanOrEqualTo(Integer value) {
            addCriterion("gold <=", value, "gold");
            return this;
        }

        public Criteria andGoldIn(List<Integer> values) {
            addCriterion("gold in", values, "gold");
            return this;
        }

        public Criteria andGoldNotIn(List<Integer> values) {
            addCriterion("gold not in", values, "gold");
            return this;
        }

        public Criteria andGoldBetween(Integer value1, Integer value2) {
            addCriterion("gold between", value1, value2, "gold");
            return this;
        }

        public Criteria andGoldNotBetween(Integer value1, Integer value2) {
            addCriterion("gold not between", value1, value2, "gold");
            return this;
        }

        public Criteria andIsValidateIsNull() {
            addCriterion("is_validate is null");
            return this;
        }

        public Criteria andIsValidateIsNotNull() {
            addCriterion("is_validate is not null");
            return this;
        }

        public Criteria andIsValidateEqualTo(Boolean value) {
            addCriterion("is_validate =", value, "isValidate");
            return this;
        }

        public Criteria andIsValidateNotEqualTo(Boolean value) {
            addCriterion("is_validate <>", value, "isValidate");
            return this;
        }

        public Criteria andIsValidateGreaterThan(Boolean value) {
            addCriterion("is_validate >", value, "isValidate");
            return this;
        }

        public Criteria andIsValidateGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_validate >=", value, "isValidate");
            return this;
        }

        public Criteria andIsValidateLessThan(Boolean value) {
            addCriterion("is_validate <", value, "isValidate");
            return this;
        }

        public Criteria andIsValidateLessThanOrEqualTo(Boolean value) {
            addCriterion("is_validate <=", value, "isValidate");
            return this;
        }

        public Criteria andIsValidateIn(List<Boolean> values) {
            addCriterion("is_validate in", values, "isValidate");
            return this;
        }

        public Criteria andIsValidateNotIn(List<Boolean> values) {
            addCriterion("is_validate not in", values, "isValidate");
            return this;
        }

        public Criteria andIsValidateBetween(Boolean value1, Boolean value2) {
            addCriterion("is_validate between", value1, value2, "isValidate");
            return this;
        }

        public Criteria andIsValidateNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_validate not between", value1, value2, "isValidate");
            return this;
        }

        public Criteria andDisplayOrderIsNull() {
            addCriterion("display_order is null");
            return this;
        }

        public Criteria andDisplayOrderIsNotNull() {
            addCriterion("display_order is not null");
            return this;
        }

        public Criteria andDisplayOrderEqualTo(Integer value) {
            addCriterion("display_order =", value, "displayOrder");
            return this;
        }

        public Criteria andDisplayOrderNotEqualTo(Integer value) {
            addCriterion("display_order <>", value, "displayOrder");
            return this;
        }

        public Criteria andDisplayOrderGreaterThan(Integer value) {
            addCriterion("display_order >", value, "displayOrder");
            return this;
        }

        public Criteria andDisplayOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("display_order >=", value, "displayOrder");
            return this;
        }

        public Criteria andDisplayOrderLessThan(Integer value) {
            addCriterion("display_order <", value, "displayOrder");
            return this;
        }

        public Criteria andDisplayOrderLessThanOrEqualTo(Integer value) {
            addCriterion("display_order <=", value, "displayOrder");
            return this;
        }

        public Criteria andDisplayOrderIn(List<Integer> values) {
            addCriterion("display_order in", values, "displayOrder");
            return this;
        }

        public Criteria andDisplayOrderNotIn(List<Integer> values) {
            addCriterion("display_order not in", values, "displayOrder");
            return this;
        }

        public Criteria andDisplayOrderBetween(Integer value1, Integer value2) {
            addCriterion("display_order between", value1, value2, "displayOrder");
            return this;
        }

        public Criteria andDisplayOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("display_order not between", value1, value2, "displayOrder");
            return this;
        }

        public Criteria andMinAmountIsNull() {
            addCriterion("min_amount is null");
            return this;
        }

        public Criteria andMinAmountIsNotNull() {
            addCriterion("min_amount is not null");
            return this;
        }

        public Criteria andMinAmountEqualTo(Integer value) {
            addCriterion("min_amount =", value, "minAmount");
            return this;
        }

        public Criteria andMinAmountNotEqualTo(Integer value) {
            addCriterion("min_amount <>", value, "minAmount");
            return this;
        }

        public Criteria andMinAmountGreaterThan(Integer value) {
            addCriterion("min_amount >", value, "minAmount");
            return this;
        }

        public Criteria andMinAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("min_amount >=", value, "minAmount");
            return this;
        }

        public Criteria andMinAmountLessThan(Integer value) {
            addCriterion("min_amount <", value, "minAmount");
            return this;
        }

        public Criteria andMinAmountLessThanOrEqualTo(Integer value) {
            addCriterion("min_amount <=", value, "minAmount");
            return this;
        }

        public Criteria andMinAmountIn(List<Integer> values) {
            addCriterion("min_amount in", values, "minAmount");
            return this;
        }

        public Criteria andMinAmountNotIn(List<Integer> values) {
            addCriterion("min_amount not in", values, "minAmount");
            return this;
        }

        public Criteria andMinAmountBetween(Integer value1, Integer value2) {
            addCriterion("min_amount between", value1, value2, "minAmount");
            return this;
        }

        public Criteria andMinAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("min_amount not between", value1, value2, "minAmount");
            return this;
        }

        public Criteria andMaxAmountIsNull() {
            addCriterion("max_amount is null");
            return this;
        }

        public Criteria andMaxAmountIsNotNull() {
            addCriterion("max_amount is not null");
            return this;
        }

        public Criteria andMaxAmountEqualTo(Integer value) {
            addCriterion("max_amount =", value, "maxAmount");
            return this;
        }

        public Criteria andMaxAmountNotEqualTo(Integer value) {
            addCriterion("max_amount <>", value, "maxAmount");
            return this;
        }

        public Criteria andMaxAmountGreaterThan(Integer value) {
            addCriterion("max_amount >", value, "maxAmount");
            return this;
        }

        public Criteria andMaxAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("max_amount >=", value, "maxAmount");
            return this;
        }

        public Criteria andMaxAmountLessThan(Integer value) {
            addCriterion("max_amount <", value, "maxAmount");
            return this;
        }

        public Criteria andMaxAmountLessThanOrEqualTo(Integer value) {
            addCriterion("max_amount <=", value, "maxAmount");
            return this;
        }

        public Criteria andMaxAmountIn(List<Integer> values) {
            addCriterion("max_amount in", values, "maxAmount");
            return this;
        }

        public Criteria andMaxAmountNotIn(List<Integer> values) {
            addCriterion("max_amount not in", values, "maxAmount");
            return this;
        }

        public Criteria andMaxAmountBetween(Integer value1, Integer value2) {
            addCriterion("max_amount between", value1, value2, "maxAmount");
            return this;
        }

        public Criteria andMaxAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("max_amount not between", value1, value2, "maxAmount");
            return this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return this;
        }

        public Criteria andTypeEqualTo(Byte value) {
            addCriterion("type =", value, "type");
            return this;
        }

        public Criteria andTypeNotEqualTo(Byte value) {
            addCriterion("type <>", value, "type");
            return this;
        }

        public Criteria andTypeGreaterThan(Byte value) {
            addCriterion("type >", value, "type");
            return this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("type >=", value, "type");
            return this;
        }

        public Criteria andTypeLessThan(Byte value) {
            addCriterion("type <", value, "type");
            return this;
        }

        public Criteria andTypeLessThanOrEqualTo(Byte value) {
            addCriterion("type <=", value, "type");
            return this;
        }

        public Criteria andTypeIn(List<Byte> values) {
            addCriterion("type in", values, "type");
            return this;
        }

        public Criteria andTypeNotIn(List<Byte> values) {
            addCriterion("type not in", values, "type");
            return this;
        }

        public Criteria andTypeBetween(Byte value1, Byte value2) {
            addCriterion("type between", value1, value2, "type");
            return this;
        }

        public Criteria andTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("type not between", value1, value2, "type");
            return this;
        }

        public Criteria andBuyTypeIsNull() {
            addCriterion("buy_type is null");
            return this;
        }

        public Criteria andBuyTypeIsNotNull() {
            addCriterion("buy_type is not null");
            return this;
        }

        public Criteria andBuyTypeEqualTo(Integer value) {
            addCriterion("buy_type =", value, "buyType");
            return this;
        }

        public Criteria andBuyTypeNotEqualTo(Integer value) {
            addCriterion("buy_type <>", value, "buyType");
            return this;
        }

        public Criteria andBuyTypeGreaterThan(Integer value) {
            addCriterion("buy_type >", value, "buyType");
            return this;
        }

        public Criteria andBuyTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("buy_type >=", value, "buyType");
            return this;
        }

        public Criteria andBuyTypeLessThan(Integer value) {
            addCriterion("buy_type <", value, "buyType");
            return this;
        }

        public Criteria andBuyTypeLessThanOrEqualTo(Integer value) {
            addCriterion("buy_type <=", value, "buyType");
            return this;
        }

        public Criteria andBuyTypeIn(List<Integer> values) {
            addCriterion("buy_type in", values, "buyType");
            return this;
        }

        public Criteria andBuyTypeNotIn(List<Integer> values) {
            addCriterion("buy_type not in", values, "buyType");
            return this;
        }

        public Criteria andBuyTypeBetween(Integer value1, Integer value2) {
            addCriterion("buy_type between", value1, value2, "buyType");
            return this;
        }

        public Criteria andBuyTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("buy_type not between", value1, value2, "buyType");
            return this;
        }
    }
}