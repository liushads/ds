package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SpecBuffExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	public SpecBuffExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	protected SpecBuffExample(SpecBuffExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table spec_buff
	 * @ibatorgenerated  Thu Dec 27 01:02:12 CST 2012
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andSectIdIsNull() {
			addCriterion("sect_id is null");
			return this;
		}

		public Criteria andSectIdIsNotNull() {
			addCriterion("sect_id is not null");
			return this;
		}

		public Criteria andSectIdEqualTo(Integer value) {
			addCriterion("sect_id =", value, "sectId");
			return this;
		}

		public Criteria andSectIdNotEqualTo(Integer value) {
			addCriterion("sect_id <>", value, "sectId");
			return this;
		}

		public Criteria andSectIdGreaterThan(Integer value) {
			addCriterion("sect_id >", value, "sectId");
			return this;
		}

		public Criteria andSectIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("sect_id >=", value, "sectId");
			return this;
		}

		public Criteria andSectIdLessThan(Integer value) {
			addCriterion("sect_id <", value, "sectId");
			return this;
		}

		public Criteria andSectIdLessThanOrEqualTo(Integer value) {
			addCriterion("sect_id <=", value, "sectId");
			return this;
		}

		public Criteria andSectIdIn(List values) {
			addCriterion("sect_id in", values, "sectId");
			return this;
		}

		public Criteria andSectIdNotIn(List values) {
			addCriterion("sect_id not in", values, "sectId");
			return this;
		}

		public Criteria andSectIdBetween(Integer value1, Integer value2) {
			addCriterion("sect_id between", value1, value2, "sectId");
			return this;
		}

		public Criteria andSectIdNotBetween(Integer value1, Integer value2) {
			addCriterion("sect_id not between", value1, value2, "sectId");
			return this;
		}

		public Criteria andSpecTypeIdIsNull() {
			addCriterion("spec_type_id is null");
			return this;
		}

		public Criteria andSpecTypeIdIsNotNull() {
			addCriterion("spec_type_id is not null");
			return this;
		}

		public Criteria andSpecTypeIdEqualTo(Integer value) {
			addCriterion("spec_type_id =", value, "specTypeId");
			return this;
		}

		public Criteria andSpecTypeIdNotEqualTo(Integer value) {
			addCriterion("spec_type_id <>", value, "specTypeId");
			return this;
		}

		public Criteria andSpecTypeIdGreaterThan(Integer value) {
			addCriterion("spec_type_id >", value, "specTypeId");
			return this;
		}

		public Criteria andSpecTypeIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("spec_type_id >=", value, "specTypeId");
			return this;
		}

		public Criteria andSpecTypeIdLessThan(Integer value) {
			addCriterion("spec_type_id <", value, "specTypeId");
			return this;
		}

		public Criteria andSpecTypeIdLessThanOrEqualTo(Integer value) {
			addCriterion("spec_type_id <=", value, "specTypeId");
			return this;
		}

		public Criteria andSpecTypeIdIn(List values) {
			addCriterion("spec_type_id in", values, "specTypeId");
			return this;
		}

		public Criteria andSpecTypeIdNotIn(List values) {
			addCriterion("spec_type_id not in", values, "specTypeId");
			return this;
		}

		public Criteria andSpecTypeIdBetween(Integer value1, Integer value2) {
			addCriterion("spec_type_id between", value1, value2, "specTypeId");
			return this;
		}

		public Criteria andSpecTypeIdNotBetween(Integer value1, Integer value2) {
			addCriterion("spec_type_id not between", value1, value2,
					"specTypeId");
			return this;
		}

		public Criteria andLevelIsNull() {
			addCriterion("level is null");
			return this;
		}

		public Criteria andLevelIsNotNull() {
			addCriterion("level is not null");
			return this;
		}

		public Criteria andLevelEqualTo(Integer value) {
			addCriterion("level =", value, "level");
			return this;
		}

		public Criteria andLevelNotEqualTo(Integer value) {
			addCriterion("level <>", value, "level");
			return this;
		}

		public Criteria andLevelGreaterThan(Integer value) {
			addCriterion("level >", value, "level");
			return this;
		}

		public Criteria andLevelGreaterThanOrEqualTo(Integer value) {
			addCriterion("level >=", value, "level");
			return this;
		}

		public Criteria andLevelLessThan(Integer value) {
			addCriterion("level <", value, "level");
			return this;
		}

		public Criteria andLevelLessThanOrEqualTo(Integer value) {
			addCriterion("level <=", value, "level");
			return this;
		}

		public Criteria andLevelIn(List values) {
			addCriterion("level in", values, "level");
			return this;
		}

		public Criteria andLevelNotIn(List values) {
			addCriterion("level not in", values, "level");
			return this;
		}

		public Criteria andLevelBetween(Integer value1, Integer value2) {
			addCriterion("level between", value1, value2, "level");
			return this;
		}

		public Criteria andLevelNotBetween(Integer value1, Integer value2) {
			addCriterion("level not between", value1, value2, "level");
			return this;
		}

		public Criteria andAttackIsNull() {
			addCriterion("attack is null");
			return this;
		}

		public Criteria andAttackIsNotNull() {
			addCriterion("attack is not null");
			return this;
		}

		public Criteria andAttackEqualTo(Integer value) {
			addCriterion("attack =", value, "attack");
			return this;
		}

		public Criteria andAttackNotEqualTo(Integer value) {
			addCriterion("attack <>", value, "attack");
			return this;
		}

		public Criteria andAttackGreaterThan(Integer value) {
			addCriterion("attack >", value, "attack");
			return this;
		}

		public Criteria andAttackGreaterThanOrEqualTo(Integer value) {
			addCriterion("attack >=", value, "attack");
			return this;
		}

		public Criteria andAttackLessThan(Integer value) {
			addCriterion("attack <", value, "attack");
			return this;
		}

		public Criteria andAttackLessThanOrEqualTo(Integer value) {
			addCriterion("attack <=", value, "attack");
			return this;
		}

		public Criteria andAttackIn(List values) {
			addCriterion("attack in", values, "attack");
			return this;
		}

		public Criteria andAttackNotIn(List values) {
			addCriterion("attack not in", values, "attack");
			return this;
		}

		public Criteria andAttackBetween(Integer value1, Integer value2) {
			addCriterion("attack between", value1, value2, "attack");
			return this;
		}

		public Criteria andAttackNotBetween(Integer value1, Integer value2) {
			addCriterion("attack not between", value1, value2, "attack");
			return this;
		}

		public Criteria andDefenceIsNull() {
			addCriterion("defence is null");
			return this;
		}

		public Criteria andDefenceIsNotNull() {
			addCriterion("defence is not null");
			return this;
		}

		public Criteria andDefenceEqualTo(Integer value) {
			addCriterion("defence =", value, "defence");
			return this;
		}

		public Criteria andDefenceNotEqualTo(Integer value) {
			addCriterion("defence <>", value, "defence");
			return this;
		}

		public Criteria andDefenceGreaterThan(Integer value) {
			addCriterion("defence >", value, "defence");
			return this;
		}

		public Criteria andDefenceGreaterThanOrEqualTo(Integer value) {
			addCriterion("defence >=", value, "defence");
			return this;
		}

		public Criteria andDefenceLessThan(Integer value) {
			addCriterion("defence <", value, "defence");
			return this;
		}

		public Criteria andDefenceLessThanOrEqualTo(Integer value) {
			addCriterion("defence <=", value, "defence");
			return this;
		}

		public Criteria andDefenceIn(List values) {
			addCriterion("defence in", values, "defence");
			return this;
		}

		public Criteria andDefenceNotIn(List values) {
			addCriterion("defence not in", values, "defence");
			return this;
		}

		public Criteria andDefenceBetween(Integer value1, Integer value2) {
			addCriterion("defence between", value1, value2, "defence");
			return this;
		}

		public Criteria andDefenceNotBetween(Integer value1, Integer value2) {
			addCriterion("defence not between", value1, value2, "defence");
			return this;
		}

		public Criteria andHpIsNull() {
			addCriterion("hp is null");
			return this;
		}

		public Criteria andHpIsNotNull() {
			addCriterion("hp is not null");
			return this;
		}

		public Criteria andHpEqualTo(Integer value) {
			addCriterion("hp =", value, "hp");
			return this;
		}

		public Criteria andHpNotEqualTo(Integer value) {
			addCriterion("hp <>", value, "hp");
			return this;
		}

		public Criteria andHpGreaterThan(Integer value) {
			addCriterion("hp >", value, "hp");
			return this;
		}

		public Criteria andHpGreaterThanOrEqualTo(Integer value) {
			addCriterion("hp >=", value, "hp");
			return this;
		}

		public Criteria andHpLessThan(Integer value) {
			addCriterion("hp <", value, "hp");
			return this;
		}

		public Criteria andHpLessThanOrEqualTo(Integer value) {
			addCriterion("hp <=", value, "hp");
			return this;
		}

		public Criteria andHpIn(List values) {
			addCriterion("hp in", values, "hp");
			return this;
		}

		public Criteria andHpNotIn(List values) {
			addCriterion("hp not in", values, "hp");
			return this;
		}

		public Criteria andHpBetween(Integer value1, Integer value2) {
			addCriterion("hp between", value1, value2, "hp");
			return this;
		}

		public Criteria andHpNotBetween(Integer value1, Integer value2) {
			addCriterion("hp not between", value1, value2, "hp");
			return this;
		}

		public Criteria andCritIsNull() {
			addCriterion("crit is null");
			return this;
		}

		public Criteria andCritIsNotNull() {
			addCriterion("crit is not null");
			return this;
		}

		public Criteria andCritEqualTo(Integer value) {
			addCriterion("crit =", value, "crit");
			return this;
		}

		public Criteria andCritNotEqualTo(Integer value) {
			addCriterion("crit <>", value, "crit");
			return this;
		}

		public Criteria andCritGreaterThan(Integer value) {
			addCriterion("crit >", value, "crit");
			return this;
		}

		public Criteria andCritGreaterThanOrEqualTo(Integer value) {
			addCriterion("crit >=", value, "crit");
			return this;
		}

		public Criteria andCritLessThan(Integer value) {
			addCriterion("crit <", value, "crit");
			return this;
		}

		public Criteria andCritLessThanOrEqualTo(Integer value) {
			addCriterion("crit <=", value, "crit");
			return this;
		}

		public Criteria andCritIn(List values) {
			addCriterion("crit in", values, "crit");
			return this;
		}

		public Criteria andCritNotIn(List values) {
			addCriterion("crit not in", values, "crit");
			return this;
		}

		public Criteria andCritBetween(Integer value1, Integer value2) {
			addCriterion("crit between", value1, value2, "crit");
			return this;
		}

		public Criteria andCritNotBetween(Integer value1, Integer value2) {
			addCriterion("crit not between", value1, value2, "crit");
			return this;
		}

		public Criteria andParryIsNull() {
			addCriterion("parry is null");
			return this;
		}

		public Criteria andParryIsNotNull() {
			addCriterion("parry is not null");
			return this;
		}

		public Criteria andParryEqualTo(Integer value) {
			addCriterion("parry =", value, "parry");
			return this;
		}

		public Criteria andParryNotEqualTo(Integer value) {
			addCriterion("parry <>", value, "parry");
			return this;
		}

		public Criteria andParryGreaterThan(Integer value) {
			addCriterion("parry >", value, "parry");
			return this;
		}

		public Criteria andParryGreaterThanOrEqualTo(Integer value) {
			addCriterion("parry >=", value, "parry");
			return this;
		}

		public Criteria andParryLessThan(Integer value) {
			addCriterion("parry <", value, "parry");
			return this;
		}

		public Criteria andParryLessThanOrEqualTo(Integer value) {
			addCriterion("parry <=", value, "parry");
			return this;
		}

		public Criteria andParryIn(List values) {
			addCriterion("parry in", values, "parry");
			return this;
		}

		public Criteria andParryNotIn(List values) {
			addCriterion("parry not in", values, "parry");
			return this;
		}

		public Criteria andParryBetween(Integer value1, Integer value2) {
			addCriterion("parry between", value1, value2, "parry");
			return this;
		}

		public Criteria andParryNotBetween(Integer value1, Integer value2) {
			addCriterion("parry not between", value1, value2, "parry");
			return this;
		}
	}
}