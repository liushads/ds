package com.ppsea.ds.data.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ItemPropertyExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	public ItemPropertyExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	protected ItemPropertyExample(ItemPropertyExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table item_property
	 * @ibatorgenerated  Mon May 17 11:07:51 CST 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return this;
		}

		public Criteria andNameIn(List values) {
			addCriterion("name in", values, "name");
			return this;
		}

		public Criteria andNameNotIn(List values) {
			addCriterion("name not in", values, "name");
			return this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return this;
		}

		public Criteria andDescriptionIsNull() {
			addCriterion("description is null");
			return this;
		}

		public Criteria andDescriptionIsNotNull() {
			addCriterion("description is not null");
			return this;
		}

		public Criteria andDescriptionEqualTo(String value) {
			addCriterion("description =", value, "description");
			return this;
		}

		public Criteria andDescriptionNotEqualTo(String value) {
			addCriterion("description <>", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThan(String value) {
			addCriterion("description >", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("description >=", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThan(String value) {
			addCriterion("description <", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThanOrEqualTo(String value) {
			addCriterion("description <=", value, "description");
			return this;
		}

		public Criteria andDescriptionLike(String value) {
			addCriterion("description like", value, "description");
			return this;
		}

		public Criteria andDescriptionNotLike(String value) {
			addCriterion("description not like", value, "description");
			return this;
		}

		public Criteria andDescriptionIn(List values) {
			addCriterion("description in", values, "description");
			return this;
		}

		public Criteria andDescriptionNotIn(List values) {
			addCriterion("description not in", values, "description");
			return this;
		}

		public Criteria andDescriptionBetween(String value1, String value2) {
			addCriterion("description between", value1, value2, "description");
			return this;
		}

		public Criteria andDescriptionNotBetween(String value1, String value2) {
			addCriterion("description not between", value1, value2,
					"description");
			return this;
		}

		public Criteria andProbabilityIsNull() {
			addCriterion("probability is null");
			return this;
		}

		public Criteria andProbabilityIsNotNull() {
			addCriterion("probability is not null");
			return this;
		}

		public Criteria andProbabilityEqualTo(Integer value) {
			addCriterion("probability =", value, "probability");
			return this;
		}

		public Criteria andProbabilityNotEqualTo(Integer value) {
			addCriterion("probability <>", value, "probability");
			return this;
		}

		public Criteria andProbabilityGreaterThan(Integer value) {
			addCriterion("probability >", value, "probability");
			return this;
		}

		public Criteria andProbabilityGreaterThanOrEqualTo(Integer value) {
			addCriterion("probability >=", value, "probability");
			return this;
		}

		public Criteria andProbabilityLessThan(Integer value) {
			addCriterion("probability <", value, "probability");
			return this;
		}

		public Criteria andProbabilityLessThanOrEqualTo(Integer value) {
			addCriterion("probability <=", value, "probability");
			return this;
		}

		public Criteria andProbabilityIn(List values) {
			addCriterion("probability in", values, "probability");
			return this;
		}

		public Criteria andProbabilityNotIn(List values) {
			addCriterion("probability not in", values, "probability");
			return this;
		}

		public Criteria andProbabilityBetween(Integer value1, Integer value2) {
			addCriterion("probability between", value1, value2, "probability");
			return this;
		}

		public Criteria andProbabilityNotBetween(Integer value1, Integer value2) {
			addCriterion("probability not between", value1, value2,
					"probability");
			return this;
		}

		public Criteria andHpIsNull() {
			addCriterion("hp is null");
			return this;
		}

		public Criteria andHpIsNotNull() {
			addCriterion("hp is not null");
			return this;
		}

		public Criteria andHpEqualTo(Integer value) {
			addCriterion("hp =", value, "hp");
			return this;
		}

		public Criteria andHpNotEqualTo(Integer value) {
			addCriterion("hp <>", value, "hp");
			return this;
		}

		public Criteria andHpGreaterThan(Integer value) {
			addCriterion("hp >", value, "hp");
			return this;
		}

		public Criteria andHpGreaterThanOrEqualTo(Integer value) {
			addCriterion("hp >=", value, "hp");
			return this;
		}

		public Criteria andHpLessThan(Integer value) {
			addCriterion("hp <", value, "hp");
			return this;
		}

		public Criteria andHpLessThanOrEqualTo(Integer value) {
			addCriterion("hp <=", value, "hp");
			return this;
		}

		public Criteria andHpIn(List values) {
			addCriterion("hp in", values, "hp");
			return this;
		}

		public Criteria andHpNotIn(List values) {
			addCriterion("hp not in", values, "hp");
			return this;
		}

		public Criteria andHpBetween(Integer value1, Integer value2) {
			addCriterion("hp between", value1, value2, "hp");
			return this;
		}

		public Criteria andHpNotBetween(Integer value1, Integer value2) {
			addCriterion("hp not between", value1, value2, "hp");
			return this;
		}

		public Criteria andMpIsNull() {
			addCriterion("mp is null");
			return this;
		}

		public Criteria andMpIsNotNull() {
			addCriterion("mp is not null");
			return this;
		}

		public Criteria andMpEqualTo(Integer value) {
			addCriterion("mp =", value, "mp");
			return this;
		}

		public Criteria andMpNotEqualTo(Integer value) {
			addCriterion("mp <>", value, "mp");
			return this;
		}

		public Criteria andMpGreaterThan(Integer value) {
			addCriterion("mp >", value, "mp");
			return this;
		}

		public Criteria andMpGreaterThanOrEqualTo(Integer value) {
			addCriterion("mp >=", value, "mp");
			return this;
		}

		public Criteria andMpLessThan(Integer value) {
			addCriterion("mp <", value, "mp");
			return this;
		}

		public Criteria andMpLessThanOrEqualTo(Integer value) {
			addCriterion("mp <=", value, "mp");
			return this;
		}

		public Criteria andMpIn(List values) {
			addCriterion("mp in", values, "mp");
			return this;
		}

		public Criteria andMpNotIn(List values) {
			addCriterion("mp not in", values, "mp");
			return this;
		}

		public Criteria andMpBetween(Integer value1, Integer value2) {
			addCriterion("mp between", value1, value2, "mp");
			return this;
		}

		public Criteria andMpNotBetween(Integer value1, Integer value2) {
			addCriterion("mp not between", value1, value2, "mp");
			return this;
		}

		public Criteria andAttackIsNull() {
			addCriterion("attack is null");
			return this;
		}

		public Criteria andAttackIsNotNull() {
			addCriterion("attack is not null");
			return this;
		}

		public Criteria andAttackEqualTo(Integer value) {
			addCriterion("attack =", value, "attack");
			return this;
		}

		public Criteria andAttackNotEqualTo(Integer value) {
			addCriterion("attack <>", value, "attack");
			return this;
		}

		public Criteria andAttackGreaterThan(Integer value) {
			addCriterion("attack >", value, "attack");
			return this;
		}

		public Criteria andAttackGreaterThanOrEqualTo(Integer value) {
			addCriterion("attack >=", value, "attack");
			return this;
		}

		public Criteria andAttackLessThan(Integer value) {
			addCriterion("attack <", value, "attack");
			return this;
		}

		public Criteria andAttackLessThanOrEqualTo(Integer value) {
			addCriterion("attack <=", value, "attack");
			return this;
		}

		public Criteria andAttackIn(List values) {
			addCriterion("attack in", values, "attack");
			return this;
		}

		public Criteria andAttackNotIn(List values) {
			addCriterion("attack not in", values, "attack");
			return this;
		}

		public Criteria andAttackBetween(Integer value1, Integer value2) {
			addCriterion("attack between", value1, value2, "attack");
			return this;
		}

		public Criteria andAttackNotBetween(Integer value1, Integer value2) {
			addCriterion("attack not between", value1, value2, "attack");
			return this;
		}

		public Criteria andDefenceIsNull() {
			addCriterion("defence is null");
			return this;
		}

		public Criteria andDefenceIsNotNull() {
			addCriterion("defence is not null");
			return this;
		}

		public Criteria andDefenceEqualTo(Integer value) {
			addCriterion("defence =", value, "defence");
			return this;
		}

		public Criteria andDefenceNotEqualTo(Integer value) {
			addCriterion("defence <>", value, "defence");
			return this;
		}

		public Criteria andDefenceGreaterThan(Integer value) {
			addCriterion("defence >", value, "defence");
			return this;
		}

		public Criteria andDefenceGreaterThanOrEqualTo(Integer value) {
			addCriterion("defence >=", value, "defence");
			return this;
		}

		public Criteria andDefenceLessThan(Integer value) {
			addCriterion("defence <", value, "defence");
			return this;
		}

		public Criteria andDefenceLessThanOrEqualTo(Integer value) {
			addCriterion("defence <=", value, "defence");
			return this;
		}

		public Criteria andDefenceIn(List values) {
			addCriterion("defence in", values, "defence");
			return this;
		}

		public Criteria andDefenceNotIn(List values) {
			addCriterion("defence not in", values, "defence");
			return this;
		}

		public Criteria andDefenceBetween(Integer value1, Integer value2) {
			addCriterion("defence between", value1, value2, "defence");
			return this;
		}

		public Criteria andDefenceNotBetween(Integer value1, Integer value2) {
			addCriterion("defence not between", value1, value2, "defence");
			return this;
		}

		public Criteria andAgilityIsNull() {
			addCriterion("agility is null");
			return this;
		}

		public Criteria andAgilityIsNotNull() {
			addCriterion("agility is not null");
			return this;
		}

		public Criteria andAgilityEqualTo(Integer value) {
			addCriterion("agility =", value, "agility");
			return this;
		}

		public Criteria andAgilityNotEqualTo(Integer value) {
			addCriterion("agility <>", value, "agility");
			return this;
		}

		public Criteria andAgilityGreaterThan(Integer value) {
			addCriterion("agility >", value, "agility");
			return this;
		}

		public Criteria andAgilityGreaterThanOrEqualTo(Integer value) {
			addCriterion("agility >=", value, "agility");
			return this;
		}

		public Criteria andAgilityLessThan(Integer value) {
			addCriterion("agility <", value, "agility");
			return this;
		}

		public Criteria andAgilityLessThanOrEqualTo(Integer value) {
			addCriterion("agility <=", value, "agility");
			return this;
		}

		public Criteria andAgilityIn(List values) {
			addCriterion("agility in", values, "agility");
			return this;
		}

		public Criteria andAgilityNotIn(List values) {
			addCriterion("agility not in", values, "agility");
			return this;
		}

		public Criteria andAgilityBetween(Integer value1, Integer value2) {
			addCriterion("agility between", value1, value2, "agility");
			return this;
		}

		public Criteria andAgilityNotBetween(Integer value1, Integer value2) {
			addCriterion("agility not between", value1, value2, "agility");
			return this;
		}

		public Criteria andSunderIsNull() {
			addCriterion("sunder is null");
			return this;
		}

		public Criteria andSunderIsNotNull() {
			addCriterion("sunder is not null");
			return this;
		}

		public Criteria andSunderEqualTo(Integer value) {
			addCriterion("sunder =", value, "sunder");
			return this;
		}

		public Criteria andSunderNotEqualTo(Integer value) {
			addCriterion("sunder <>", value, "sunder");
			return this;
		}

		public Criteria andSunderGreaterThan(Integer value) {
			addCriterion("sunder >", value, "sunder");
			return this;
		}

		public Criteria andSunderGreaterThanOrEqualTo(Integer value) {
			addCriterion("sunder >=", value, "sunder");
			return this;
		}

		public Criteria andSunderLessThan(Integer value) {
			addCriterion("sunder <", value, "sunder");
			return this;
		}

		public Criteria andSunderLessThanOrEqualTo(Integer value) {
			addCriterion("sunder <=", value, "sunder");
			return this;
		}

		public Criteria andSunderIn(List values) {
			addCriterion("sunder in", values, "sunder");
			return this;
		}

		public Criteria andSunderNotIn(List values) {
			addCriterion("sunder not in", values, "sunder");
			return this;
		}

		public Criteria andSunderBetween(Integer value1, Integer value2) {
			addCriterion("sunder between", value1, value2, "sunder");
			return this;
		}

		public Criteria andSunderNotBetween(Integer value1, Integer value2) {
			addCriterion("sunder not between", value1, value2, "sunder");
			return this;
		}

		public Criteria andAntisunderIsNull() {
			addCriterion("antiSunder is null");
			return this;
		}

		public Criteria andAntisunderIsNotNull() {
			addCriterion("antiSunder is not null");
			return this;
		}

		public Criteria andAntisunderEqualTo(Integer value) {
			addCriterion("antiSunder =", value, "antisunder");
			return this;
		}

		public Criteria andAntisunderNotEqualTo(Integer value) {
			addCriterion("antiSunder <>", value, "antisunder");
			return this;
		}

		public Criteria andAntisunderGreaterThan(Integer value) {
			addCriterion("antiSunder >", value, "antisunder");
			return this;
		}

		public Criteria andAntisunderGreaterThanOrEqualTo(Integer value) {
			addCriterion("antiSunder >=", value, "antisunder");
			return this;
		}

		public Criteria andAntisunderLessThan(Integer value) {
			addCriterion("antiSunder <", value, "antisunder");
			return this;
		}

		public Criteria andAntisunderLessThanOrEqualTo(Integer value) {
			addCriterion("antiSunder <=", value, "antisunder");
			return this;
		}

		public Criteria andAntisunderIn(List values) {
			addCriterion("antiSunder in", values, "antisunder");
			return this;
		}

		public Criteria andAntisunderNotIn(List values) {
			addCriterion("antiSunder not in", values, "antisunder");
			return this;
		}

		public Criteria andAntisunderBetween(Integer value1, Integer value2) {
			addCriterion("antiSunder between", value1, value2, "antisunder");
			return this;
		}

		public Criteria andAntisunderNotBetween(Integer value1, Integer value2) {
			addCriterion("antiSunder not between", value1, value2, "antisunder");
			return this;
		}

		public Criteria andSealIsNull() {
			addCriterion("seal is null");
			return this;
		}

		public Criteria andSealIsNotNull() {
			addCriterion("seal is not null");
			return this;
		}

		public Criteria andSealEqualTo(Integer value) {
			addCriterion("seal =", value, "seal");
			return this;
		}

		public Criteria andSealNotEqualTo(Integer value) {
			addCriterion("seal <>", value, "seal");
			return this;
		}

		public Criteria andSealGreaterThan(Integer value) {
			addCriterion("seal >", value, "seal");
			return this;
		}

		public Criteria andSealGreaterThanOrEqualTo(Integer value) {
			addCriterion("seal >=", value, "seal");
			return this;
		}

		public Criteria andSealLessThan(Integer value) {
			addCriterion("seal <", value, "seal");
			return this;
		}

		public Criteria andSealLessThanOrEqualTo(Integer value) {
			addCriterion("seal <=", value, "seal");
			return this;
		}

		public Criteria andSealIn(List values) {
			addCriterion("seal in", values, "seal");
			return this;
		}

		public Criteria andSealNotIn(List values) {
			addCriterion("seal not in", values, "seal");
			return this;
		}

		public Criteria andSealBetween(Integer value1, Integer value2) {
			addCriterion("seal between", value1, value2, "seal");
			return this;
		}

		public Criteria andSealNotBetween(Integer value1, Integer value2) {
			addCriterion("seal not between", value1, value2, "seal");
			return this;
		}

		public Criteria andAntisealIsNull() {
			addCriterion("antiSeal is null");
			return this;
		}

		public Criteria andAntisealIsNotNull() {
			addCriterion("antiSeal is not null");
			return this;
		}

		public Criteria andAntisealEqualTo(Integer value) {
			addCriterion("antiSeal =", value, "antiseal");
			return this;
		}

		public Criteria andAntisealNotEqualTo(Integer value) {
			addCriterion("antiSeal <>", value, "antiseal");
			return this;
		}

		public Criteria andAntisealGreaterThan(Integer value) {
			addCriterion("antiSeal >", value, "antiseal");
			return this;
		}

		public Criteria andAntisealGreaterThanOrEqualTo(Integer value) {
			addCriterion("antiSeal >=", value, "antiseal");
			return this;
		}

		public Criteria andAntisealLessThan(Integer value) {
			addCriterion("antiSeal <", value, "antiseal");
			return this;
		}

		public Criteria andAntisealLessThanOrEqualTo(Integer value) {
			addCriterion("antiSeal <=", value, "antiseal");
			return this;
		}

		public Criteria andAntisealIn(List values) {
			addCriterion("antiSeal in", values, "antiseal");
			return this;
		}

		public Criteria andAntisealNotIn(List values) {
			addCriterion("antiSeal not in", values, "antiseal");
			return this;
		}

		public Criteria andAntisealBetween(Integer value1, Integer value2) {
			addCriterion("antiSeal between", value1, value2, "antiseal");
			return this;
		}

		public Criteria andAntisealNotBetween(Integer value1, Integer value2) {
			addCriterion("antiSeal not between", value1, value2, "antiseal");
			return this;
		}

		public Criteria andPoisonIsNull() {
			addCriterion("poison is null");
			return this;
		}

		public Criteria andPoisonIsNotNull() {
			addCriterion("poison is not null");
			return this;
		}

		public Criteria andPoisonEqualTo(Integer value) {
			addCriterion("poison =", value, "poison");
			return this;
		}

		public Criteria andPoisonNotEqualTo(Integer value) {
			addCriterion("poison <>", value, "poison");
			return this;
		}

		public Criteria andPoisonGreaterThan(Integer value) {
			addCriterion("poison >", value, "poison");
			return this;
		}

		public Criteria andPoisonGreaterThanOrEqualTo(Integer value) {
			addCriterion("poison >=", value, "poison");
			return this;
		}

		public Criteria andPoisonLessThan(Integer value) {
			addCriterion("poison <", value, "poison");
			return this;
		}

		public Criteria andPoisonLessThanOrEqualTo(Integer value) {
			addCriterion("poison <=", value, "poison");
			return this;
		}

		public Criteria andPoisonIn(List values) {
			addCriterion("poison in", values, "poison");
			return this;
		}

		public Criteria andPoisonNotIn(List values) {
			addCriterion("poison not in", values, "poison");
			return this;
		}

		public Criteria andPoisonBetween(Integer value1, Integer value2) {
			addCriterion("poison between", value1, value2, "poison");
			return this;
		}

		public Criteria andPoisonNotBetween(Integer value1, Integer value2) {
			addCriterion("poison not between", value1, value2, "poison");
			return this;
		}

		public Criteria andAntipoisonIsNull() {
			addCriterion("antiPoison is null");
			return this;
		}

		public Criteria andAntipoisonIsNotNull() {
			addCriterion("antiPoison is not null");
			return this;
		}

		public Criteria andAntipoisonEqualTo(Integer value) {
			addCriterion("antiPoison =", value, "antipoison");
			return this;
		}

		public Criteria andAntipoisonNotEqualTo(Integer value) {
			addCriterion("antiPoison <>", value, "antipoison");
			return this;
		}

		public Criteria andAntipoisonGreaterThan(Integer value) {
			addCriterion("antiPoison >", value, "antipoison");
			return this;
		}

		public Criteria andAntipoisonGreaterThanOrEqualTo(Integer value) {
			addCriterion("antiPoison >=", value, "antipoison");
			return this;
		}

		public Criteria andAntipoisonLessThan(Integer value) {
			addCriterion("antiPoison <", value, "antipoison");
			return this;
		}

		public Criteria andAntipoisonLessThanOrEqualTo(Integer value) {
			addCriterion("antiPoison <=", value, "antipoison");
			return this;
		}

		public Criteria andAntipoisonIn(List values) {
			addCriterion("antiPoison in", values, "antipoison");
			return this;
		}

		public Criteria andAntipoisonNotIn(List values) {
			addCriterion("antiPoison not in", values, "antipoison");
			return this;
		}

		public Criteria andAntipoisonBetween(Integer value1, Integer value2) {
			addCriterion("antiPoison between", value1, value2, "antipoison");
			return this;
		}

		public Criteria andAntipoisonNotBetween(Integer value1, Integer value2) {
			addCriterion("antiPoison not between", value1, value2, "antipoison");
			return this;
		}

		public Criteria andSlowIsNull() {
			addCriterion("slow is null");
			return this;
		}

		public Criteria andSlowIsNotNull() {
			addCriterion("slow is not null");
			return this;
		}

		public Criteria andSlowEqualTo(Integer value) {
			addCriterion("slow =", value, "slow");
			return this;
		}

		public Criteria andSlowNotEqualTo(Integer value) {
			addCriterion("slow <>", value, "slow");
			return this;
		}

		public Criteria andSlowGreaterThan(Integer value) {
			addCriterion("slow >", value, "slow");
			return this;
		}

		public Criteria andSlowGreaterThanOrEqualTo(Integer value) {
			addCriterion("slow >=", value, "slow");
			return this;
		}

		public Criteria andSlowLessThan(Integer value) {
			addCriterion("slow <", value, "slow");
			return this;
		}

		public Criteria andSlowLessThanOrEqualTo(Integer value) {
			addCriterion("slow <=", value, "slow");
			return this;
		}

		public Criteria andSlowIn(List values) {
			addCriterion("slow in", values, "slow");
			return this;
		}

		public Criteria andSlowNotIn(List values) {
			addCriterion("slow not in", values, "slow");
			return this;
		}

		public Criteria andSlowBetween(Integer value1, Integer value2) {
			addCriterion("slow between", value1, value2, "slow");
			return this;
		}

		public Criteria andSlowNotBetween(Integer value1, Integer value2) {
			addCriterion("slow not between", value1, value2, "slow");
			return this;
		}

		public Criteria andAntislowIsNull() {
			addCriterion("antiSlow is null");
			return this;
		}

		public Criteria andAntislowIsNotNull() {
			addCriterion("antiSlow is not null");
			return this;
		}

		public Criteria andAntislowEqualTo(Integer value) {
			addCriterion("antiSlow =", value, "antislow");
			return this;
		}

		public Criteria andAntislowNotEqualTo(Integer value) {
			addCriterion("antiSlow <>", value, "antislow");
			return this;
		}

		public Criteria andAntislowGreaterThan(Integer value) {
			addCriterion("antiSlow >", value, "antislow");
			return this;
		}

		public Criteria andAntislowGreaterThanOrEqualTo(Integer value) {
			addCriterion("antiSlow >=", value, "antislow");
			return this;
		}

		public Criteria andAntislowLessThan(Integer value) {
			addCriterion("antiSlow <", value, "antislow");
			return this;
		}

		public Criteria andAntislowLessThanOrEqualTo(Integer value) {
			addCriterion("antiSlow <=", value, "antislow");
			return this;
		}

		public Criteria andAntislowIn(List values) {
			addCriterion("antiSlow in", values, "antislow");
			return this;
		}

		public Criteria andAntislowNotIn(List values) {
			addCriterion("antiSlow not in", values, "antislow");
			return this;
		}

		public Criteria andAntislowBetween(Integer value1, Integer value2) {
			addCriterion("antiSlow between", value1, value2, "antislow");
			return this;
		}

		public Criteria andAntislowNotBetween(Integer value1, Integer value2) {
			addCriterion("antiSlow not between", value1, value2, "antislow");
			return this;
		}

		public Criteria andBrokensoulIsNull() {
			addCriterion("brokensoul is null");
			return this;
		}

		public Criteria andBrokensoulIsNotNull() {
			addCriterion("brokensoul is not null");
			return this;
		}

		public Criteria andBrokensoulEqualTo(Integer value) {
			addCriterion("brokensoul =", value, "brokensoul");
			return this;
		}

		public Criteria andBrokensoulNotEqualTo(Integer value) {
			addCriterion("brokensoul <>", value, "brokensoul");
			return this;
		}

		public Criteria andBrokensoulGreaterThan(Integer value) {
			addCriterion("brokensoul >", value, "brokensoul");
			return this;
		}

		public Criteria andBrokensoulGreaterThanOrEqualTo(Integer value) {
			addCriterion("brokensoul >=", value, "brokensoul");
			return this;
		}

		public Criteria andBrokensoulLessThan(Integer value) {
			addCriterion("brokensoul <", value, "brokensoul");
			return this;
		}

		public Criteria andBrokensoulLessThanOrEqualTo(Integer value) {
			addCriterion("brokensoul <=", value, "brokensoul");
			return this;
		}

		public Criteria andBrokensoulIn(List values) {
			addCriterion("brokensoul in", values, "brokensoul");
			return this;
		}

		public Criteria andBrokensoulNotIn(List values) {
			addCriterion("brokensoul not in", values, "brokensoul");
			return this;
		}

		public Criteria andBrokensoulBetween(Integer value1, Integer value2) {
			addCriterion("brokensoul between", value1, value2, "brokensoul");
			return this;
		}

		public Criteria andBrokensoulNotBetween(Integer value1, Integer value2) {
			addCriterion("brokensoul not between", value1, value2, "brokensoul");
			return this;
		}

		public Criteria andAntibrokensoulIsNull() {
			addCriterion("antiBrokensoul is null");
			return this;
		}

		public Criteria andAntibrokensoulIsNotNull() {
			addCriterion("antiBrokensoul is not null");
			return this;
		}

		public Criteria andAntibrokensoulEqualTo(Integer value) {
			addCriterion("antiBrokensoul =", value, "antibrokensoul");
			return this;
		}

		public Criteria andAntibrokensoulNotEqualTo(Integer value) {
			addCriterion("antiBrokensoul <>", value, "antibrokensoul");
			return this;
		}

		public Criteria andAntibrokensoulGreaterThan(Integer value) {
			addCriterion("antiBrokensoul >", value, "antibrokensoul");
			return this;
		}

		public Criteria andAntibrokensoulGreaterThanOrEqualTo(Integer value) {
			addCriterion("antiBrokensoul >=", value, "antibrokensoul");
			return this;
		}

		public Criteria andAntibrokensoulLessThan(Integer value) {
			addCriterion("antiBrokensoul <", value, "antibrokensoul");
			return this;
		}

		public Criteria andAntibrokensoulLessThanOrEqualTo(Integer value) {
			addCriterion("antiBrokensoul <=", value, "antibrokensoul");
			return this;
		}

		public Criteria andAntibrokensoulIn(List values) {
			addCriterion("antiBrokensoul in", values, "antibrokensoul");
			return this;
		}

		public Criteria andAntibrokensoulNotIn(List values) {
			addCriterion("antiBrokensoul not in", values, "antibrokensoul");
			return this;
		}

		public Criteria andAntibrokensoulBetween(Integer value1, Integer value2) {
			addCriterion("antiBrokensoul between", value1, value2,
					"antibrokensoul");
			return this;
		}

		public Criteria andAntibrokensoulNotBetween(Integer value1,
				Integer value2) {
			addCriterion("antiBrokensoul not between", value1, value2,
					"antibrokensoul");
			return this;
		}

		public Criteria andReboundIsNull() {
			addCriterion("rebound is null");
			return this;
		}

		public Criteria andReboundIsNotNull() {
			addCriterion("rebound is not null");
			return this;
		}

		public Criteria andReboundEqualTo(Integer value) {
			addCriterion("rebound =", value, "rebound");
			return this;
		}

		public Criteria andReboundNotEqualTo(Integer value) {
			addCriterion("rebound <>", value, "rebound");
			return this;
		}

		public Criteria andReboundGreaterThan(Integer value) {
			addCriterion("rebound >", value, "rebound");
			return this;
		}

		public Criteria andReboundGreaterThanOrEqualTo(Integer value) {
			addCriterion("rebound >=", value, "rebound");
			return this;
		}

		public Criteria andReboundLessThan(Integer value) {
			addCriterion("rebound <", value, "rebound");
			return this;
		}

		public Criteria andReboundLessThanOrEqualTo(Integer value) {
			addCriterion("rebound <=", value, "rebound");
			return this;
		}

		public Criteria andReboundIn(List values) {
			addCriterion("rebound in", values, "rebound");
			return this;
		}

		public Criteria andReboundNotIn(List values) {
			addCriterion("rebound not in", values, "rebound");
			return this;
		}

		public Criteria andReboundBetween(Integer value1, Integer value2) {
			addCriterion("rebound between", value1, value2, "rebound");
			return this;
		}

		public Criteria andReboundNotBetween(Integer value1, Integer value2) {
			addCriterion("rebound not between", value1, value2, "rebound");
			return this;
		}

		public Criteria andAntireboundIsNull() {
			addCriterion("antiRebound is null");
			return this;
		}

		public Criteria andAntireboundIsNotNull() {
			addCriterion("antiRebound is not null");
			return this;
		}

		public Criteria andAntireboundEqualTo(Integer value) {
			addCriterion("antiRebound =", value, "antirebound");
			return this;
		}

		public Criteria andAntireboundNotEqualTo(Integer value) {
			addCriterion("antiRebound <>", value, "antirebound");
			return this;
		}

		public Criteria andAntireboundGreaterThan(Integer value) {
			addCriterion("antiRebound >", value, "antirebound");
			return this;
		}

		public Criteria andAntireboundGreaterThanOrEqualTo(Integer value) {
			addCriterion("antiRebound >=", value, "antirebound");
			return this;
		}

		public Criteria andAntireboundLessThan(Integer value) {
			addCriterion("antiRebound <", value, "antirebound");
			return this;
		}

		public Criteria andAntireboundLessThanOrEqualTo(Integer value) {
			addCriterion("antiRebound <=", value, "antirebound");
			return this;
		}

		public Criteria andAntireboundIn(List values) {
			addCriterion("antiRebound in", values, "antirebound");
			return this;
		}

		public Criteria andAntireboundNotIn(List values) {
			addCriterion("antiRebound not in", values, "antirebound");
			return this;
		}

		public Criteria andAntireboundBetween(Integer value1, Integer value2) {
			addCriterion("antiRebound between", value1, value2, "antirebound");
			return this;
		}

		public Criteria andAntireboundNotBetween(Integer value1, Integer value2) {
			addCriterion("antiRebound not between", value1, value2,
					"antirebound");
			return this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("type is null");
			return this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("type is not null");
			return this;
		}

		public Criteria andTypeEqualTo(Integer value) {
			addCriterion("type =", value, "type");
			return this;
		}

		public Criteria andTypeNotEqualTo(Integer value) {
			addCriterion("type <>", value, "type");
			return this;
		}

		public Criteria andTypeGreaterThan(Integer value) {
			addCriterion("type >", value, "type");
			return this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("type >=", value, "type");
			return this;
		}

		public Criteria andTypeLessThan(Integer value) {
			addCriterion("type <", value, "type");
			return this;
		}

		public Criteria andTypeLessThanOrEqualTo(Integer value) {
			addCriterion("type <=", value, "type");
			return this;
		}

		public Criteria andTypeIn(List values) {
			addCriterion("type in", values, "type");
			return this;
		}

		public Criteria andTypeNotIn(List values) {
			addCriterion("type not in", values, "type");
			return this;
		}

		public Criteria andTypeBetween(Integer value1, Integer value2) {
			addCriterion("type between", value1, value2, "type");
			return this;
		}

		public Criteria andTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("type not between", value1, value2, "type");
			return this;
		}

		public Criteria andUseTypeIsNull() {
			addCriterion("use_type is null");
			return this;
		}

		public Criteria andUseTypeIsNotNull() {
			addCriterion("use_type is not null");
			return this;
		}

		public Criteria andUseTypeEqualTo(Integer value) {
			addCriterion("use_type =", value, "useType");
			return this;
		}

		public Criteria andUseTypeNotEqualTo(Integer value) {
			addCriterion("use_type <>", value, "useType");
			return this;
		}

		public Criteria andUseTypeGreaterThan(Integer value) {
			addCriterion("use_type >", value, "useType");
			return this;
		}

		public Criteria andUseTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("use_type >=", value, "useType");
			return this;
		}

		public Criteria andUseTypeLessThan(Integer value) {
			addCriterion("use_type <", value, "useType");
			return this;
		}

		public Criteria andUseTypeLessThanOrEqualTo(Integer value) {
			addCriterion("use_type <=", value, "useType");
			return this;
		}

		public Criteria andUseTypeIn(List values) {
			addCriterion("use_type in", values, "useType");
			return this;
		}

		public Criteria andUseTypeNotIn(List values) {
			addCriterion("use_type not in", values, "useType");
			return this;
		}

		public Criteria andUseTypeBetween(Integer value1, Integer value2) {
			addCriterion("use_type between", value1, value2, "useType");
			return this;
		}

		public Criteria andUseTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("use_type not between", value1, value2, "useType");
			return this;
		}
	}
}